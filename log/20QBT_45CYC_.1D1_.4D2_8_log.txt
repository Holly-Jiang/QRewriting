----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.12499117851257324

[0], [15], [7, 19], [10, 11], [1, 3], [4, 18], [0], [4], [7, 19], [3, 8], [14, 12], [15, 17], [9, 6], [18, 10], [10], [5], [19, 14], [7, 3], [18, 15], [14], [11], [6], [10, 9], [7, 3], [5, 18], [10], [15], [14, 8], [4, 2], [13, 5], [3, 8], [17, 11], [7, 1], [9, 6], [19], [3, 8], [9, 14], [2, 7], [4, 16], [15, 17], [1], [7], [19], [18], [3, 8], [10, 11], [14, 0], [12], [14, 8], [18, 16], [15, 17], [8], [7], [5], [14, 0], [16, 19], [1, 3], [9, 6], [8], [10, 11], [4, 18], [1, 3], [16, 19], [10], [19], [17], [8, 0], [4, 16], [13, 5], [7, 3], [9, 14], [8], [16, 9], [18, 10], [4, 2], [12], [8, 0], [15, 10], [18, 16], [4, 2], [1, 3], [8, 0], [4, 2], [18, 10], [7, 3], [17, 11], [14, 12], [8, 0], [15, 17], [2, 7], [1, 3], [5, 10], [0], [4, 2], [11, 6], [9, 14], [16, 19], [0], [2], [7], [18, 10], [17, 11], [8, 12], [16, 9], [0], [13], [2, 16], [4, 18], [8, 12], [10, 9], [7, 3], [0], [1], [15, 17], [13, 4], [2, 7], [19, 9], [19], [14, 0], [15, 10], [4, 18], [2, 7], [11, 6], [0], [8], [16], [17], [19, 3], [5, 15], [11, 6], [0], [4], [15], [14], [12], [10, 9], [19, 3], [13, 5], [7, 1], [0], [13], [1], [18], [16, 19], [9, 11], [5, 15], [19], [16], [15], [14, 0], [5, 18], [14], [6], [17], [10, 9], [16, 19], [8, 0], [2, 7], [4], [14, 0], [7, 19], [10, 11], [9, 6], [2, 16], [14, 0], [16, 19], [7, 3], [13, 5], [11, 6], [14], [1], [5, 18], [6, 12], [10, 11], [19, 3], [13, 4], [8], [19, 14], [13, 5], [1, 3], [10, 9], [10], [5], [7, 19], [4, 16], [19], [16], [17, 11], [12, 0], [18, 15], [7, 1], [19], [18], [14], [5], [7, 1], [2, 16], [12, 0], [10, 11], [19, 14], [16, 9], [4, 2], [3, 8], [15, 10], [6, 12], [14], [0], [5], [12], [9, 11], [18, 10], [16, 14], [8, 0], [18, 15], [10, 11], [14], [6], [2], [8, 12], [16, 9], [14], [9, 11], [4, 18], [16, 19], [15, 10], [6], [19], [14, 12], [10, 9], [14], [18], [8], [15], [0], [10, 6], [2, 16], [19, 9], [13, 5], [14], [2], [13, 4], [17, 11], [19, 9], [18, 10], [5, 15], [6], [19, 14], [16, 9], [12, 0], [1, 3], [14], [1], [18, 10], [12, 0], [17, 11], [5, 15], [16, 19], [19], [18], [14, 8], [10, 9], [17, 11], [4, 16], [16], [2], [8, 12], [19, 14], [5, 10], [1, 3], [18, 15], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[2, 8]
[17, 23]
[30, 35]
[35, 44]
[39, 50]
[46, 54]
[33, 57]
[45, 59]
[56, 61]
[55, 62]
[74, 79]
[76, 81]
[79, 82]
[81, 87]
[102, 108]
[115, 121]
[122, 129]
[127, 136]
[159, 164]
[190, 195]
[188, 197]
[236, 242]
[243, 252]
[248, 253]
[241, 254]
[244, 255]
[254, 261]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[0, 6]
[34, 42]
[41, 52]
[51, 58]
[47, 75]
[92, 97]
[97, 104]
[104, 111]
[123, 130]
[130, 139]
[126, 153]
[131, 158]
[141, 170]
[185, 191]
[182, 194]
[194, 207]
[215, 220]
[216, 225]
[229, 238]
[239, 264]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[135, 144, 154]
[167, 171, 178]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 

[111, 118, 123]
[193, 199, 205]
[205, 211, 215]
[238, 246, 250]

------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[107, 114, 120]
[150, 167, 171]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[203, 210, 213]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[0, 6]
[34, 42]
[41, 52]
[51, 58]
[47, 75]
[92, 97]
[97, 104]
[104, 111]
[123, 130]
[130, 139]
[126, 153]
[131, 158]
[141, 170]
[185, 191]
[182, 194]
[194, 207]
[215, 220]
[216, 225]
[229, 238]
[239, 264]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[2, 8]
[17, 23]
[30, 35]
[35, 44]
[39, 50]
[46, 54]
[33, 57]
[45, 59]
[56, 61]
[55, 62]
[74, 79]
[76, 81]
[79, 82]
[81, 87]
[102, 108]
[115, 121]
[122, 129]
[127, 136]
[159, 164]
[190, 195]
[188, 197]
[236, 242]
[243, 252]
[248, 253]
[241, 254]
[244, 255]
[254, 261]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.687467336654663

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 6] xx => I, Pos: [0, 6] xx => I, Pos: [2, 8] cc => I, Pos: [2, 8] cc => I, Pos: [17, 23] cc => I, Pos: [17, 23] cc => I, Pos: [30, 35] cc => I, Pos: [30, 35] cc => I, Pos: [33, 57] cc => I, Pos: [33, 57] cc => I, Pos: [34, 42] xx => I, Pos: [34, 42] xx => I, Pos: [35, 44] cc => I, Pos: [35, 44] cc => I, Pos: [39, 50] cc => I, Pos: [39, 50] cc => I, Pos: [41, 52] xx => I, Pos: [41, 52] xx => I, Pos: [45, 59] cc => I, Pos: [45, 59] cc => I, Pos: [46, 54] cc => I, Pos: [46, 54] cc => I, Pos: [47, 75] xx => I, Pos: [47, 75] xx => I, Pos: [51, 58] xx => I, Pos: [51, 58] xx => I, Pos: [55, 62] cc => I, Pos: [55, 62] cc => I, Pos: [56, 61] cc => I, Pos: [56, 61] cc => I, Pos: [74, 79] cc => I, Pos: [74, 79] cc => I, Pos: [76, 81] cc => I, Pos: [76, 81] cc => I, Pos: [79, 82] cc => I, Pos: [79, 82] cc => I, Pos: [81, 87] cc => I, Pos: [81, 87] cc => I, Pos: [92, 97] xx => I, Pos: [92, 97] xx => I, Pos: [97, 104] xx => I, Pos: [97, 104] xx => I, Pos: [102, 108] cc => I, Pos: [102, 108] cc => I, Pos: [104, 111] xx => I, Pos: [104, 111] xx => I, Pos: [107, 114, 120] ccc => cc, Pos: [111, 118, 123] xcx => c, Pos: [115, 121] cc => I, Pos: [115, 121] cc => I, Pos: [122, 129] cc => I, Pos: [122, 129] cc => I, Pos: [123, 130] xx => I, Pos: [123, 130] xx => I, Pos: [126, 153] xx => I, Pos: [126, 153] xx => I, Pos: [127, 136] cc => I, Pos: [127, 136] cc => I, Pos: [130, 139] xx => I, Pos: [130, 139] xx => I, Pos: [131, 158] xx => I, Pos: [131, 158] xx => I, Pos: [135, 144, 154] ccc => cc, Pos: [141, 170] xx => I, Pos: [141, 170] xx => I, Pos: [150, 167, 171] ccc => cc, Pos: [159, 164] cc => I, Pos: [159, 164] cc => I, Pos: [167, 171, 178] ccc => cc, Pos: [182, 194] xx => I, Pos: [182, 194] xx => I, Pos: [185, 191] xx => I, Pos: [185, 191] xx => I, Pos: [188, 197] cc => I, Pos: [188, 197] cc => I, Pos: [190, 195] cc => I, Pos: [190, 195] cc => I, Pos: [193, 199, 205] xcx => c, Pos: [194, 207] xx => I, Pos: [194, 207] xx => I, Pos: [203, 210, 213] ccc => cc, Pos: [205, 211, 215] xcx => c, Pos: [215, 220] xx => I, Pos: [215, 220] xx => I, Pos: [216, 225] xx => I, Pos: [216, 225] xx => I, Pos: [229, 238] xx => I, Pos: [229, 238] xx => I, Pos: [236, 242] cc => I, Pos: [236, 242] cc => I, Pos: [238, 246, 250] xcx => c, Pos: [239, 264] xx => I, Pos: [239, 264] xx => I, Pos: [241, 254] cc => I, Pos: [241, 254] cc => I, Pos: [243, 252] cc => I, Pos: [243, 252] cc => I, Pos: [244, 255] cc => I, Pos: [244, 255] cc => I, Pos: [248, 253] cc => I, Pos: [248, 253] cc => I, Pos: [254, 261] cc => I, Pos: [254, 261] cc => I]

Plan: 1
[Pos: [0, 6] xx => I,
 Pos: [2, 8] cc => I,
 Pos: [17, 23] cc => I,
 Pos: [30, 35] cc => I,
 Pos: [33, 57] cc => I,
 Pos: [34, 42] xx => I,
 Pos: [39, 50] cc => I,
 Pos: [41, 52] xx => I,
 Pos: [45, 59] cc => I,
 Pos: [46, 54] cc => I,
 Pos: [47, 75] xx => I,
 Pos: [51, 58] xx => I,
 Pos: [55, 62] cc => I,
 Pos: [56, 61] cc => I,
 Pos: [74, 79] cc => I,
 Pos: [76, 81] cc => I,
 Pos: [92, 97] xx => I,
 Pos: [102, 108] cc => I,
 Pos: [104, 111] xx => I,
 Pos: [107, 114, 120] ccc => cc,
 Pos: [115, 121] cc => I,
 Pos: [122, 129] cc => I,
 Pos: [123, 130] xx => I,
 Pos: [126, 153] xx => I,
 Pos: [127, 136] cc => I,
 Pos: [131, 158] xx => I,
 Pos: [135, 144, 154] ccc => cc,
 Pos: [141, 170] xx => I,
 Pos: [150, 167, 171] ccc => cc,
 Pos: [159, 164] cc => I,
 Pos: [182, 194] xx => I,
 Pos: [185, 191] xx => I,
 Pos: [188, 197] cc => I,
 Pos: [190, 195] cc => I,
 Pos: [193, 199, 205] xcx => c,
 Pos: [203, 210, 213] ccc => cc,
 Pos: [215, 220] xx => I,
 Pos: [216, 225] xx => I,
 Pos: [229, 238] xx => I,
 Pos: [236, 242] cc => I,
 Pos: [239, 264] xx => I,
 Pos: [241, 254] cc => I,
 Pos: [243, 252] cc => I,
 Pos: [244, 255] cc => I,
 Pos: [248, 253] cc => I]
Change: 45, Saving: 136

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.015623807907104492

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 6] xx => I,
 Pos: [2, 8] cc => I,
 Pos: [17, 23] cc => I,
 Pos: [30, 35] cc => I,
 Pos: [33, 57] cc => I,
 Pos: [34, 42] xx => I,
 Pos: [39, 50] cc => I,
 Pos: [41, 52] xx => I,
 Pos: [45, 59] cc => I,
 Pos: [46, 54] cc => I,
 Pos: [47, 75] xx => I,
 Pos: [51, 58] xx => I,
 Pos: [55, 62] cc => I,
 Pos: [56, 61] cc => I,
 Pos: [74, 79] cc => I,
 Pos: [76, 81] cc => I,
 Pos: [92, 97] xx => I,
 Pos: [102, 108] cc => I,
 Pos: [104, 111] xx => I,
 Pos: [107, 114, 120] ccc => cc,
 Pos: [115, 121] cc => I,
 Pos: [122, 129] cc => I,
 Pos: [123, 130] xx => I,
 Pos: [126, 153] xx => I,
 Pos: [127, 136] cc => I,
 Pos: [131, 158] xx => I,
 Pos: [135, 144, 154] ccc => cc,
 Pos: [141, 170] xx => I,
 Pos: [150, 167, 171] ccc => cc,
 Pos: [159, 164] cc => I,
 Pos: [182, 194] xx => I,
 Pos: [185, 191] xx => I,
 Pos: [188, 197] cc => I,
 Pos: [190, 195] cc => I,
 Pos: [193, 199, 205] xcx => c,
 Pos: [203, 210, 213] ccc => cc,
 Pos: [215, 220] xx => I,
 Pos: [216, 225] xx => I,
 Pos: [229, 238] xx => I,
 Pos: [236, 242] cc => I,
 Pos: [239, 264] xx => I,
 Pos: [241, 254] cc => I,
 Pos: [243, 252] cc => I,
 Pos: [244, 255] cc => I,
 Pos: [248, 253] cc => I]
Change: 45, Saving: 136

Circuit before: xxccccxxccccccxxcccxxxcccxxcccccccxcccccxxxxcccxcccxxxccccxccccxxxcccccxcccxccccccccccccccccxccccxxxccccxxcccccxxccccxcccccxxxxcccxxxxxccccxxxxcccxxxccxxxccccxccccccccccxxcccccxccccxxccxxccccxxxxccccccccccxxxxccccccxxxccxccccxxccxxxxxccccxxcccccxccccxxcccccxxccccxxccccc
---------------
Apply:  Pos: [0, 6] xx => I
Apply:  Pos: [2, 8] cc => I
Apply:  Pos: [17, 23] cc => I
Apply:  Pos: [30, 35] cc => I
Apply:  Pos: [33, 57] cc => I
Apply:  Pos: [34, 42] xx => I
Apply:  Pos: [39, 50] cc => I
Apply:  Pos: [41, 52] xx => I
Apply:  Pos: [45, 59] cc => I
Apply:  Pos: [46, 54] cc => I
Apply:  Pos: [47, 75] xx => I
Apply:  Pos: [51, 58] xx => I
Apply:  Pos: [55, 62] cc => I
Apply:  Pos: [56, 61] cc => I
Apply:  Pos: [74, 79] cc => I
Apply:  Pos: [76, 81] cc => I
Apply:  Pos: [92, 97] xx => I
Apply:  Pos: [102, 108] cc => I
Apply:  Pos: [104, 111] xx => I
Apply:  Pos: [107, 114, 120] ccc => cc
Apply:  Pos: [115, 121] cc => I
Apply:  Pos: [122, 129] cc => I
Apply:  Pos: [123, 130] xx => I
Apply:  Pos: [126, 153] xx => I
Apply:  Pos: [127, 136] cc => I
Apply:  Pos: [131, 158] xx => I
Apply:  Pos: [135, 144, 154] ccc => cc
Apply:  Pos: [141, 170] xx => I
Apply:  Pos: [150, 167, 171] ccc => cc
Apply:  Pos: [159, 164] cc => I
Apply:  Pos: [182, 194] xx => I
Apply:  Pos: [185, 191] xx => I
Apply:  Pos: [188, 197] cc => I
Apply:  Pos: [190, 195] cc => I
Apply:  Pos: [193, 199, 205] xcx => c
Apply:  Pos: [203, 210, 213] ccc => cc
Apply:  Pos: [215, 220] xx => I
Apply:  Pos: [216, 225] xx => I
Apply:  Pos: [229, 238] xx => I
Apply:  Pos: [236, 242] cc => I
Apply:  Pos: [239, 264] xx => I
Apply:  Pos: [241, 254] cc => I
Apply:  Pos: [243, 252] cc => I
Apply:  Pos: [244, 255] cc => I
Apply:  Pos: [248, 253] cc => I
---------------
Circuit after: xcccxcccccxxccxxxccxxccccccccxxcccxcxxxcccccxcccccccccccccccccccxxcccxccccxcccxccxxcxxxcccxxxcccxxxccxxcccccccccccxccccxccccxccxccxccccccccxxxcccccxccccccxccxxxxccccxcccxxcxxccccxccccc

--------End Timer [apply mapping plan]:  0.0

[15], [10, 11], [1, 3], [4, 18], [4], [3, 8], [14, 12], [15, 17], [9, 6], [18, 10], [10], [5], [19, 14], [18, 15], [14], [11], [6], [10, 9], [5, 18], [10], [15], [14, 8], [4, 2], [13, 5], [17, 11], [7, 1], [9, 14], [2, 7], [4, 16], [1], [18], [3, 8], [14, 8], [18, 16], [5], [4, 18], [10], [19], [17], [8, 0], [4, 16], [13, 5], [7, 3], [9, 14], [8], [16, 9], [18, 10], [15, 10], [18, 16], [1, 3], [4, 2], [18, 10], [7, 3], [17, 11], [14, 12], [8, 0], [15, 17], [2, 7], [1, 3], [5, 10], [4, 2], [11, 6], [9, 14], [16, 19], [2], [7], [18, 10], [17, 11], [16, 9], [13], [2, 16], [13, 4], [10, 9], [7, 3], [1], [15, 17], [4, 18], [19, 9], [19], [14, 0], [15, 10], [8], [16], [5, 15], [15], [14], [12], [10, 11], [13, 5], [7, 1], [0], [13], [18], [16, 19], [9, 11], [5, 15], [19], [16], [15], [14, 0], [13, 5], [14], [6], [16, 19], [8, 0], [2, 7], [7, 19], [10, 11], [9, 6], [2, 16], [16, 19], [7, 3], [5, 18], [11, 6], [14], [6, 12], [10, 11], [19, 3], [13, 4], [8], [19, 14], [13, 5], [1, 3], [10, 9], [10], [7, 19], [4, 16], [16], [17, 11], [18, 15], [18], [19, 14], [2, 16], [10, 11], [16, 9], [4, 2], [3, 8], [18, 15], [6, 12], [0], [5], [12], [9, 11], [15, 10], [16, 14], [8, 0], [10, 11], [2], [8, 12], [16, 9], [9, 11], [4, 18], [16, 19], [15, 10], [19], [14, 12], [10, 9], [18], [8], [15], [0], [10, 6], [2, 16], [13, 5], [13, 4], [6], [19, 14], [16, 9], [1, 3], [14], [1], [16, 19], [19], [18], [14, 8], [10, 9], [17, 11], [4, 16], [16], [8, 12], [19, 14], [5, 10], [1, 3], [18, 15], ----End Timer [Execute Mapping]:  1.7030911445617676

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[48, 51]
[115, 138]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[19, 36]
[101, 114]
[157, 173]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[100, 112, 121]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[21, 26, 31]
[120, 125, 131]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[19, 36]
[101, 114]
[157, 173]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[48, 51]
[115, 138]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.2656805515289307

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [19, 36] xx => I, Pos: [19, 36] xx => I, Pos: [21, 26, 31] ccc => cc, Pos: [48, 51] cc => I, Pos: [48, 51] cc => I, Pos: [100, 112, 121] ccc => cc, Pos: [101, 114] xx => I, Pos: [101, 114] xx => I, Pos: [115, 138] cc => I, Pos: [115, 138] cc => I, Pos: [120, 125, 131] ccc => cc, Pos: [157, 173] xx => I, Pos: [157, 173] xx => I]

Plan: 1
[Pos: [19, 36] xx => I,
 Pos: [21, 26, 31] ccc => cc,
 Pos: [48, 51] cc => I,
 Pos: [100, 112, 121] ccc => cc,
 Pos: [101, 114] xx => I,
 Pos: [115, 138] cc => I,
 Pos: [120, 125, 131] ccc => cc,
 Pos: [157, 173] xx => I]
Change: 8, Saving: 20

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [19, 36] xx => I,
 Pos: [21, 26, 31] ccc => cc,
 Pos: [48, 51] cc => I,
 Pos: [100, 112, 121] ccc => cc,
 Pos: [101, 114] xx => I,
 Pos: [115, 138] cc => I,
 Pos: [120, 125, 131] ccc => cc,
 Pos: [157, 173] xx => I]
Change: 8, Saving: 20

Circuit before: xcccxcccccxxccxxxccxxccccccccxxcccxcxxxcccccxcccccccccccccccccccxxcccxccccxcccxccxxcxxxcccxxxcccxxxccxxcccccccccccxccccxccccxccxccxccccccccxxxcccccxccccccxccxxxxccccxcccxxcxxccccxccccc
---------------
Apply:  Pos: [19, 36] xx => I
Apply:  Pos: [21, 26, 31] ccc => cc
Apply:  Pos: [48, 51] cc => I
Apply:  Pos: [100, 112, 121] ccc => cc
Apply:  Pos: [101, 114] xx => I
Apply:  Pos: [115, 138] cc => I
Apply:  Pos: [120, 125, 131] ccc => cc
Apply:  Pos: [157, 173] xx => I
---------------
Circuit after: xcccxcccccxxccxxxccxccccccccxxccxcxxcccccxcccccccccccccccccxxcccxccccxcccxccxxcxxxcccxxxcccxxxccxccccccccccccccxcccxccxccxccccccxxxcccccxccccccxccxxxccccxcccxxcxccccxccccc

--------End Timer [apply mapping plan]:  0.0

[15], [10, 11], [1, 3], [4, 18], [4], [3, 8], [14, 12], [15, 17], [9, 6], [18, 10], [10], [5], [19, 14], [18, 15], [14], [11], [6], [10, 9], [5, 18], [15], [9, 14], [4, 2], [13, 5], [17, 11], [7, 1], [14, 8], [2, 7], [4, 16], [1], [18], [3, 8], [18, 16], [5], [4, 18], [19], [17], [8, 0], [4, 16], [13, 5], [7, 3], [9, 14], [8], [16, 9], [15, 10], [18, 16], [1, 3], [4, 2], [7, 3], [17, 11], [14, 12], [8, 0], [15, 17], [2, 7], [1, 3], [5, 10], [4, 2], [11, 6], [9, 14], [16, 19], [2], [7], [18, 10], [17, 11], [16, 9], [13], [2, 16], [13, 4], [10, 9], [7, 3], [1], [15, 17], [4, 18], [19, 9], [19], [14, 0], [15, 10], [8], [16], [5, 15], [15], [14], [12], [10, 11], [13, 5], [7, 1], [0], [13], [18], [16, 19], [9, 11], [5, 15], [19], [16], [15], [14, 0], [13, 18], [6], [16, 19], [8, 0], [2, 7], [7, 19], [10, 11], [9, 6], [2, 16], [16, 19], [7, 3], [5, 18], [11, 6], [10, 11], [19, 3], [13, 4], [8], [7, 19], [1, 3], [10, 9], [10], [19, 14], [4, 16], [16], [17, 11], [18, 15], [18], [2, 16], [10, 11], [16, 9], [4, 2], [3, 8], [18, 15], [0], [5], [12], [9, 11], [15, 10], [16, 14], [8, 0], [10, 11], [2], [8, 12], [16, 9], [9, 11], [4, 18], [16, 19], [15, 10], [19], [14, 12], [10, 9], [8], [15], [0], [10, 6], [2, 16], [13, 4], [13, 5], [6], [19, 14], [16, 9], [1, 3], [14], [1], [16, 19], [19], [14, 8], [10, 9], [17, 11], [4, 16], [16], [8, 12], [19, 14], [5, 10], [1, 3], [18, 15], ----End Timer [Execute Mapping]:  1.2656805515289307

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[81, 130]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[81, 130]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.2031970024108887

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [81, 130] xx => I, Pos: [81, 130] xx => I]

Plan: 1
[Pos: [81, 130] xx => I]
Change: 1, Saving: 2

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [81, 130] xx => I]
Change: 1, Saving: 2

Circuit before: xcccxcccccxxccxxxccxccccccccxxccxcxxcccccxcccccccccccccccccxxcccxccccxcccxccxxcxxxcccxxxcccxxxccxccccccccccccccxcccxccxccxccccccxxxcccccxccccccxccxxxccccxcccxxcxccccxccccc
---------------
Apply:  Pos: [81, 130] xx => I
---------------
Circuit after: xcccxcccccxxccxxxccxccccccccxxccxcxxcccccxcccccccccccccccccxxcccxccccxcccxccxxcxxcccxxxcccxxxccxccccccccccccccxcccxccxccxccccccxxcccccxccccccxccxxxccccxcccxxcxccccxccccc

--------End Timer [apply mapping plan]:  0.0

[15], [10, 11], [1, 3], [4, 18], [4], [3, 8], [14, 12], [15, 17], [9, 6], [18, 10], [10], [5], [19, 14], [18, 15], [14], [11], [6], [10, 9], [5, 18], [15], [9, 14], [4, 2], [13, 5], [17, 11], [7, 1], [14, 8], [2, 7], [4, 16], [1], [18], [3, 8], [18, 16], [5], [4, 18], [19], [17], [8, 0], [4, 16], [13, 5], [7, 3], [9, 14], [8], [16, 9], [15, 10], [18, 16], [1, 3], [4, 2], [7, 3], [17, 11], [14, 12], [8, 0], [15, 17], [2, 7], [1, 3], [5, 10], [4, 2], [11, 6], [9, 14], [16, 19], [2], [7], [18, 10], [17, 11], [16, 9], [13], [2, 16], [13, 4], [10, 9], [7, 3], [1], [15, 17], [4, 18], [19, 9], [19], [14, 0], [15, 10], [8], [16], [5, 15], [15], [14], [10, 11], [13, 5], [7, 1], [0], [13], [18], [16, 19], [9, 11], [5, 15], [19], [16], [15], [14, 0], [13, 18], [6], [16, 19], [8, 0], [2, 7], [7, 19], [10, 11], [9, 6], [2, 16], [16, 19], [7, 3], [5, 18], [11, 6], [10, 11], [19, 3], [13, 4], [8], [7, 19], [1, 3], [10, 9], [10], [19, 14], [4, 16], [16], [17, 11], [18, 15], [18], [2, 16], [10, 11], [16, 9], [4, 2], [3, 8], [18, 15], [0], [5], [9, 11], [15, 10], [16, 14], [8, 0], [10, 11], [2], [8, 12], [16, 9], [9, 11], [4, 18], [16, 19], [15, 10], [19], [14, 12], [10, 9], [8], [15], [0], [10, 6], [2, 16], [13, 5], [13, 4], [6], [19, 14], [16, 9], [1, 3], [14], [1], [16, 19], [19], [14, 8], [10, 9], [17, 11], [4, 16], [16], [8, 12], [19, 14], [5, 10], [1, 3], [18, 15], ----End Timer [Execute Mapping]:  1.2031970024108887

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.234604835510254

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

..........

Total Plans: 0

--------End Timer [Generate Plans]:  0.0

There's no mapping plan.
[15], [10, 11], [1, 3], [4, 18], [4], [3, 8], [14, 12], [15, 17], [9, 6], [18, 10], [10], [5], [19, 14], [18, 15], [14], [11], [6], [10, 9], [5, 18], [15], [9, 14], [4, 2], [13, 5], [17, 11], [7, 1], [14, 8], [2, 7], [4, 16], [1], [18], [3, 8], [18, 16], [5], [4, 18], [19], [17], [8, 0], [4, 16], [13, 5], [7, 3], [9, 14], [8], [16, 9], [15, 10], [18, 16], [1, 3], [4, 2], [7, 3], [17, 11], [14, 12], [8, 0], [15, 17], [2, 7], [1, 3], [5, 10], [4, 2], [11, 6], [9, 14], [16, 19], [2], [7], [18, 10], [17, 11], [16, 9], [13], [2, 16], [13, 4], [10, 9], [7, 3], [1], [15, 17], [4, 18], [19, 9], [19], [14, 0], [15, 10], [8], [16], [5, 15], [15], [14], [10, 11], [13, 5], [7, 1], [0], [13], [18], [16, 19], [9, 11], [5, 15], [19], [16], [15], [14, 0], [13, 18], [6], [16, 19], [8, 0], [2, 7], [7, 19], [10, 11], [9, 6], [2, 16], [16, 19], [7, 3], [5, 18], [11, 6], [10, 11], [19, 3], [13, 4], [8], [7, 19], [1, 3], [10, 9], [10], [19, 14], [4, 16], [16], [17, 11], [18, 15], [18], [2, 16], [10, 11], [16, 9], [4, 2], [3, 8], [18, 15], [0], [5], [9, 11], [15, 10], [16, 14], [8, 0], [10, 11], [2], [8, 12], [16, 9], [9, 11], [4, 18], [16, 19], [15, 10], [19], [14, 12], [10, 9], [8], [15], [0], [10, 6], [2, 16], [13, 4], [13, 5], [6], [19, 14], [16, 9], [1, 3], [14], [1], [16, 19], [19], [14, 8], [10, 9], [17, 11], [4, 16], [16], [8, 12], [19, 14], [5, 10], [1, 3], [18, 15], ----End Timer [Execute Mapping]:  1.234604835510254

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-x-x-x-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-x-cx-cx-cx-x-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-x-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-x-x-x-x-x-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-x-x-x-cx-cx-x-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-cx-cx-x-x-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-x-cx-cx-cx-cx-x-x-cx-cx-x-x-x-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx 
     => total size: [270] (IBM)
 --------------------
 - qubits_num: 20, using gates: [x,cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 450


>> Solved circuit: 
Circuit Info: 
 - circuit: x-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-cx-cx-x-x-x-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-x-cx-x-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-x-cx-cx-cx-cx-x-cx-cx-cx-x-cx-cx-x-x-cx-x-x-cx-cx-cx-x-x-x-cx-cx-cx-x-x-x-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-x-cx-cx-x-cx-cx-x-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-cx-cx-x-x-x-cx-cx-cx-cx-x-cx-cx-cx-x-x-cx-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx 
     => total size: [169] (IBM)
 --------------------
 - qubits_num: 20, using gates: [x,cx]
 - circuit depth: 32 - (small)
 - circuit cycle: 292

Reduced: 
 - size: 101 (37.41%)
 - cycle: 158 (35.11%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.12534213066101074

[0], [15], [7, 19], [10, 11], [1, 3], [4, 18], [0], [4], [7, 19], [3, 8], [14, 12], [15, 17], [9, 6], [18, 10], [10], [5], [19, 14], [7, 3], [18, 15], [14], [11], [6], [10, 9], [7, 3], [5, 18], [10], [15], [14, 8], [4, 2], [13, 5], [3, 8], [17, 11], [7, 1], [9, 6], [19], [3, 8], [9, 14], [2, 7], [4, 16], [15, 17], [1], [7], [19], [18], [3, 8], [10, 11], [14, 0], [12], [14, 8], [18, 16], [15, 17], [8], [7], [5], [14, 0], [16, 19], [1, 3], [9, 6], [8], [10, 11], [4, 18], [1, 3], [16, 19], [10], [19], [17], [8, 0], [4, 16], [13, 5], [7, 3], [9, 14], [8], [16, 9], [18, 10], [4, 2], [12], [8, 0], [15, 10], [18, 16], [4, 2], [1, 3], [8, 0], [4, 2], [18, 10], [7, 3], [17, 11], [14, 12], [8, 0], [15, 17], [2, 7], [1, 3], [5, 10], [0], [4, 2], [11, 6], [9, 14], [16, 19], [0], [2], [7], [18, 10], [17, 11], [8, 12], [16, 9], [0], [13], [2, 16], [4, 18], [8, 12], [10, 9], [7, 3], [0], [1], [15, 17], [13, 4], [2, 7], [19, 9], [19], [14, 0], [15, 10], [4, 18], [2, 7], [11, 6], [0], [8], [16], [17], [19, 3], [5, 15], [11, 6], [0], [4], [15], [14], [12], [10, 9], [19, 3], [13, 5], [7, 1], [0], [13], [1], [18], [16, 19], [9, 11], [5, 15], [19], [16], [15], [14, 0], [5, 18], [14], [6], [17], [10, 9], [16, 19], [8, 0], [2, 7], [4], [14, 0], [7, 19], [10, 11], [9, 6], [2, 16], [14, 0], [16, 19], [7, 3], [13, 5], [11, 6], [14], [1], [5, 18], [6, 12], [10, 11], [19, 3], [13, 4], [8], [19, 14], [13, 5], [1, 3], [10, 9], [10], [5], [7, 19], [4, 16], [19], [16], [17, 11], [12, 0], [18, 15], [7, 1], [19], [18], [14], [5], [7, 1], [2, 16], [12, 0], [10, 11], [19, 14], [16, 9], [4, 2], [3, 8], [15, 10], [6, 12], [14], [0], [5], [12], [9, 11], [18, 10], [16, 14], [8, 0], [18, 15], [10, 11], [14], [6], [2], [8, 12], [16, 9], [14], [9, 11], [4, 18], [16, 19], [15, 10], [6], [19], [14, 12], [10, 9], [14], [18], [8], [15], [0], [10, 6], [2, 16], [19, 9], [13, 5], [14], [2], [13, 4], [17, 11], [19, 9], [18, 10], [5, 15], [6], [19, 14], [16, 9], [12, 0], [1, 3], [14], [1], [18, 10], [12, 0], [17, 11], [5, 15], [16, 19], [19], [18], [14, 8], [10, 9], [17, 11], [4, 16], [16], [2], [8, 12], [19, 14], [5, 10], [1, 3], [18, 15], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[2, 8]
[17, 23]
[30, 35]
[35, 44]
[39, 50]
[46, 54]
[33, 57]
[45, 59]
[56, 61]
[55, 62]
[74, 79]
[76, 81]
[79, 82]
[81, 87]
[102, 108]
[115, 121]
[122, 129]
[127, 136]
[159, 164]
[190, 195]
[188, 197]
[236, 242]
[243, 252]
[248, 253]
[241, 254]
[244, 255]
[254, 261]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[0, 6]
[34, 42]
[41, 52]
[51, 58]
[47, 75]
[92, 97]
[97, 104]
[104, 111]
[123, 130]
[130, 139]
[126, 153]
[131, 158]
[141, 170]
[185, 191]
[182, 194]
[194, 207]
[215, 220]
[216, 225]
[229, 238]
[239, 264]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[135, 144, 154]
[167, 171, 178]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 

[111, 118, 123]
[193, 199, 205]
[205, 211, 215]
[238, 246, 250]

------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[107, 114, 120]
[150, 167, 171]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[203, 210, 213]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[0, 6]
[34, 42]
[41, 52]
[51, 58]
[47, 75]
[92, 97]
[97, 104]
[104, 111]
[123, 130]
[130, 139]
[126, 153]
[131, 158]
[141, 170]
[185, 191]
[182, 194]
[194, 207]
[215, 220]
[216, 225]
[229, 238]
[239, 264]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[2, 8]
[17, 23]
[30, 35]
[35, 44]
[39, 50]
[46, 54]
[33, 57]
[45, 59]
[56, 61]
[55, 62]
[74, 79]
[76, 81]
[79, 82]
[81, 87]
[102, 108]
[115, 121]
[122, 129]
[127, 136]
[159, 164]
[190, 195]
[188, 197]
[236, 242]
[243, 252]
[248, 253]
[241, 254]
[244, 255]
[254, 261]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.6715831756591797

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 6] xx => I, Pos: [0, 6] xx => I, Pos: [2, 8] cc => I, Pos: [2, 8] cc => I, Pos: [17, 23] cc => I, Pos: [17, 23] cc => I, Pos: [30, 35] cc => I, Pos: [30, 35] cc => I, Pos: [33, 57] cc => I, Pos: [33, 57] cc => I, Pos: [34, 42] xx => I, Pos: [34, 42] xx => I, Pos: [35, 44] cc => I, Pos: [35, 44] cc => I, Pos: [39, 50] cc => I, Pos: [39, 50] cc => I, Pos: [41, 52] xx => I, Pos: [41, 52] xx => I, Pos: [45, 59] cc => I, Pos: [45, 59] cc => I, Pos: [46, 54] cc => I, Pos: [46, 54] cc => I, Pos: [47, 75] xx => I, Pos: [47, 75] xx => I, Pos: [51, 58] xx => I, Pos: [51, 58] xx => I, Pos: [55, 62] cc => I, Pos: [55, 62] cc => I, Pos: [56, 61] cc => I, Pos: [56, 61] cc => I, Pos: [74, 79] cc => I, Pos: [74, 79] cc => I, Pos: [76, 81] cc => I, Pos: [76, 81] cc => I, Pos: [79, 82] cc => I, Pos: [79, 82] cc => I, Pos: [81, 87] cc => I, Pos: [81, 87] cc => I, Pos: [92, 97] xx => I, Pos: [92, 97] xx => I, Pos: [97, 104] xx => I, Pos: [97, 104] xx => I, Pos: [102, 108] cc => I, Pos: [102, 108] cc => I, Pos: [104, 111] xx => I, Pos: [104, 111] xx => I, Pos: [107, 114, 120] ccc => cc, Pos: [111, 118, 123] xcx => c, Pos: [115, 121] cc => I, Pos: [115, 121] cc => I, Pos: [122, 129] cc => I, Pos: [122, 129] cc => I, Pos: [123, 130] xx => I, Pos: [123, 130] xx => I, Pos: [126, 153] xx => I, Pos: [126, 153] xx => I, Pos: [127, 136] cc => I, Pos: [127, 136] cc => I, Pos: [130, 139] xx => I, Pos: [130, 139] xx => I, Pos: [131, 158] xx => I, Pos: [131, 158] xx => I, Pos: [135, 144, 154] ccc => cc, Pos: [141, 170] xx => I, Pos: [141, 170] xx => I, Pos: [150, 167, 171] ccc => cc, Pos: [159, 164] cc => I, Pos: [159, 164] cc => I, Pos: [167, 171, 178] ccc => cc, Pos: [182, 194] xx => I, Pos: [182, 194] xx => I, Pos: [185, 191] xx => I, Pos: [185, 191] xx => I, Pos: [188, 197] cc => I, Pos: [188, 197] cc => I, Pos: [190, 195] cc => I, Pos: [190, 195] cc => I, Pos: [193, 199, 205] xcx => c, Pos: [194, 207] xx => I, Pos: [194, 207] xx => I, Pos: [203, 210, 213] ccc => cc, Pos: [205, 211, 215] xcx => c, Pos: [215, 220] xx => I, Pos: [215, 220] xx => I, Pos: [216, 225] xx => I, Pos: [216, 225] xx => I, Pos: [229, 238] xx => I, Pos: [229, 238] xx => I, Pos: [236, 242] cc => I, Pos: [236, 242] cc => I, Pos: [238, 246, 250] xcx => c, Pos: [239, 264] xx => I, Pos: [239, 264] xx => I, Pos: [241, 254] cc => I, Pos: [241, 254] cc => I, Pos: [243, 252] cc => I, Pos: [243, 252] cc => I, Pos: [244, 255] cc => I, Pos: [244, 255] cc => I, Pos: [248, 253] cc => I, Pos: [248, 253] cc => I, Pos: [254, 261] cc => I, Pos: [254, 261] cc => I]

Plan: 1
[Pos: [0, 6] xx => I,
 Pos: [2, 8] cc => I,
 Pos: [17, 23] cc => I,
 Pos: [30, 35] cc => I,
 Pos: [33, 57] cc => I,
 Pos: [34, 42] xx => I,
 Pos: [39, 50] cc => I,
 Pos: [41, 52] xx => I,
 Pos: [45, 59] cc => I,
 Pos: [46, 54] cc => I,
 Pos: [47, 75] xx => I,
 Pos: [51, 58] xx => I,
 Pos: [55, 62] cc => I,
 Pos: [56, 61] cc => I,
 Pos: [74, 79] cc => I,
 Pos: [76, 81] cc => I,
 Pos: [92, 97] xx => I,
 Pos: [102, 108] cc => I,
 Pos: [104, 111] xx => I,
 Pos: [107, 114, 120] ccc => cc,
 Pos: [115, 121] cc => I,
 Pos: [122, 129] cc => I,
 Pos: [123, 130] xx => I,
 Pos: [126, 153] xx => I,
 Pos: [127, 136] cc => I,
 Pos: [131, 158] xx => I,
 Pos: [135, 144, 154] ccc => cc,
 Pos: [141, 170] xx => I,
 Pos: [150, 167, 171] ccc => cc,
 Pos: [159, 164] cc => I,
 Pos: [182, 194] xx => I,
 Pos: [185, 191] xx => I,
 Pos: [188, 197] cc => I,
 Pos: [190, 195] cc => I,
 Pos: [193, 199, 205] xcx => c,
 Pos: [203, 210, 213] ccc => cc,
 Pos: [215, 220] xx => I,
 Pos: [216, 225] xx => I,
 Pos: [229, 238] xx => I,
 Pos: [236, 242] cc => I,
 Pos: [239, 264] xx => I,
 Pos: [241, 254] cc => I,
 Pos: [243, 252] cc => I,
 Pos: [244, 255] cc => I,
 Pos: [248, 253] cc => I]
Change: 45, Saving: 46

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.12513494491577148

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 6] xx => I,
 Pos: [2, 8] cc => I,
 Pos: [17, 23] cc => I,
 Pos: [30, 35] cc => I,
 Pos: [33, 57] cc => I,
 Pos: [34, 42] xx => I,
 Pos: [39, 50] cc => I,
 Pos: [41, 52] xx => I,
 Pos: [45, 59] cc => I,
 Pos: [46, 54] cc => I,
 Pos: [47, 75] xx => I,
 Pos: [51, 58] xx => I,
 Pos: [55, 62] cc => I,
 Pos: [56, 61] cc => I,
 Pos: [74, 79] cc => I,
 Pos: [76, 81] cc => I,
 Pos: [92, 97] xx => I,
 Pos: [102, 108] cc => I,
 Pos: [104, 111] xx => I,
 Pos: [107, 114, 120] ccc => cc,
 Pos: [115, 121] cc => I,
 Pos: [122, 129] cc => I,
 Pos: [123, 130] xx => I,
 Pos: [126, 153] xx => I,
 Pos: [127, 136] cc => I,
 Pos: [131, 158] xx => I,
 Pos: [135, 144, 154] ccc => cc,
 Pos: [141, 170] xx => I,
 Pos: [150, 167, 171] ccc => cc,
 Pos: [159, 164] cc => I,
 Pos: [182, 194] xx => I,
 Pos: [185, 191] xx => I,
 Pos: [188, 197] cc => I,
 Pos: [190, 195] cc => I,
 Pos: [193, 199, 205] xcx => c,
 Pos: [203, 210, 213] ccc => cc,
 Pos: [215, 220] xx => I,
 Pos: [216, 225] xx => I,
 Pos: [229, 238] xx => I,
 Pos: [236, 242] cc => I,
 Pos: [239, 264] xx => I,
 Pos: [241, 254] cc => I,
 Pos: [243, 252] cc => I,
 Pos: [244, 255] cc => I,
 Pos: [248, 253] cc => I]
Change: 45, Saving: 46

Circuit before: xxccccxxccccccxxcccxxxcccxxcccccccxcccccxxxxcccxcccxxxccccxccccxxxcccccxcccxccccccccccccccccxccccxxxccccxxcccccxxccccxcccccxxxxcccxxxxxccccxxxxcccxxxccxxxccccxccccccccccxxcccccxccccxxccxxccccxxxxccccccccccxxxxccccccxxxccxccccxxccxxxxxccccxxcccccxccccxxcccccxxccccxxccccc
---------------
Apply:  Pos: [0, 6] xx => I
Apply:  Pos: [2, 8] cc => I
Apply:  Pos: [17, 23] cc => I
Apply:  Pos: [30, 35] cc => I
Apply:  Pos: [33, 57] cc => I
Apply:  Pos: [34, 42] xx => I
Apply:  Pos: [39, 50] cc => I
Apply:  Pos: [41, 52] xx => I
Apply:  Pos: [45, 59] cc => I
Apply:  Pos: [46, 54] cc => I
Apply:  Pos: [47, 75] xx => I
Apply:  Pos: [51, 58] xx => I
Apply:  Pos: [55, 62] cc => I
Apply:  Pos: [56, 61] cc => I
Apply:  Pos: [74, 79] cc => I
Apply:  Pos: [76, 81] cc => I
Apply:  Pos: [92, 97] xx => I
Apply:  Pos: [102, 108] cc => I
Apply:  Pos: [104, 111] xx => I
Apply:  Pos: [107, 114, 120] ccc => cc
Apply:  Pos: [115, 121] cc => I
Apply:  Pos: [122, 129] cc => I
Apply:  Pos: [123, 130] xx => I
Apply:  Pos: [126, 153] xx => I
Apply:  Pos: [127, 136] cc => I
Apply:  Pos: [131, 158] xx => I
Apply:  Pos: [135, 144, 154] ccc => cc
Apply:  Pos: [141, 170] xx => I
Apply:  Pos: [150, 167, 171] ccc => cc
Apply:  Pos: [159, 164] cc => I
Apply:  Pos: [182, 194] xx => I
Apply:  Pos: [185, 191] xx => I
Apply:  Pos: [188, 197] cc => I
Apply:  Pos: [190, 195] cc => I
Apply:  Pos: [193, 199, 205] xcx => c
Apply:  Pos: [203, 210, 213] ccc => cc
Apply:  Pos: [215, 220] xx => I
Apply:  Pos: [216, 225] xx => I
Apply:  Pos: [229, 238] xx => I
Apply:  Pos: [236, 242] cc => I
Apply:  Pos: [239, 264] xx => I
Apply:  Pos: [241, 254] cc => I
Apply:  Pos: [243, 252] cc => I
Apply:  Pos: [244, 255] cc => I
Apply:  Pos: [248, 253] cc => I
---------------
Circuit after: xcccxcccccxxccxxxccxxccccccccxxcccxcxxxcccccxcccccccccccccccccccxxcccxccccxcccxccxxcxxxcccxxxcccxxxccxxcccccccccccxccccxccccxccxccxccccccccxxxcccccxccccccxccxxxxccccxcccxxcxxccccxccccc

--------End Timer [apply mapping plan]:  0.0

[15], [10, 11], [1, 3], [4, 18], [4], [3, 8], [14, 12], [15, 17], [9, 6], [18, 10], [10], [5], [19, 14], [18, 15], [14], [11], [6], [10, 9], [5, 18], [10], [15], [14, 8], [4, 2], [13, 5], [17, 11], [7, 1], [9, 14], [2, 7], [4, 16], [1], [18], [3, 8], [14, 8], [18, 16], [5], [4, 18], [10], [19], [17], [8, 0], [4, 16], [13, 5], [7, 3], [9, 14], [8], [16, 9], [18, 10], [15, 10], [18, 16], [1, 3], [4, 2], [18, 10], [7, 3], [17, 11], [14, 12], [8, 0], [15, 17], [2, 7], [1, 3], [5, 10], [4, 2], [11, 6], [9, 14], [16, 19], [2], [7], [18, 10], [17, 11], [16, 9], [13], [2, 16], [13, 4], [10, 9], [7, 3], [1], [15, 17], [4, 18], [19, 9], [19], [14, 0], [15, 10], [8], [16], [5, 15], [15], [14], [12], [10, 11], [13, 5], [7, 1], [0], [13], [18], [16, 19], [9, 11], [5, 15], [19], [16], [15], [14, 0], [13, 5], [14], [6], [16, 19], [8, 0], [2, 7], [7, 19], [10, 11], [9, 6], [2, 16], [16, 19], [7, 3], [5, 18], [11, 6], [14], [6, 12], [10, 11], [19, 3], [13, 4], [8], [19, 14], [13, 5], [1, 3], [10, 9], [10], [7, 19], [4, 16], [16], [17, 11], [18, 15], [18], [19, 14], [2, 16], [10, 11], [16, 9], [4, 2], [3, 8], [18, 15], [6, 12], [0], [5], [12], [9, 11], [15, 10], [16, 14], [8, 0], [10, 11], [2], [8, 12], [16, 9], [9, 11], [4, 18], [16, 19], [15, 10], [19], [14, 12], [10, 9], [18], [8], [15], [0], [10, 6], [2, 16], [13, 5], [13, 4], [6], [19, 14], [16, 9], [1, 3], [14], [1], [16, 19], [19], [18], [14, 8], [10, 9], [17, 11], [4, 16], [16], [8, 12], [19, 14], [5, 10], [1, 3], [18, 15], ----End Timer [Execute Mapping]:  1.7967181205749512

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[48, 51]
[115, 138]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[19, 36]
[101, 114]
[157, 173]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[100, 112, 121]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[21, 26, 31]
[120, 125, 131]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[19, 36]
[101, 114]
[157, 173]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[48, 51]
[115, 138]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.249035120010376

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [19, 36] xx => I, Pos: [19, 36] xx => I, Pos: [21, 26, 31] ccc => cc, Pos: [48, 51] cc => I, Pos: [48, 51] cc => I, Pos: [100, 112, 121] ccc => cc, Pos: [101, 114] xx => I, Pos: [101, 114] xx => I, Pos: [115, 138] cc => I, Pos: [115, 138] cc => I, Pos: [120, 125, 131] ccc => cc, Pos: [157, 173] xx => I, Pos: [157, 173] xx => I]

Plan: 1
[Pos: [19, 36] xx => I,
 Pos: [21, 26, 31] ccc => cc,
 Pos: [48, 51] cc => I,
 Pos: [100, 112, 121] ccc => cc,
 Pos: [101, 114] xx => I,
 Pos: [115, 138] cc => I,
 Pos: [120, 125, 131] ccc => cc,
 Pos: [157, 173] xx => I]
Change: 8, Saving: 8

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.031249046325683594

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [19, 36] xx => I,
 Pos: [21, 26, 31] ccc => cc,
 Pos: [48, 51] cc => I,
 Pos: [100, 112, 121] ccc => cc,
 Pos: [101, 114] xx => I,
 Pos: [115, 138] cc => I,
 Pos: [120, 125, 131] ccc => cc,
 Pos: [157, 173] xx => I]
Change: 8, Saving: 8

Circuit before: xcccxcccccxxccxxxccxxccccccccxxcccxcxxxcccccxcccccccccccccccccccxxcccxccccxcccxccxxcxxxcccxxxcccxxxccxxcccccccccccxccccxccccxccxccxccccccccxxxcccccxccccccxccxxxxccccxcccxxcxxccccxccccc
---------------
Apply:  Pos: [19, 36] xx => I
Apply:  Pos: [21, 26, 31] ccc => cc
Apply:  Pos: [48, 51] cc => I
Apply:  Pos: [100, 112, 121] ccc => cc
Apply:  Pos: [101, 114] xx => I
Apply:  Pos: [115, 138] cc => I
Apply:  Pos: [120, 125, 131] ccc => cc
Apply:  Pos: [157, 173] xx => I
---------------
Circuit after: xcccxcccccxxccxxxccxccccccccxxccxcxxcccccxcccccccccccccccccxxcccxccccxcccxccxxcxxxcccxxxcccxxxccxccccccccccccccxcccxccxccxccccccxxxcccccxccccccxccxxxccccxcccxxcxccccxccccc

--------End Timer [apply mapping plan]:  0.0

[15], [10, 11], [1, 3], [4, 18], [4], [3, 8], [14, 12], [15, 17], [9, 6], [18, 10], [10], [5], [19, 14], [18, 15], [14], [11], [6], [10, 9], [5, 18], [15], [9, 14], [4, 2], [13, 5], [17, 11], [7, 1], [14, 8], [2, 7], [4, 16], [1], [18], [3, 8], [18, 16], [5], [4, 18], [19], [17], [8, 0], [4, 16], [13, 5], [7, 3], [9, 14], [8], [16, 9], [15, 10], [18, 16], [1, 3], [4, 2], [7, 3], [17, 11], [14, 12], [8, 0], [15, 17], [2, 7], [1, 3], [5, 10], [4, 2], [11, 6], [9, 14], [16, 19], [2], [7], [18, 10], [17, 11], [16, 9], [13], [2, 16], [13, 4], [10, 9], [7, 3], [1], [15, 17], [4, 18], [19, 9], [19], [14, 0], [15, 10], [8], [16], [5, 15], [15], [14], [12], [10, 11], [13, 5], [7, 1], [0], [13], [18], [16, 19], [9, 11], [5, 15], [19], [16], [15], [14, 0], [13, 18], [6], [16, 19], [8, 0], [2, 7], [7, 19], [10, 11], [9, 6], [2, 16], [16, 19], [7, 3], [5, 18], [11, 6], [10, 11], [19, 3], [13, 4], [8], [7, 19], [1, 3], [10, 9], [10], [19, 14], [4, 16], [16], [17, 11], [18, 15], [18], [2, 16], [10, 11], [16, 9], [4, 2], [3, 8], [18, 15], [0], [5], [12], [9, 11], [15, 10], [16, 14], [8, 0], [10, 11], [2], [8, 12], [16, 9], [9, 11], [4, 18], [16, 19], [15, 10], [19], [14, 12], [10, 9], [8], [15], [0], [10, 6], [2, 16], [13, 4], [13, 5], [6], [19, 14], [16, 9], [1, 3], [14], [1], [16, 19], [19], [14, 8], [10, 9], [17, 11], [4, 16], [16], [8, 12], [19, 14], [5, 10], [1, 3], [18, 15], ----End Timer [Execute Mapping]:  1.2802841663360596

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[81, 130]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[81, 130]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.1719157695770264

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [81, 130] xx => I, Pos: [81, 130] xx => I]

Plan: 1
[Pos: [81, 130] xx => I]
Change: 1, Saving: 1

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.015610933303833008

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [81, 130] xx => I]
Change: 1, Saving: 1

Circuit before: xcccxcccccxxccxxxccxccccccccxxccxcxxcccccxcccccccccccccccccxxcccxccccxcccxccxxcxxxcccxxxcccxxxccxccccccccccccccxcccxccxccxccccccxxxcccccxccccccxccxxxccccxcccxxcxccccxccccc
---------------
Apply:  Pos: [81, 130] xx => I
---------------
Circuit after: xcccxcccccxxccxxxccxccccccccxxccxcxxcccccxcccccccccccccccccxxcccxccccxcccxccxxcxxcccxxxcccxxxccxccccccccccccccxcccxccxccxccccccxxcccccxccccccxccxxxccccxcccxxcxccccxccccc

--------End Timer [apply mapping plan]:  0.0

[15], [10, 11], [1, 3], [4, 18], [4], [3, 8], [14, 12], [15, 17], [9, 6], [18, 10], [10], [5], [19, 14], [18, 15], [14], [11], [6], [10, 9], [5, 18], [15], [9, 14], [4, 2], [13, 5], [17, 11], [7, 1], [14, 8], [2, 7], [4, 16], [1], [18], [3, 8], [18, 16], [5], [4, 18], [19], [17], [8, 0], [4, 16], [13, 5], [7, 3], [9, 14], [8], [16, 9], [15, 10], [18, 16], [1, 3], [4, 2], [7, 3], [17, 11], [14, 12], [8, 0], [15, 17], [2, 7], [1, 3], [5, 10], [4, 2], [11, 6], [9, 14], [16, 19], [2], [7], [18, 10], [17, 11], [16, 9], [13], [2, 16], [13, 4], [10, 9], [7, 3], [1], [15, 17], [4, 18], [19, 9], [19], [14, 0], [15, 10], [8], [16], [5, 15], [15], [14], [10, 11], [13, 5], [7, 1], [0], [13], [18], [16, 19], [9, 11], [5, 15], [19], [16], [15], [14, 0], [13, 18], [6], [16, 19], [8, 0], [2, 7], [7, 19], [10, 11], [9, 6], [2, 16], [16, 19], [7, 3], [5, 18], [11, 6], [10, 11], [19, 3], [13, 4], [8], [7, 19], [1, 3], [10, 9], [10], [19, 14], [4, 16], [16], [17, 11], [18, 15], [18], [2, 16], [10, 11], [16, 9], [4, 2], [3, 8], [18, 15], [0], [5], [9, 11], [15, 10], [16, 14], [8, 0], [10, 11], [2], [8, 12], [16, 9], [9, 11], [4, 18], [16, 19], [15, 10], [19], [14, 12], [10, 9], [8], [15], [0], [10, 6], [2, 16], [13, 5], [13, 4], [6], [19, 14], [16, 9], [1, 3], [14], [1], [16, 19], [19], [14, 8], [10, 9], [17, 11], [4, 16], [16], [8, 12], [19, 14], [5, 10], [1, 3], [18, 15], ----End Timer [Execute Mapping]:  1.1875267028808594

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.218677282333374

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

..........

Total Plans: 0

--------End Timer [Generate Plans]:  0.0

There's no mapping plan.
[15], [10, 11], [1, 3], [4, 18], [4], [3, 8], [14, 12], [15, 17], [9, 6], [18, 10], [10], [5], [19, 14], [18, 15], [14], [11], [6], [10, 9], [5, 18], [15], [9, 14], [4, 2], [13, 5], [17, 11], [7, 1], [14, 8], [2, 7], [4, 16], [1], [18], [3, 8], [18, 16], [5], [4, 18], [19], [17], [8, 0], [4, 16], [13, 5], [7, 3], [9, 14], [8], [16, 9], [15, 10], [18, 16], [1, 3], [4, 2], [7, 3], [17, 11], [14, 12], [8, 0], [15, 17], [2, 7], [1, 3], [5, 10], [4, 2], [11, 6], [9, 14], [16, 19], [2], [7], [18, 10], [17, 11], [16, 9], [13], [2, 16], [13, 4], [10, 9], [7, 3], [1], [15, 17], [4, 18], [19, 9], [19], [14, 0], [15, 10], [8], [16], [5, 15], [15], [14], [10, 11], [13, 5], [7, 1], [0], [13], [18], [16, 19], [9, 11], [5, 15], [19], [16], [15], [14, 0], [13, 18], [6], [16, 19], [8, 0], [2, 7], [7, 19], [10, 11], [9, 6], [2, 16], [16, 19], [7, 3], [5, 18], [11, 6], [10, 11], [19, 3], [13, 4], [8], [7, 19], [1, 3], [10, 9], [10], [19, 14], [4, 16], [16], [17, 11], [18, 15], [18], [2, 16], [10, 11], [16, 9], [4, 2], [3, 8], [18, 15], [0], [5], [9, 11], [15, 10], [16, 14], [8, 0], [10, 11], [2], [8, 12], [16, 9], [9, 11], [4, 18], [16, 19], [15, 10], [19], [14, 12], [10, 9], [8], [15], [0], [10, 6], [2, 16], [13, 4], [13, 5], [6], [19, 14], [16, 9], [1, 3], [14], [1], [16, 19], [19], [14, 8], [10, 9], [17, 11], [4, 16], [16], [8, 12], [19, 14], [5, 10], [1, 3], [18, 15], ----End Timer [Execute Mapping]:  1.218677282333374

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-x-x-x-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-x-cx-cx-cx-x-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-x-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-x-x-x-x-x-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-x-x-x-cx-cx-x-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-cx-cx-x-x-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-x-cx-cx-cx-cx-x-x-cx-cx-x-x-x-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx 
     => total size: [270] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx,x]
 - circuit depth: 45 - (small)
 - circuit cycle: 450


>> Solved circuit: 
Circuit Info: 
 - circuit: x-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-cx-cx-x-x-x-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-x-cx-x-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-x-cx-cx-cx-cx-x-cx-cx-cx-x-cx-cx-x-x-cx-x-x-cx-cx-cx-x-x-x-cx-cx-cx-x-x-x-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-x-cx-cx-x-cx-cx-x-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-cx-cx-x-x-x-cx-cx-cx-cx-x-cx-cx-cx-x-x-cx-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx 
     => total size: [169] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx,x]
 - circuit depth: 32 - (small)
 - circuit cycle: 292

Reduced: 
 - size: 101 (37.41%)
 - depth: 13 (28.89%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.10938096046447754

[0], [15], [7, 19], [10, 11], [1, 3], [4, 18], [0], [4], [7, 19], [3, 8], [14, 12], [15, 17], [9, 6], [18, 10], [10], [5], [19, 14], [7, 3], [18, 15], [14], [11], [6], [10, 9], [7, 3], [5, 18], [10], [15], [14, 8], [4, 2], [13, 5], [3, 8], [17, 11], [7, 1], [9, 6], [19], [3, 8], [9, 14], [2, 7], [4, 16], [15, 17], [1], [7], [19], [18], [3, 8], [10, 11], [14, 0], [12], [14, 8], [18, 16], [15, 17], [8], [7], [5], [14, 0], [16, 19], [1, 3], [9, 6], [8], [10, 11], [4, 18], [1, 3], [16, 19], [10], [19], [17], [8, 0], [4, 16], [13, 5], [7, 3], [9, 14], [8], [16, 9], [18, 10], [4, 2], [12], [8, 0], [15, 10], [18, 16], [4, 2], [1, 3], [8, 0], [4, 2], [18, 10], [7, 3], [17, 11], [14, 12], [8, 0], [15, 17], [2, 7], [1, 3], [5, 10], [0], [4, 2], [11, 6], [9, 14], [16, 19], [0], [2], [7], [18, 10], [17, 11], [8, 12], [16, 9], [0], [13], [2, 16], [4, 18], [8, 12], [10, 9], [7, 3], [0], [1], [15, 17], [13, 4], [2, 7], [19, 9], [19], [14, 0], [15, 10], [4, 18], [2, 7], [11, 6], [0], [8], [16], [17], [19, 3], [5, 15], [11, 6], [0], [4], [15], [14], [12], [10, 9], [19, 3], [13, 5], [7, 1], [0], [13], [1], [18], [16, 19], [9, 11], [5, 15], [19], [16], [15], [14, 0], [5, 18], [14], [6], [17], [10, 9], [16, 19], [8, 0], [2, 7], [4], [14, 0], [7, 19], [10, 11], [9, 6], [2, 16], [14, 0], [16, 19], [7, 3], [13, 5], [11, 6], [14], [1], [5, 18], [6, 12], [10, 11], [19, 3], [13, 4], [8], [19, 14], [13, 5], [1, 3], [10, 9], [10], [5], [7, 19], [4, 16], [19], [16], [17, 11], [12, 0], [18, 15], [7, 1], [19], [18], [14], [5], [7, 1], [2, 16], [12, 0], [10, 11], [19, 14], [16, 9], [4, 2], [3, 8], [15, 10], [6, 12], [14], [0], [5], [12], [9, 11], [18, 10], [16, 14], [8, 0], [18, 15], [10, 11], [14], [6], [2], [8, 12], [16, 9], [14], [9, 11], [4, 18], [16, 19], [15, 10], [6], [19], [14, 12], [10, 9], [14], [18], [8], [15], [0], [10, 6], [2, 16], [19, 9], [13, 5], [14], [2], [13, 4], [17, 11], [19, 9], [18, 10], [5, 15], [6], [19, 14], [16, 9], [12, 0], [1, 3], [14], [1], [18, 10], [12, 0], [17, 11], [5, 15], [16, 19], [19], [18], [14, 8], [10, 9], [17, 11], [4, 16], [16], [2], [8, 12], [19, 14], [5, 10], [1, 3], [18, 15], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[2, 8]
[17, 23]
[30, 35]
[35, 44]
[39, 50]
[46, 54]
[33, 57]
[45, 59]
[56, 61]
[55, 62]
[74, 79]
[76, 81]
[79, 82]
[81, 87]
[102, 108]
[115, 121]
[122, 129]
[127, 136]
[159, 164]
[190, 195]
[188, 197]
[236, 242]
[243, 252]
[248, 253]
[241, 254]
[244, 255]
[254, 261]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[0, 6]
[34, 42]
[41, 52]
[51, 58]
[47, 75]
[92, 97]
[97, 104]
[104, 111]
[123, 130]
[130, 139]
[126, 153]
[131, 158]
[141, 170]
[185, 191]
[182, 194]
[194, 207]
[215, 220]
[216, 225]
[229, 238]
[239, 264]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[135, 144, 154]
[167, 171, 178]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 

[111, 118, 123]
[193, 199, 205]
[205, 211, 215]
[238, 246, 250]

------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[107, 114, 120]
[150, 167, 171]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[203, 210, 213]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[0, 6]
[34, 42]
[41, 52]
[51, 58]
[47, 75]
[92, 97]
[97, 104]
[104, 111]
[123, 130]
[130, 139]
[126, 153]
[131, 158]
[141, 170]
[185, 191]
[182, 194]
[194, 207]
[215, 220]
[216, 225]
[229, 238]
[239, 264]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[2, 8]
[17, 23]
[30, 35]
[35, 44]
[39, 50]
[46, 54]
[33, 57]
[45, 59]
[56, 61]
[55, 62]
[74, 79]
[76, 81]
[79, 82]
[81, 87]
[102, 108]
[115, 121]
[122, 129]
[127, 136]
[159, 164]
[190, 195]
[188, 197]
[236, 242]
[243, 252]
[248, 253]
[241, 254]
[244, 255]
[254, 261]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.687748908996582

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 6] xx => I, Pos: [0, 6] xx => I, Pos: [2, 8] cc => I, Pos: [2, 8] cc => I, Pos: [17, 23] cc => I, Pos: [17, 23] cc => I, Pos: [30, 35] cc => I, Pos: [30, 35] cc => I, Pos: [33, 57] cc => I, Pos: [33, 57] cc => I, Pos: [34, 42] xx => I, Pos: [34, 42] xx => I, Pos: [35, 44] cc => I, Pos: [35, 44] cc => I, Pos: [39, 50] cc => I, Pos: [39, 50] cc => I, Pos: [41, 52] xx => I, Pos: [41, 52] xx => I, Pos: [45, 59] cc => I, Pos: [45, 59] cc => I, Pos: [46, 54] cc => I, Pos: [46, 54] cc => I, Pos: [47, 75] xx => I, Pos: [47, 75] xx => I, Pos: [51, 58] xx => I, Pos: [51, 58] xx => I, Pos: [55, 62] cc => I, Pos: [55, 62] cc => I, Pos: [56, 61] cc => I, Pos: [56, 61] cc => I, Pos: [74, 79] cc => I, Pos: [74, 79] cc => I, Pos: [76, 81] cc => I, Pos: [76, 81] cc => I, Pos: [79, 82] cc => I, Pos: [79, 82] cc => I, Pos: [81, 87] cc => I, Pos: [81, 87] cc => I, Pos: [92, 97] xx => I, Pos: [92, 97] xx => I, Pos: [97, 104] xx => I, Pos: [97, 104] xx => I, Pos: [102, 108] cc => I, Pos: [102, 108] cc => I, Pos: [104, 111] xx => I, Pos: [104, 111] xx => I, Pos: [107, 114, 120] ccc => cc, Pos: [111, 118, 123] xcx => c, Pos: [115, 121] cc => I, Pos: [115, 121] cc => I, Pos: [122, 129] cc => I, Pos: [122, 129] cc => I, Pos: [123, 130] xx => I, Pos: [123, 130] xx => I, Pos: [126, 153] xx => I, Pos: [126, 153] xx => I, Pos: [127, 136] cc => I, Pos: [127, 136] cc => I, Pos: [130, 139] xx => I, Pos: [130, 139] xx => I, Pos: [131, 158] xx => I, Pos: [131, 158] xx => I, Pos: [135, 144, 154] ccc => cc, Pos: [141, 170] xx => I, Pos: [141, 170] xx => I, Pos: [150, 167, 171] ccc => cc, Pos: [159, 164] cc => I, Pos: [159, 164] cc => I, Pos: [167, 171, 178] ccc => cc, Pos: [182, 194] xx => I, Pos: [182, 194] xx => I, Pos: [185, 191] xx => I, Pos: [185, 191] xx => I, Pos: [188, 197] cc => I, Pos: [188, 197] cc => I, Pos: [190, 195] cc => I, Pos: [190, 195] cc => I, Pos: [193, 199, 205] xcx => c, Pos: [194, 207] xx => I, Pos: [194, 207] xx => I, Pos: [203, 210, 213] ccc => cc, Pos: [205, 211, 215] xcx => c, Pos: [215, 220] xx => I, Pos: [215, 220] xx => I, Pos: [216, 225] xx => I, Pos: [216, 225] xx => I, Pos: [229, 238] xx => I, Pos: [229, 238] xx => I, Pos: [236, 242] cc => I, Pos: [236, 242] cc => I, Pos: [238, 246, 250] xcx => c, Pos: [239, 264] xx => I, Pos: [239, 264] xx => I, Pos: [241, 254] cc => I, Pos: [241, 254] cc => I, Pos: [243, 252] cc => I, Pos: [243, 252] cc => I, Pos: [244, 255] cc => I, Pos: [244, 255] cc => I, Pos: [248, 253] cc => I, Pos: [248, 253] cc => I, Pos: [254, 261] cc => I, Pos: [254, 261] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 6] xx => I,
 Pos: [2, 8] cc => I,
 Pos: [17, 23] cc => I,
 Pos: [30, 35] cc => I,
 Pos: [33, 57] cc => I,
 Pos: [34, 42] xx => I,
 Pos: [39, 50] cc => I,
 Pos: [41, 52] xx => I,
 Pos: [45, 59] cc => I,
 Pos: [46, 54] cc => I,
 Pos: [47, 75] xx => I,
 Pos: [51, 58] xx => I,
 Pos: [55, 62] cc => I,
 Pos: [56, 61] cc => I,
 Pos: [74, 79] cc => I,
 Pos: [76, 81] cc => I,
 Pos: [97, 104] xx => I,
 Pos: [102, 108] cc => I,
 Pos: [107, 114, 120] ccc => cc,
 Pos: [123, 130] xx => I,
 Pos: [115, 121] cc => I,
 Pos: [122, 129] cc => I,
 Pos: [126, 153] xx => I,
 Pos: [127, 136] cc => I,
 Pos: [131, 158] xx => I,
 Pos: [135, 144, 154] ccc => cc,
 Pos: [141, 170] xx => I,
 Pos: [167, 171, 178] ccc => cc,
 Pos: [159, 164] cc => I,
 Pos: [194, 207] xx => I,
 Pos: [185, 191] xx => I,
 Pos: [188, 197] cc => I,
 Pos: [190, 195] cc => I,
 Pos: [193, 199, 205] xcx => c,
 Pos: [203, 210, 213] ccc => cc,
 Pos: [215, 220] xx => I,
 Pos: [216, 225] xx => I,
 Pos: [229, 238] xx => I,
 Pos: [236, 242] cc => I,
 Pos: [239, 264] xx => I,
 Pos: [241, 254] cc => I,
 Pos: [243, 252] cc => I,
 Pos: [244, 255] cc => I,
 Pos: [248, 253] cc => I]
Change: 44, Saving: 134

Circuit before: xxccccxxccccccxxcccxxxcccxxcccccccxcccccxxxxcccxcccxxxccccxccccxxxcccccxcccxccccccccccccccccxccccxxxccccxxcccccxxccccxcccccxxxxcccxxxxxccccxxxxcccxxxccxxxccccxccccccccccxxcccccxccccxxccxxccccxxxxccccccccccxxxxccccccxxxccxccccxxccxxxxxccccxxcccccxccccxxcccccxxccccxxccccc
---------------
Apply:  Pos: [0, 6] xx => I
Apply:  Pos: [2, 8] cc => I
Apply:  Pos: [17, 23] cc => I
Apply:  Pos: [30, 35] cc => I
Apply:  Pos: [33, 57] cc => I
Apply:  Pos: [34, 42] xx => I
Apply:  Pos: [39, 50] cc => I
Apply:  Pos: [41, 52] xx => I
Apply:  Pos: [45, 59] cc => I
Apply:  Pos: [46, 54] cc => I
Apply:  Pos: [47, 75] xx => I
Apply:  Pos: [51, 58] xx => I
Apply:  Pos: [55, 62] cc => I
Apply:  Pos: [56, 61] cc => I
Apply:  Pos: [74, 79] cc => I
Apply:  Pos: [76, 81] cc => I
Apply:  Pos: [97, 104] xx => I
Apply:  Pos: [102, 108] cc => I
Apply:  Pos: [107, 114, 120] ccc => cc
Apply:  Pos: [123, 130] xx => I
Apply:  Pos: [115, 121] cc => I
Apply:  Pos: [122, 129] cc => I
Apply:  Pos: [126, 153] xx => I
Apply:  Pos: [127, 136] cc => I
Apply:  Pos: [131, 158] xx => I
Apply:  Pos: [135, 144, 154] ccc => cc
Apply:  Pos: [141, 170] xx => I
Apply:  Pos: [167, 171, 178] ccc => cc
Apply:  Pos: [159, 164] cc => I
Apply:  Pos: [194, 207] xx => I
Apply:  Pos: [185, 191] xx => I
Apply:  Pos: [188, 197] cc => I
Apply:  Pos: [190, 195] cc => I
Apply:  Pos: [193, 199, 205] xcx => c
Apply:  Pos: [203, 210, 213] ccc => cc
Apply:  Pos: [215, 220] xx => I
Apply:  Pos: [216, 225] xx => I
Apply:  Pos: [229, 238] xx => I
Apply:  Pos: [236, 242] cc => I
Apply:  Pos: [239, 264] xx => I
Apply:  Pos: [241, 254] cc => I
Apply:  Pos: [243, 252] cc => I
Apply:  Pos: [244, 255] cc => I
Apply:  Pos: [248, 253] cc => I
---------------
Circuit after: xcccxcccccxxccxxxccxxccccccccxxcccxcxxxcccccxcccccccccccccccxccccxxcccxccccxxcccxccxxcxxxcccxxxcccxxxccxxcccccccccccxcccccxcccxxccxccxccccccccxxcccccxccccccxccxxxxccccxcccxxcxxccccxccccc

--------End Timer [apply mapping plan]:  0.0

[15], [10, 11], [1, 3], [4, 18], [4], [3, 8], [14, 12], [15, 17], [9, 6], [18, 10], [10], [5], [19, 14], [18, 15], [14], [11], [6], [10, 9], [5, 18], [10], [15], [14, 8], [4, 2], [13, 5], [17, 11], [7, 1], [9, 14], [2, 7], [4, 16], [1], [18], [3, 8], [14, 8], [18, 16], [5], [4, 18], [10], [19], [17], [8, 0], [4, 16], [13, 5], [7, 3], [9, 14], [8], [16, 9], [18, 10], [15, 10], [18, 16], [1, 3], [4, 2], [18, 10], [7, 3], [17, 11], [14, 12], [8, 0], [15, 17], [2, 7], [1, 3], [5, 10], [0], [4, 2], [11, 6], [9, 14], [16, 19], [2], [7], [18, 10], [17, 11], [16, 9], [13], [2, 16], [13, 4], [10, 9], [7, 3], [0], [1], [15, 17], [4, 18], [19, 9], [19], [14, 0], [15, 10], [8], [16], [5, 15], [15], [14], [12], [10, 11], [13, 5], [7, 1], [0], [13], [18], [16, 19], [9, 11], [5, 15], [19], [16], [15], [14, 0], [5, 18], [14], [6], [16, 19], [8, 0], [2, 7], [7, 19], [10, 11], [9, 6], [2, 16], [16, 19], [7, 3], [13, 18], [11, 6], [14], [5, 18], [6, 12], [10, 11], [19, 3], [13, 4], [8], [19, 14], [1, 3], [10, 9], [10], [5], [7, 19], [4, 16], [16], [17, 11], [18, 15], [18], [19, 14], [2, 16], [10, 11], [16, 9], [4, 2], [3, 8], [18, 15], [6, 12], [0], [12], [9, 11], [15, 10], [16, 14], [8, 0], [10, 11], [2], [8, 12], [16, 9], [9, 11], [4, 18], [16, 19], [15, 10], [19], [14, 12], [10, 9], [18], [8], [15], [0], [10, 6], [2, 16], [13, 5], [13, 4], [6], [19, 14], [16, 9], [1, 3], [14], [1], [16, 19], [19], [18], [14, 8], [10, 9], [17, 11], [4, 16], [16], [8, 12], [19, 14], [5, 10], [1, 3], [18, 15], ----End Timer [Execute Mapping]:  1.687748908996582

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[48, 51]
[118, 141]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[19, 36]
[60, 75]
[103, 116]
[159, 175]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[21, 26, 31]
[123, 128, 134]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[19, 36]
[60, 75]
[103, 116]
[159, 175]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[48, 51]
[118, 141]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.2346947193145752

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [19, 36] xx => I, Pos: [19, 36] xx => I, Pos: [21, 26, 31] ccc => cc, Pos: [48, 51] cc => I, Pos: [48, 51] cc => I, Pos: [60, 75] xx => I, Pos: [60, 75] xx => I, Pos: [103, 116] xx => I, Pos: [103, 116] xx => I, Pos: [118, 141] cc => I, Pos: [118, 141] cc => I, Pos: [123, 128, 134] ccc => cc, Pos: [159, 175] xx => I, Pos: [159, 175] xx => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [19, 36] xx => I,
 Pos: [21, 26, 31] ccc => cc,
 Pos: [48, 51] cc => I,
 Pos: [60, 75] xx => I,
 Pos: [103, 116] xx => I,
 Pos: [118, 141] cc => I,
 Pos: [123, 128, 134] ccc => cc,
 Pos: [159, 175] xx => I]
Change: 8, Saving: 20

Circuit before: xcccxcccccxxccxxxccxxccccccccxxcccxcxxxcccccxcccccccccccccccxccccxxcccxccccxxcccxccxxcxxxcccxxxcccxxxccxxcccccccccccxcccccxcccxxccxccxccccccccxxcccccxccccccxccxxxxccccxcccxxcxxccccxccccc
---------------
Apply:  Pos: [19, 36] xx => I
Apply:  Pos: [21, 26, 31] ccc => cc
Apply:  Pos: [48, 51] cc => I
Apply:  Pos: [60, 75] xx => I
Apply:  Pos: [103, 116] xx => I
Apply:  Pos: [118, 141] cc => I
Apply:  Pos: [123, 128, 134] ccc => cc
Apply:  Pos: [159, 175] xx => I
---------------
Circuit after: xcccxcccccxxccxxxccxccccccccxxccxcxxcccccxcccccccccccccccccxxcccxccccxcccxccxxcxxxcccxxxcccxxxccxcccccccccccccccxcccxxccxccxccccccxxcccccxccccccxccxxxccccxcccxxcxccccxccccc

--------End Timer [apply mapping plan]:  0.0

[15], [10, 11], [1, 3], [4, 18], [4], [3, 8], [14, 12], [15, 17], [9, 6], [18, 10], [10], [5], [19, 14], [18, 15], [14], [11], [6], [10, 9], [5, 18], [15], [9, 14], [4, 2], [13, 5], [17, 11], [7, 1], [14, 8], [2, 7], [4, 16], [1], [18], [3, 8], [18, 16], [5], [4, 18], [19], [17], [8, 0], [4, 16], [13, 5], [7, 3], [9, 14], [8], [16, 9], [15, 10], [18, 16], [1, 3], [4, 2], [7, 3], [17, 11], [14, 12], [8, 0], [15, 17], [2, 7], [1, 3], [5, 10], [4, 2], [11, 6], [9, 14], [16, 19], [2], [7], [18, 10], [17, 11], [16, 9], [13], [2, 16], [13, 4], [10, 9], [7, 3], [1], [15, 17], [4, 18], [19, 9], [19], [14, 0], [15, 10], [8], [16], [5, 15], [15], [14], [12], [10, 11], [13, 5], [7, 1], [0], [13], [18], [16, 19], [9, 11], [5, 15], [19], [16], [15], [14, 0], [5, 18], [6], [16, 19], [8, 0], [2, 7], [7, 19], [10, 11], [9, 6], [2, 16], [16, 19], [7, 3], [13, 18], [11, 6], [5, 18], [10, 11], [19, 3], [13, 4], [8], [7, 19], [1, 3], [10, 9], [10], [5], [19, 14], [4, 16], [16], [17, 11], [18, 15], [18], [2, 16], [10, 11], [16, 9], [4, 2], [3, 8], [18, 15], [0], [12], [9, 11], [15, 10], [16, 14], [8, 0], [10, 11], [2], [8, 12], [16, 9], [9, 11], [4, 18], [16, 19], [15, 10], [19], [14, 12], [10, 9], [8], [15], [0], [10, 6], [2, 16], [13, 4], [13, 5], [6], [19, 14], [16, 9], [1, 3], [14], [1], [16, 19], [19], [14, 8], [10, 9], [17, 11], [4, 16], [16], [8, 12], [19, 14], [5, 10], [1, 3], [18, 15], ----End Timer [Execute Mapping]:  1.2346947193145752

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[81, 131]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[81, 131]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.2030298709869385

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [81, 131] xx => I, Pos: [81, 131] xx => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [81, 131] xx => I]
Change: 1, Saving: 2

Circuit before: xcccxcccccxxccxxxccxccccccccxxccxcxxcccccxcccccccccccccccccxxcccxccccxcccxccxxcxxxcccxxxcccxxxccxcccccccccccccccxcccxxccxccxccccccxxcccccxccccccxccxxxccccxcccxxcxccccxccccc
---------------
Apply:  Pos: [81, 131] xx => I
---------------
Circuit after: xcccxcccccxxccxxxccxccccccccxxccxcxxcccccxcccccccccccccccccxxcccxccccxcccxccxxcxxcccxxxcccxxxccxcccccccccccccccxcccxxccxccxccccccxcccccxccccccxccxxxccccxcccxxcxccccxccccc

--------End Timer [apply mapping plan]:  0.0

[15], [10, 11], [1, 3], [4, 18], [4], [3, 8], [14, 12], [15, 17], [9, 6], [18, 10], [10], [5], [19, 14], [18, 15], [14], [11], [6], [10, 9], [5, 18], [15], [9, 14], [4, 2], [13, 5], [17, 11], [7, 1], [14, 8], [2, 7], [4, 16], [1], [18], [3, 8], [18, 16], [5], [4, 18], [19], [17], [8, 0], [4, 16], [13, 5], [7, 3], [9, 14], [8], [16, 9], [15, 10], [18, 16], [1, 3], [4, 2], [7, 3], [17, 11], [14, 12], [8, 0], [15, 17], [2, 7], [1, 3], [5, 10], [4, 2], [11, 6], [9, 14], [16, 19], [2], [7], [18, 10], [17, 11], [16, 9], [13], [2, 16], [13, 4], [10, 9], [7, 3], [1], [15, 17], [4, 18], [19, 9], [19], [14, 0], [15, 10], [8], [16], [5, 15], [15], [14], [10, 11], [13, 5], [7, 1], [0], [13], [18], [16, 19], [9, 11], [5, 15], [19], [16], [15], [14, 0], [5, 18], [6], [16, 19], [8, 0], [2, 7], [7, 19], [10, 11], [9, 6], [2, 16], [16, 19], [7, 3], [13, 18], [11, 6], [5, 18], [10, 11], [19, 3], [13, 4], [8], [7, 19], [1, 3], [10, 9], [10], [5], [19, 14], [4, 16], [16], [17, 11], [18, 15], [18], [2, 16], [10, 11], [16, 9], [4, 2], [3, 8], [18, 15], [0], [9, 11], [15, 10], [16, 14], [8, 0], [10, 11], [2], [8, 12], [16, 9], [9, 11], [4, 18], [16, 19], [15, 10], [19], [14, 12], [10, 9], [8], [15], [0], [10, 6], [2, 16], [13, 5], [13, 4], [6], [19, 14], [16, 9], [1, 3], [14], [1], [16, 19], [19], [14, 8], [10, 9], [17, 11], [4, 16], [16], [8, 12], [19, 14], [5, 10], [1, 3], [18, 15], ----End Timer [Execute Mapping]:  1.2030298709869385

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.2350044250488281

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: xcccxcccccxxccxxxccxccccccccxxccxcxxcccccxcccccccccccccccccxxcccxccccxcccxccxxcxxcccxxxcccxxxccxcccccccccccccccxcccxxccxccxccccccxcccccxccccccxccxxxccccxcccxxcxccccxccccc
---------------
---------------
Circuit after: xcccxcccccxxccxxxccxccccccccxxccxcxxcccccxcccccccccccccccccxxcccxccccxcccxccxxcxxcccxxxcccxxxccxcccccccccccccccxcccxxccxccxccccccxcccccxccccccxccxxxccccxcccxxcxccccxccccc

--------End Timer [apply mapping plan]:  0.0

[15], [10, 11], [1, 3], [4, 18], [4], [3, 8], [14, 12], [15, 17], [9, 6], [18, 10], [10], [5], [19, 14], [18, 15], [14], [11], [6], [10, 9], [5, 18], [15], [9, 14], [4, 2], [13, 5], [17, 11], [7, 1], [14, 8], [2, 7], [4, 16], [1], [18], [3, 8], [18, 16], [5], [4, 18], [19], [17], [8, 0], [4, 16], [13, 5], [7, 3], [9, 14], [8], [16, 9], [15, 10], [18, 16], [1, 3], [4, 2], [7, 3], [17, 11], [14, 12], [8, 0], [15, 17], [2, 7], [1, 3], [5, 10], [4, 2], [11, 6], [9, 14], [16, 19], [2], [7], [18, 10], [17, 11], [16, 9], [13], [2, 16], [13, 4], [10, 9], [7, 3], [1], [15, 17], [4, 18], [19, 9], [19], [14, 0], [15, 10], [8], [16], [5, 15], [15], [14], [10, 11], [13, 5], [7, 1], [0], [13], [18], [16, 19], [9, 11], [5, 15], [19], [16], [15], [14, 0], [5, 18], [6], [16, 19], [8, 0], [2, 7], [7, 19], [10, 11], [9, 6], [2, 16], [16, 19], [7, 3], [13, 18], [11, 6], [5, 18], [10, 11], [19, 3], [13, 4], [8], [7, 19], [1, 3], [10, 9], [10], [5], [19, 14], [4, 16], [16], [17, 11], [18, 15], [18], [2, 16], [10, 11], [16, 9], [4, 2], [3, 8], [18, 15], [0], [9, 11], [15, 10], [16, 14], [8, 0], [10, 11], [2], [8, 12], [16, 9], [9, 11], [4, 18], [16, 19], [15, 10], [19], [14, 12], [10, 9], [8], [15], [0], [10, 6], [2, 16], [13, 4], [13, 5], [6], [19, 14], [16, 9], [1, 3], [14], [1], [16, 19], [19], [14, 8], [10, 9], [17, 11], [4, 16], [16], [8, 12], [19, 14], [5, 10], [1, 3], [18, 15], ----End Timer [Execute Mapping]:  1.2350044250488281

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-x-x-x-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-x-cx-cx-cx-x-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-x-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-x-x-x-x-x-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-x-x-x-cx-cx-x-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-cx-cx-x-x-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-x-cx-cx-cx-cx-x-x-cx-cx-x-x-x-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx 
     => total size: [270] (IBM)
 --------------------
 - qubits_num: 20, using gates: [x,cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 450


>> Solved circuit: 
Circuit Info: 
 - circuit: x-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-cx-cx-x-x-x-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-x-cx-x-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-x-cx-cx-cx-cx-x-cx-cx-cx-x-cx-cx-x-x-cx-x-x-cx-cx-cx-x-x-x-cx-cx-cx-x-x-x-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-x-x-cx-cx-x-cx-cx-x-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-cx-cx-x-x-x-cx-cx-cx-cx-x-cx-cx-cx-x-x-cx-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx 
     => total size: [170] (IBM)
 --------------------
 - qubits_num: 20, using gates: [x,cx]
 - circuit depth: 32 - (small)
 - circuit cycle: 294

Reduced: 
 - size: 100 (37.04%)
 - cycle: 156 (34.67%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.10938096046447754

[0], [15], [7, 19], [10, 11], [1, 3], [4, 18], [0], [4], [7, 19], [3, 8], [14, 12], [15, 17], [9, 6], [18, 10], [10], [5], [19, 14], [7, 3], [18, 15], [14], [11], [6], [10, 9], [7, 3], [5, 18], [10], [15], [14, 8], [4, 2], [13, 5], [3, 8], [17, 11], [7, 1], [9, 6], [19], [3, 8], [9, 14], [2, 7], [4, 16], [15, 17], [1], [7], [19], [18], [3, 8], [10, 11], [14, 0], [12], [14, 8], [18, 16], [15, 17], [8], [7], [5], [14, 0], [16, 19], [1, 3], [9, 6], [8], [10, 11], [4, 18], [1, 3], [16, 19], [10], [19], [17], [8, 0], [4, 16], [13, 5], [7, 3], [9, 14], [8], [16, 9], [18, 10], [4, 2], [12], [8, 0], [15, 10], [18, 16], [4, 2], [1, 3], [8, 0], [4, 2], [18, 10], [7, 3], [17, 11], [14, 12], [8, 0], [15, 17], [2, 7], [1, 3], [5, 10], [0], [4, 2], [11, 6], [9, 14], [16, 19], [0], [2], [7], [18, 10], [17, 11], [8, 12], [16, 9], [0], [13], [2, 16], [4, 18], [8, 12], [10, 9], [7, 3], [0], [1], [15, 17], [13, 4], [2, 7], [19, 9], [19], [14, 0], [15, 10], [4, 18], [2, 7], [11, 6], [0], [8], [16], [17], [19, 3], [5, 15], [11, 6], [0], [4], [15], [14], [12], [10, 9], [19, 3], [13, 5], [7, 1], [0], [13], [1], [18], [16, 19], [9, 11], [5, 15], [19], [16], [15], [14, 0], [5, 18], [14], [6], [17], [10, 9], [16, 19], [8, 0], [2, 7], [4], [14, 0], [7, 19], [10, 11], [9, 6], [2, 16], [14, 0], [16, 19], [7, 3], [13, 5], [11, 6], [14], [1], [5, 18], [6, 12], [10, 11], [19, 3], [13, 4], [8], [19, 14], [13, 5], [1, 3], [10, 9], [10], [5], [7, 19], [4, 16], [19], [16], [17, 11], [12, 0], [18, 15], [7, 1], [19], [18], [14], [5], [7, 1], [2, 16], [12, 0], [10, 11], [19, 14], [16, 9], [4, 2], [3, 8], [15, 10], [6, 12], [14], [0], [5], [12], [9, 11], [18, 10], [16, 14], [8, 0], [18, 15], [10, 11], [14], [6], [2], [8, 12], [16, 9], [14], [9, 11], [4, 18], [16, 19], [15, 10], [6], [19], [14, 12], [10, 9], [14], [18], [8], [15], [0], [10, 6], [2, 16], [19, 9], [13, 5], [14], [2], [13, 4], [17, 11], [19, 9], [18, 10], [5, 15], [6], [19, 14], [16, 9], [12, 0], [1, 3], [14], [1], [18, 10], [12, 0], [17, 11], [5, 15], [16, 19], [19], [18], [14, 8], [10, 9], [17, 11], [4, 16], [16], [2], [8, 12], [19, 14], [5, 10], [1, 3], [18, 15], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[2, 8]
[17, 23]
[30, 35]
[35, 44]
[39, 50]
[46, 54]
[33, 57]
[45, 59]
[56, 61]
[55, 62]
[74, 79]
[76, 81]
[79, 82]
[81, 87]
[102, 108]
[115, 121]
[122, 129]
[127, 136]
[159, 164]
[190, 195]
[188, 197]
[236, 242]
[243, 252]
[248, 253]
[241, 254]
[244, 255]
[254, 261]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[0, 6]
[34, 42]
[41, 52]
[51, 58]
[47, 75]
[92, 97]
[97, 104]
[104, 111]
[123, 130]
[130, 139]
[126, 153]
[131, 158]
[141, 170]
[185, 191]
[182, 194]
[194, 207]
[215, 220]
[216, 225]
[229, 238]
[239, 264]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[135, 144, 154]
[167, 171, 178]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 

[111, 118, 123]
[193, 199, 205]
[205, 211, 215]
[238, 246, 250]

------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[107, 114, 120]
[150, 167, 171]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[203, 210, 213]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[0, 6]
[34, 42]
[41, 52]
[51, 58]
[47, 75]
[92, 97]
[97, 104]
[104, 111]
[123, 130]
[130, 139]
[126, 153]
[131, 158]
[141, 170]
[185, 191]
[182, 194]
[194, 207]
[215, 220]
[216, 225]
[229, 238]
[239, 264]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[2, 8]
[17, 23]
[30, 35]
[35, 44]
[39, 50]
[46, 54]
[33, 57]
[45, 59]
[56, 61]
[55, 62]
[74, 79]
[76, 81]
[79, 82]
[81, 87]
[102, 108]
[115, 121]
[122, 129]
[127, 136]
[159, 164]
[190, 195]
[188, 197]
[236, 242]
[243, 252]
[248, 253]
[241, 254]
[244, 255]
[254, 261]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.7119662761688232

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 6] xx => I, Pos: [0, 6] xx => I, Pos: [2, 8] cc => I, Pos: [2, 8] cc => I, Pos: [17, 23] cc => I, Pos: [17, 23] cc => I, Pos: [30, 35] cc => I, Pos: [30, 35] cc => I, Pos: [33, 57] cc => I, Pos: [33, 57] cc => I, Pos: [34, 42] xx => I, Pos: [34, 42] xx => I, Pos: [35, 44] cc => I, Pos: [35, 44] cc => I, Pos: [39, 50] cc => I, Pos: [39, 50] cc => I, Pos: [41, 52] xx => I, Pos: [41, 52] xx => I, Pos: [45, 59] cc => I, Pos: [45, 59] cc => I, Pos: [46, 54] cc => I, Pos: [46, 54] cc => I, Pos: [47, 75] xx => I, Pos: [47, 75] xx => I, Pos: [51, 58] xx => I, Pos: [51, 58] xx => I, Pos: [55, 62] cc => I, Pos: [55, 62] cc => I, Pos: [56, 61] cc => I, Pos: [56, 61] cc => I, Pos: [74, 79] cc => I, Pos: [74, 79] cc => I, Pos: [76, 81] cc => I, Pos: [76, 81] cc => I, Pos: [79, 82] cc => I, Pos: [79, 82] cc => I, Pos: [81, 87] cc => I, Pos: [81, 87] cc => I, Pos: [92, 97] xx => I, Pos: [92, 97] xx => I, Pos: [97, 104] xx => I, Pos: [97, 104] xx => I, Pos: [102, 108] cc => I, Pos: [102, 108] cc => I, Pos: [104, 111] xx => I, Pos: [104, 111] xx => I, Pos: [107, 114, 120] ccc => cc, Pos: [111, 118, 123] xcx => c, Pos: [115, 121] cc => I, Pos: [115, 121] cc => I, Pos: [122, 129] cc => I, Pos: [122, 129] cc => I, Pos: [123, 130] xx => I, Pos: [123, 130] xx => I, Pos: [126, 153] xx => I, Pos: [126, 153] xx => I, Pos: [127, 136] cc => I, Pos: [127, 136] cc => I, Pos: [130, 139] xx => I, Pos: [130, 139] xx => I, Pos: [131, 158] xx => I, Pos: [131, 158] xx => I, Pos: [135, 144, 154] ccc => cc, Pos: [141, 170] xx => I, Pos: [141, 170] xx => I, Pos: [150, 167, 171] ccc => cc, Pos: [159, 164] cc => I, Pos: [159, 164] cc => I, Pos: [167, 171, 178] ccc => cc, Pos: [182, 194] xx => I, Pos: [182, 194] xx => I, Pos: [185, 191] xx => I, Pos: [185, 191] xx => I, Pos: [188, 197] cc => I, Pos: [188, 197] cc => I, Pos: [190, 195] cc => I, Pos: [190, 195] cc => I, Pos: [193, 199, 205] xcx => c, Pos: [194, 207] xx => I, Pos: [194, 207] xx => I, Pos: [203, 210, 213] ccc => cc, Pos: [205, 211, 215] xcx => c, Pos: [215, 220] xx => I, Pos: [215, 220] xx => I, Pos: [216, 225] xx => I, Pos: [216, 225] xx => I, Pos: [229, 238] xx => I, Pos: [229, 238] xx => I, Pos: [236, 242] cc => I, Pos: [236, 242] cc => I, Pos: [238, 246, 250] xcx => c, Pos: [239, 264] xx => I, Pos: [239, 264] xx => I, Pos: [241, 254] cc => I, Pos: [241, 254] cc => I, Pos: [243, 252] cc => I, Pos: [243, 252] cc => I, Pos: [244, 255] cc => I, Pos: [244, 255] cc => I, Pos: [248, 253] cc => I, Pos: [248, 253] cc => I, Pos: [254, 261] cc => I, Pos: [254, 261] cc => I]

--------End Timer [Generate Plans]:  0.10936713218688965

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 6] xx => I,
 Pos: [2, 8] cc => I,
 Pos: [17, 23] cc => I,
 Pos: [30, 35] cc => I,
 Pos: [33, 57] cc => I,
 Pos: [34, 42] xx => I,
 Pos: [39, 50] cc => I,
 Pos: [41, 52] xx => I,
 Pos: [45, 59] cc => I,
 Pos: [46, 54] cc => I,
 Pos: [47, 75] xx => I,
 Pos: [51, 58] xx => I,
 Pos: [55, 62] cc => I,
 Pos: [56, 61] cc => I,
 Pos: [79, 82] cc => I,
 Pos: [76, 81] cc => I,
 Pos: [92, 97] xx => I,
 Pos: [102, 108] cc => I,
 Pos: [104, 111] xx => I,
 Pos: [107, 114, 120] ccc => cc,
 Pos: [115, 121] cc => I,
 Pos: [122, 129] cc => I,
 Pos: [123, 130] xx => I,
 Pos: [126, 153] xx => I,
 Pos: [127, 136] cc => I,
 Pos: [131, 158] xx => I,
 Pos: [135, 144, 154] ccc => cc,
 Pos: [141, 170] xx => I,
 Pos: [167, 171, 178] ccc => cc,
 Pos: [159, 164] cc => I,
 Pos: [182, 194] xx => I,
 Pos: [185, 191] xx => I,
 Pos: [188, 197] cc => I,
 Pos: [190, 195] cc => I,
 Pos: [193, 199, 205] xcx => c,
 Pos: [203, 210, 213] ccc => cc,
 Pos: [215, 220] xx => I,
 Pos: [216, 225] xx => I,
 Pos: [238, 246, 250] xcx => c,
 Pos: [236, 242] cc => I,
 Pos: [239, 264] xx => I,
 Pos: [241, 254] cc => I,
 Pos: [243, 252] cc => I,
 Pos: [244, 255] cc => I,
 Pos: [248, 253] cc => I]
Change: 45, Saving: 47

Circuit before: xxccccxxccccccxxcccxxxcccxxcccccccxcccccxxxxcccxcccxxxccccxccccxxxcccccxcccxccccccccccccccccxccccxxxccccxxcccccxxccccxcccccxxxxcccxxxxxccccxxxxcccxxxccxxxccccxccccccccccxxcccccxccccxxccxxccccxxxxccccccccccxxxxccccccxxxccxccccxxccxxxxxccccxxcccccxccccxxcccccxxccccxxccccc
---------------
Apply:  Pos: [0, 6] xx => I
Apply:  Pos: [2, 8] cc => I
Apply:  Pos: [17, 23] cc => I
Apply:  Pos: [30, 35] cc => I
Apply:  Pos: [33, 57] cc => I
Apply:  Pos: [34, 42] xx => I
Apply:  Pos: [39, 50] cc => I
Apply:  Pos: [41, 52] xx => I
Apply:  Pos: [45, 59] cc => I
Apply:  Pos: [46, 54] cc => I
Apply:  Pos: [47, 75] xx => I
Apply:  Pos: [51, 58] xx => I
Apply:  Pos: [55, 62] cc => I
Apply:  Pos: [56, 61] cc => I
Apply:  Pos: [79, 82] cc => I
Apply:  Pos: [76, 81] cc => I
Apply:  Pos: [92, 97] xx => I
Apply:  Pos: [102, 108] cc => I
Apply:  Pos: [104, 111] xx => I
Apply:  Pos: [107, 114, 120] ccc => cc
Apply:  Pos: [115, 121] cc => I
Apply:  Pos: [122, 129] cc => I
Apply:  Pos: [123, 130] xx => I
Apply:  Pos: [126, 153] xx => I
Apply:  Pos: [127, 136] cc => I
Apply:  Pos: [131, 158] xx => I
Apply:  Pos: [135, 144, 154] ccc => cc
Apply:  Pos: [141, 170] xx => I
Apply:  Pos: [167, 171, 178] ccc => cc
Apply:  Pos: [159, 164] cc => I
Apply:  Pos: [182, 194] xx => I
Apply:  Pos: [185, 191] xx => I
Apply:  Pos: [188, 197] cc => I
Apply:  Pos: [190, 195] cc => I
Apply:  Pos: [193, 199, 205] xcx => c
Apply:  Pos: [203, 210, 213] ccc => cc
Apply:  Pos: [215, 220] xx => I
Apply:  Pos: [216, 225] xx => I
Apply:  Pos: [238, 246, 250] xcx => c
Apply:  Pos: [236, 242] cc => I
Apply:  Pos: [239, 264] xx => I
Apply:  Pos: [241, 254] cc => I
Apply:  Pos: [243, 252] cc => I
Apply:  Pos: [244, 255] cc => I
Apply:  Pos: [248, 253] cc => I
---------------
Circuit after: xcccxcccccxxccxxxccxxccccccccxxcccxcxxxcccccxcccccccccccccccccccxxcccxccccxcccxccxxcxxxcccxxxcccxxxccxxcccccccccccxcccccxcccxccxccxccccccccxxxcccccxccccccxccxxxxxcccccxccxcxxccccxccccc

--------End Timer [apply mapping plan]:  0.0

[15], [10, 11], [1, 3], [4, 18], [4], [3, 8], [14, 12], [15, 17], [9, 6], [18, 10], [10], [5], [19, 14], [18, 15], [14], [11], [6], [10, 9], [5, 18], [10], [15], [14, 8], [4, 2], [13, 5], [17, 11], [7, 1], [9, 14], [2, 7], [4, 16], [1], [18], [3, 8], [14, 8], [18, 16], [5], [4, 18], [10], [19], [17], [8, 0], [4, 16], [13, 5], [7, 3], [9, 14], [8], [16, 9], [18, 10], [4, 2], [15, 10], [18, 16], [1, 3], [18, 10], [7, 3], [17, 11], [14, 12], [8, 0], [15, 17], [2, 7], [1, 3], [5, 10], [4, 2], [11, 6], [9, 14], [16, 19], [2], [7], [18, 10], [17, 11], [16, 9], [13], [2, 16], [13, 4], [10, 9], [7, 3], [1], [15, 17], [4, 18], [19, 9], [19], [14, 0], [15, 10], [8], [16], [5, 15], [15], [14], [12], [10, 11], [13, 5], [7, 1], [0], [13], [18], [16, 19], [9, 11], [5, 15], [19], [16], [15], [14, 0], [5, 18], [14], [6], [16, 19], [8, 0], [2, 7], [7, 19], [10, 11], [9, 6], [2, 16], [16, 19], [7, 3], [13, 18], [11, 6], [14], [5, 18], [6, 12], [10, 11], [19, 3], [13, 4], [8], [19, 14], [1, 3], [10, 9], [10], [7, 19], [4, 16], [16], [17, 11], [18, 15], [18], [19, 14], [2, 16], [10, 11], [16, 9], [4, 2], [3, 8], [18, 15], [6, 12], [0], [5], [12], [9, 11], [15, 10], [16, 14], [8, 0], [10, 11], [2], [8, 12], [16, 9], [9, 11], [4, 18], [16, 19], [15, 10], [19], [14, 12], [10, 9], [14], [18], [8], [15], [0], [10, 6], [2, 16], [13, 5], [19, 14], [13, 4], [6], [16, 9], [1, 3], [1], [16, 19], [19], [18], [14, 8], [10, 9], [17, 11], [4, 16], [16], [8, 12], [19, 14], [5, 10], [1, 3], [18, 15], ----End Timer [Execute Mapping]:  1.821333408355713

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[116, 138]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[19, 36]
[101, 114]
[158, 173]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[21, 26, 31]
[121, 125, 131]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[19, 36]
[101, 114]
[158, 173]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[116, 138]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.2655394077301025

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [19, 36] xx => I, Pos: [19, 36] xx => I, Pos: [21, 26, 31] ccc => cc, Pos: [101, 114] xx => I, Pos: [101, 114] xx => I, Pos: [116, 138] cc => I, Pos: [116, 138] cc => I, Pos: [121, 125, 131] ccc => cc, Pos: [158, 173] xx => I, Pos: [158, 173] xx => I]

--------End Timer [Generate Plans]:  0.015624761581420898

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [19, 36] xx => I,
 Pos: [21, 26, 31] ccc => cc,
 Pos: [101, 114] xx => I,
 Pos: [116, 138] cc => I,
 Pos: [121, 125, 131] ccc => cc,
 Pos: [158, 173] xx => I]
Change: 6, Saving: 6

Circuit before: xcccxcccccxxccxxxccxxccccccccxxcccxcxxxcccccxcccccccccccccccccccxxcccxccccxcccxccxxcxxxcccxxxcccxxxccxxcccccccccccxcccccxcccxccxccxccccccccxxxcccccxccccccxccxxxxxcccccxccxcxxccccxccccc
---------------
Apply:  Pos: [19, 36] xx => I
Apply:  Pos: [21, 26, 31] ccc => cc
Apply:  Pos: [101, 114] xx => I
Apply:  Pos: [116, 138] cc => I
Apply:  Pos: [121, 125, 131] ccc => cc
Apply:  Pos: [158, 173] xx => I
---------------
Circuit after: xcccxcccccxxccxxxccxccccccccxxccxcxxcccccxcccccccccccccccccccxxcccxccccxcccxccxxcxxxcccxxxcccxxxccxcccccccccccccccxcccxccxccxccccccxxxcccccxccccccxccxxxxcccccxccxcxccccxccccc

--------End Timer [apply mapping plan]:  0.0

[15], [10, 11], [1, 3], [4, 18], [4], [3, 8], [14, 12], [15, 17], [9, 6], [18, 10], [10], [5], [19, 14], [18, 15], [14], [11], [6], [10, 9], [5, 18], [15], [9, 14], [4, 2], [13, 5], [17, 11], [7, 1], [14, 8], [2, 7], [4, 16], [1], [18], [3, 8], [18, 16], [5], [4, 18], [19], [17], [8, 0], [4, 16], [13, 5], [7, 3], [9, 14], [8], [16, 9], [18, 10], [4, 2], [15, 10], [18, 16], [1, 3], [18, 10], [7, 3], [17, 11], [14, 12], [8, 0], [15, 17], [2, 7], [1, 3], [5, 10], [4, 2], [11, 6], [9, 14], [16, 19], [2], [7], [18, 10], [17, 11], [16, 9], [13], [2, 16], [13, 4], [10, 9], [7, 3], [1], [15, 17], [4, 18], [19, 9], [19], [14, 0], [15, 10], [8], [16], [5, 15], [15], [14], [12], [10, 11], [13, 5], [7, 1], [0], [13], [18], [16, 19], [9, 11], [5, 15], [19], [16], [15], [14, 0], [5, 18], [6], [16, 19], [8, 0], [2, 7], [7, 19], [10, 11], [9, 6], [2, 16], [16, 19], [7, 3], [13, 18], [11, 6], [5, 18], [10, 11], [19, 3], [13, 4], [8], [7, 19], [1, 3], [10, 9], [10], [19, 14], [4, 16], [16], [17, 11], [18, 15], [18], [2, 16], [10, 11], [16, 9], [4, 2], [3, 8], [18, 15], [0], [5], [12], [9, 11], [15, 10], [16, 14], [8, 0], [10, 11], [2], [8, 12], [16, 9], [9, 11], [4, 18], [16, 19], [15, 10], [19], [14, 12], [10, 9], [14], [8], [15], [0], [10, 6], [2, 16], [13, 5], [19, 14], [13, 4], [6], [16, 9], [1, 3], [1], [16, 19], [19], [14, 8], [10, 9], [17, 11], [4, 16], [16], [8, 12], [19, 14], [5, 10], [1, 3], [18, 15], ----End Timer [Execute Mapping]:  1.2811641693115234

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[83, 133]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[83, 133]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.2504463195800781

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [83, 133] xx => I, Pos: [83, 133] xx => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [83, 133] xx => I]
Change: 1, Saving: 1

Circuit before: xcccxcccccxxccxxxccxccccccccxxccxcxxcccccxcccccccccccccccccccxxcccxccccxcccxccxxcxxxcccxxxcccxxxccxcccccccccccccccxcccxccxccxccccccxxxcccccxccccccxccxxxxcccccxccxcxccccxccccc
---------------
Apply:  Pos: [83, 133] xx => I
---------------
Circuit after: xcccxcccccxxccxxxccxccccccccxxccxcxxcccccxcccccccccccccccccccxxcccxccccxcccxccxxcxxcccxxxcccxxxccxcccccccccccccccxcccxccxccxccccccxxcccccxccccccxccxxxxcccccxccxcxccccxccccc

--------End Timer [apply mapping plan]:  0.0

[15], [10, 11], [1, 3], [4, 18], [4], [3, 8], [14, 12], [15, 17], [9, 6], [18, 10], [10], [5], [19, 14], [18, 15], [14], [11], [6], [10, 9], [5, 18], [15], [9, 14], [4, 2], [13, 5], [17, 11], [7, 1], [14, 8], [2, 7], [4, 16], [1], [18], [3, 8], [18, 16], [5], [4, 18], [19], [17], [8, 0], [4, 16], [13, 5], [7, 3], [9, 14], [8], [16, 9], [18, 10], [4, 2], [15, 10], [18, 16], [1, 3], [18, 10], [7, 3], [17, 11], [14, 12], [8, 0], [15, 17], [2, 7], [1, 3], [5, 10], [4, 2], [11, 6], [9, 14], [16, 19], [2], [7], [18, 10], [17, 11], [16, 9], [13], [2, 16], [13, 4], [10, 9], [7, 3], [1], [15, 17], [4, 18], [19, 9], [19], [14, 0], [15, 10], [8], [16], [5, 15], [15], [14], [10, 11], [13, 5], [7, 1], [0], [13], [18], [16, 19], [9, 11], [5, 15], [19], [16], [15], [14, 0], [5, 18], [6], [16, 19], [8, 0], [2, 7], [7, 19], [10, 11], [9, 6], [2, 16], [16, 19], [7, 3], [13, 18], [11, 6], [5, 18], [10, 11], [19, 3], [13, 4], [8], [7, 19], [1, 3], [10, 9], [10], [19, 14], [4, 16], [16], [17, 11], [18, 15], [18], [2, 16], [10, 11], [16, 9], [4, 2], [3, 8], [18, 15], [0], [5], [9, 11], [15, 10], [16, 14], [8, 0], [10, 11], [2], [8, 12], [16, 9], [9, 11], [4, 18], [16, 19], [15, 10], [19], [14, 12], [10, 9], [14], [8], [15], [0], [10, 6], [2, 16], [13, 5], [19, 14], [13, 4], [6], [16, 9], [1, 3], [1], [16, 19], [19], [14, 8], [10, 9], [17, 11], [4, 16], [16], [8, 12], [19, 14], [5, 10], [1, 3], [18, 15], ----End Timer [Execute Mapping]:  1.2504463195800781

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.2970867156982422

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: xcccxcccccxxccxxxccxccccccccxxccxcxxcccccxcccccccccccccccccccxxcccxccccxcccxccxxcxxcccxxxcccxxxccxcccccccccccccccxcccxccxccxccccccxxcccccxccccccxccxxxxcccccxccxcxccccxccccc
---------------
---------------
Circuit after: xcccxcccccxxccxxxccxccccccccxxccxcxxcccccxcccccccccccccccccccxxcccxccccxcccxccxxcxxcccxxxcccxxxccxcccccccccccccccxcccxccxccxccccccxxcccccxccccccxccxxxxcccccxccxcxccccxccccc

--------End Timer [apply mapping plan]:  0.0

[15], [10, 11], [1, 3], [4, 18], [4], [3, 8], [14, 12], [15, 17], [9, 6], [18, 10], [10], [5], [19, 14], [18, 15], [14], [11], [6], [10, 9], [5, 18], [15], [9, 14], [4, 2], [13, 5], [17, 11], [7, 1], [14, 8], [2, 7], [4, 16], [1], [18], [3, 8], [18, 16], [5], [4, 18], [19], [17], [8, 0], [4, 16], [13, 5], [7, 3], [9, 14], [8], [16, 9], [18, 10], [4, 2], [15, 10], [18, 16], [1, 3], [18, 10], [7, 3], [17, 11], [14, 12], [8, 0], [15, 17], [2, 7], [1, 3], [5, 10], [4, 2], [11, 6], [9, 14], [16, 19], [2], [7], [18, 10], [17, 11], [16, 9], [13], [2, 16], [13, 4], [10, 9], [7, 3], [1], [15, 17], [4, 18], [19, 9], [19], [14, 0], [15, 10], [8], [16], [5, 15], [15], [14], [10, 11], [13, 5], [7, 1], [0], [13], [18], [16, 19], [9, 11], [5, 15], [19], [16], [15], [14, 0], [5, 18], [6], [16, 19], [8, 0], [2, 7], [7, 19], [10, 11], [9, 6], [2, 16], [16, 19], [7, 3], [13, 18], [11, 6], [5, 18], [10, 11], [19, 3], [13, 4], [8], [7, 19], [1, 3], [10, 9], [10], [19, 14], [4, 16], [16], [17, 11], [18, 15], [18], [2, 16], [10, 11], [16, 9], [4, 2], [3, 8], [18, 15], [0], [5], [9, 11], [15, 10], [16, 14], [8, 0], [10, 11], [2], [8, 12], [16, 9], [9, 11], [4, 18], [16, 19], [15, 10], [19], [14, 12], [10, 9], [14], [8], [15], [0], [10, 6], [2, 16], [13, 5], [19, 14], [13, 4], [6], [16, 9], [1, 3], [1], [16, 19], [19], [14, 8], [10, 9], [17, 11], [4, 16], [16], [8, 12], [19, 14], [5, 10], [1, 3], [18, 15], ----End Timer [Execute Mapping]:  1.2970867156982422

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-x-x-x-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-x-cx-cx-cx-x-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-x-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-x-x-x-x-x-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-x-x-x-cx-cx-x-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-cx-cx-x-x-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-x-cx-cx-cx-cx-x-x-cx-cx-x-x-x-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx 
     => total size: [270] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx,x]
 - circuit depth: 45 - (small)
 - circuit cycle: 450


>> Solved circuit: 
Circuit Info: 
 - circuit: x-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-cx-cx-x-x-x-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-x-cx-x-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-x-cx-cx-cx-cx-x-cx-cx-cx-x-cx-cx-x-x-cx-x-x-cx-cx-cx-x-x-x-cx-cx-cx-x-x-x-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-x-cx-cx-x-cx-cx-x-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-x-cx-cx-x-cx-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx 
     => total size: [172] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx,x]
 - circuit depth: 33 - (small)
 - circuit cycle: 298

Reduced: 
 - size: 98 (36.30%)
 - depth: 12 (26.67%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.12495255470275879

[0], [15], [7, 19], [10, 11], [1, 3], [4, 18], [0], [4], [7, 19], [3, 8], [14, 12], [15, 17], [9, 6], [18, 10], [10], [5], [19, 14], [7, 3], [18, 15], [14], [11], [6], [10, 9], [7, 3], [5, 18], [10], [15], [14, 8], [4, 2], [13, 5], [3, 8], [17, 11], [7, 1], [9, 6], [19], [3, 8], [9, 14], [2, 7], [4, 16], [15, 17], [1], [7], [19], [18], [3, 8], [10, 11], [14, 0], [12], [14, 8], [18, 16], [15, 17], [8], [7], [5], [14, 0], [16, 19], [1, 3], [9, 6], [8], [10, 11], [4, 18], [1, 3], [16, 19], [10], [19], [17], [8, 0], [4, 16], [13, 5], [7, 3], [9, 14], [8], [16, 9], [18, 10], [4, 2], [12], [8, 0], [15, 10], [18, 16], [4, 2], [1, 3], [8, 0], [4, 2], [18, 10], [7, 3], [17, 11], [14, 12], [8, 0], [15, 17], [2, 7], [1, 3], [5, 10], [0], [4, 2], [11, 6], [9, 14], [16, 19], [0], [2], [7], [18, 10], [17, 11], [8, 12], [16, 9], [0], [13], [2, 16], [4, 18], [8, 12], [10, 9], [7, 3], [0], [1], [15, 17], [13, 4], [2, 7], [19, 9], [19], [14, 0], [15, 10], [4, 18], [2, 7], [11, 6], [0], [8], [16], [17], [19, 3], [5, 15], [11, 6], [0], [4], [15], [14], [12], [10, 9], [19, 3], [13, 5], [7, 1], [0], [13], [1], [18], [16, 19], [9, 11], [5, 15], [19], [16], [15], [14, 0], [5, 18], [14], [6], [17], [10, 9], [16, 19], [8, 0], [2, 7], [4], [14, 0], [7, 19], [10, 11], [9, 6], [2, 16], [14, 0], [16, 19], [7, 3], [13, 5], [11, 6], [14], [1], [5, 18], [6, 12], [10, 11], [19, 3], [13, 4], [8], [19, 14], [13, 5], [1, 3], [10, 9], [10], [5], [7, 19], [4, 16], [19], [16], [17, 11], [12, 0], [18, 15], [7, 1], [19], [18], [14], [5], [7, 1], [2, 16], [12, 0], [10, 11], [19, 14], [16, 9], [4, 2], [3, 8], [15, 10], [6, 12], [14], [0], [5], [12], [9, 11], [18, 10], [16, 14], [8, 0], [18, 15], [10, 11], [14], [6], [2], [8, 12], [16, 9], [14], [9, 11], [4, 18], [16, 19], [15, 10], [6], [19], [14, 12], [10, 9], [14], [18], [8], [15], [0], [10, 6], [2, 16], [19, 9], [13, 5], [14], [2], [13, 4], [17, 11], [19, 9], [18, 10], [5, 15], [6], [19, 14], [16, 9], [12, 0], [1, 3], [14], [1], [18, 10], [12, 0], [17, 11], [5, 15], [16, 19], [19], [18], [14, 8], [10, 9], [17, 11], [4, 16], [16], [2], [8, 12], [19, 14], [5, 10], [1, 3], [18, 15], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[2, 8]
[17, 23]
[30, 35]
[35, 44]
[39, 50]
[46, 54]
[33, 57]
[45, 59]
[56, 61]
[55, 62]
[74, 79]
[76, 81]
[79, 82]
[81, 87]
[102, 108]
[115, 121]
[122, 129]
[127, 136]
[159, 164]
[190, 195]
[188, 197]
[236, 242]
[243, 252]
[248, 253]
[241, 254]
[244, 255]
[254, 261]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[0, 6]
[34, 42]
[41, 52]
[51, 58]
[47, 75]
[92, 97]
[97, 104]
[104, 111]
[123, 130]
[130, 139]
[126, 153]
[131, 158]
[141, 170]
[185, 191]
[182, 194]
[194, 207]
[215, 220]
[216, 225]
[229, 238]
[239, 264]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[135, 144, 154]
[167, 171, 178]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 

[111, 118, 123]
[193, 199, 205]
[205, 211, 215]
[238, 246, 250]

------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[107, 114, 120]
[150, 167, 171]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[203, 210, 213]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[0, 6]
[34, 42]
[41, 52]
[51, 58]
[47, 75]
[92, 97]
[97, 104]
[104, 111]
[123, 130]
[130, 139]
[126, 153]
[131, 158]
[141, 170]
[185, 191]
[182, 194]
[194, 207]
[215, 220]
[216, 225]
[229, 238]
[239, 264]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[2, 8]
[17, 23]
[30, 35]
[35, 44]
[39, 50]
[46, 54]
[33, 57]
[45, 59]
[56, 61]
[55, 62]
[74, 79]
[76, 81]
[79, 82]
[81, 87]
[102, 108]
[115, 121]
[122, 129]
[127, 136]
[159, 164]
[190, 195]
[188, 197]
[236, 242]
[243, 252]
[248, 253]
[241, 254]
[244, 255]
[254, 261]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.703089952468872

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 6] xx => I, Pos: [0, 6] xx => I, Pos: [2, 8] cc => I, Pos: [2, 8] cc => I, Pos: [17, 23] cc => I, Pos: [17, 23] cc => I, Pos: [30, 35] cc => I, Pos: [30, 35] cc => I, Pos: [33, 57] cc => I, Pos: [33, 57] cc => I, Pos: [34, 42] xx => I, Pos: [34, 42] xx => I, Pos: [35, 44] cc => I, Pos: [35, 44] cc => I, Pos: [39, 50] cc => I, Pos: [39, 50] cc => I, Pos: [41, 52] xx => I, Pos: [41, 52] xx => I, Pos: [45, 59] cc => I, Pos: [45, 59] cc => I, Pos: [46, 54] cc => I, Pos: [46, 54] cc => I, Pos: [47, 75] xx => I, Pos: [47, 75] xx => I, Pos: [51, 58] xx => I, Pos: [51, 58] xx => I, Pos: [55, 62] cc => I, Pos: [55, 62] cc => I, Pos: [56, 61] cc => I, Pos: [56, 61] cc => I, Pos: [74, 79] cc => I, Pos: [74, 79] cc => I, Pos: [76, 81] cc => I, Pos: [76, 81] cc => I, Pos: [79, 82] cc => I, Pos: [79, 82] cc => I, Pos: [81, 87] cc => I, Pos: [81, 87] cc => I, Pos: [92, 97] xx => I, Pos: [92, 97] xx => I, Pos: [97, 104] xx => I, Pos: [97, 104] xx => I, Pos: [102, 108] cc => I, Pos: [102, 108] cc => I, Pos: [104, 111] xx => I, Pos: [104, 111] xx => I, Pos: [107, 114, 120] ccc => cc, Pos: [111, 118, 123] xcx => c, Pos: [115, 121] cc => I, Pos: [115, 121] cc => I, Pos: [122, 129] cc => I, Pos: [122, 129] cc => I, Pos: [123, 130] xx => I, Pos: [123, 130] xx => I, Pos: [126, 153] xx => I, Pos: [126, 153] xx => I, Pos: [127, 136] cc => I, Pos: [127, 136] cc => I, Pos: [130, 139] xx => I, Pos: [130, 139] xx => I, Pos: [131, 158] xx => I, Pos: [131, 158] xx => I, Pos: [135, 144, 154] ccc => cc, Pos: [141, 170] xx => I, Pos: [141, 170] xx => I, Pos: [150, 167, 171] ccc => cc, Pos: [159, 164] cc => I, Pos: [159, 164] cc => I, Pos: [167, 171, 178] ccc => cc, Pos: [182, 194] xx => I, Pos: [182, 194] xx => I, Pos: [185, 191] xx => I, Pos: [185, 191] xx => I, Pos: [188, 197] cc => I, Pos: [188, 197] cc => I, Pos: [190, 195] cc => I, Pos: [190, 195] cc => I, Pos: [193, 199, 205] xcx => c, Pos: [194, 207] xx => I, Pos: [194, 207] xx => I, Pos: [203, 210, 213] ccc => cc, Pos: [205, 211, 215] xcx => c, Pos: [215, 220] xx => I, Pos: [215, 220] xx => I, Pos: [216, 225] xx => I, Pos: [216, 225] xx => I, Pos: [229, 238] xx => I, Pos: [229, 238] xx => I, Pos: [236, 242] cc => I, Pos: [236, 242] cc => I, Pos: [238, 246, 250] xcx => c, Pos: [239, 264] xx => I, Pos: [239, 264] xx => I, Pos: [241, 254] cc => I, Pos: [241, 254] cc => I, Pos: [243, 252] cc => I, Pos: [243, 252] cc => I, Pos: [244, 255] cc => I, Pos: [244, 255] cc => I, Pos: [248, 253] cc => I, Pos: [248, 253] cc => I, Pos: [254, 261] cc => I, Pos: [254, 261] cc => I]

--------End Timer [Generate Plans]:  0.10936880111694336

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 6] xx => I,
 Pos: [2, 8] cc => I,
 Pos: [17, 23] cc => I,
 Pos: [30, 35] cc => I,
 Pos: [33, 57] cc => I,
 Pos: [34, 42] xx => I,
 Pos: [39, 50] cc => I,
 Pos: [41, 52] xx => I,
 Pos: [45, 59] cc => I,
 Pos: [46, 54] cc => I,
 Pos: [47, 75] xx => I,
 Pos: [51, 58] xx => I,
 Pos: [55, 62] cc => I,
 Pos: [56, 61] cc => I,
 Pos: [79, 82] cc => I,
 Pos: [81, 87] cc => I,
 Pos: [97, 104] xx => I,
 Pos: [102, 108] cc => I,
 Pos: [107, 114, 120] ccc => cc,
 Pos: [123, 130] xx => I,
 Pos: [115, 121] cc => I,
 Pos: [122, 129] cc => I,
 Pos: [126, 153] xx => I,
 Pos: [127, 136] cc => I,
 Pos: [131, 158] xx => I,
 Pos: [135, 144, 154] ccc => cc,
 Pos: [141, 170] xx => I,
 Pos: [167, 171, 178] ccc => cc,
 Pos: [159, 164] cc => I,
 Pos: [182, 194] xx => I,
 Pos: [185, 191] xx => I,
 Pos: [188, 197] cc => I,
 Pos: [190, 195] cc => I,
 Pos: [193, 199, 205] xcx => c,
 Pos: [203, 210, 213] ccc => cc,
 Pos: [215, 220] xx => I,
 Pos: [216, 225] xx => I,
 Pos: [229, 238] xx => I,
 Pos: [236, 242] cc => I,
 Pos: [239, 264] xx => I,
 Pos: [241, 254] cc => I,
 Pos: [243, 252] cc => I,
 Pos: [244, 255] cc => I,
 Pos: [248, 253] cc => I]
Change: 44, Saving: 45

Circuit before: xxccccxxccccccxxcccxxxcccxxcccccccxcccccxxxxcccxcccxxxccccxccccxxxcccccxcccxccccccccccccccccxccccxxxccccxxcccccxxccccxcccccxxxxcccxxxxxccccxxxxcccxxxccxxxccccxccccccccccxxcccccxccccxxccxxccccxxxxccccccccccxxxxccccccxxxccxccccxxccxxxxxccccxxcccccxccccxxcccccxxccccxxccccc
---------------
Apply:  Pos: [0, 6] xx => I
Apply:  Pos: [2, 8] cc => I
Apply:  Pos: [17, 23] cc => I
Apply:  Pos: [30, 35] cc => I
Apply:  Pos: [33, 57] cc => I
Apply:  Pos: [34, 42] xx => I
Apply:  Pos: [39, 50] cc => I
Apply:  Pos: [41, 52] xx => I
Apply:  Pos: [45, 59] cc => I
Apply:  Pos: [46, 54] cc => I
Apply:  Pos: [47, 75] xx => I
Apply:  Pos: [51, 58] xx => I
Apply:  Pos: [55, 62] cc => I
Apply:  Pos: [56, 61] cc => I
Apply:  Pos: [79, 82] cc => I
Apply:  Pos: [81, 87] cc => I
Apply:  Pos: [97, 104] xx => I
Apply:  Pos: [102, 108] cc => I
Apply:  Pos: [107, 114, 120] ccc => cc
Apply:  Pos: [123, 130] xx => I
Apply:  Pos: [115, 121] cc => I
Apply:  Pos: [122, 129] cc => I
Apply:  Pos: [126, 153] xx => I
Apply:  Pos: [127, 136] cc => I
Apply:  Pos: [131, 158] xx => I
Apply:  Pos: [135, 144, 154] ccc => cc
Apply:  Pos: [141, 170] xx => I
Apply:  Pos: [167, 171, 178] ccc => cc
Apply:  Pos: [159, 164] cc => I
Apply:  Pos: [182, 194] xx => I
Apply:  Pos: [185, 191] xx => I
Apply:  Pos: [188, 197] cc => I
Apply:  Pos: [190, 195] cc => I
Apply:  Pos: [193, 199, 205] xcx => c
Apply:  Pos: [203, 210, 213] ccc => cc
Apply:  Pos: [215, 220] xx => I
Apply:  Pos: [216, 225] xx => I
Apply:  Pos: [229, 238] xx => I
Apply:  Pos: [236, 242] cc => I
Apply:  Pos: [239, 264] xx => I
Apply:  Pos: [241, 254] cc => I
Apply:  Pos: [243, 252] cc => I
Apply:  Pos: [244, 255] cc => I
Apply:  Pos: [248, 253] cc => I
---------------
Circuit after: xcccxcccccxxccxxxccxxccccccccxxcccxcxxxcccccxcccccccccccccccxccccxxcccxccccxxcccxccxxcxxxcccxxxcccxxxccxxcccccccccccxcccccxcccxccxccxccccccccxxxcccccxccccccxccxxxxccccxcccxxcxxccccxccccc

--------End Timer [apply mapping plan]:  0.0

[15], [10, 11], [1, 3], [4, 18], [4], [3, 8], [14, 12], [15, 17], [9, 6], [18, 10], [10], [5], [19, 14], [18, 15], [14], [11], [6], [10, 9], [5, 18], [10], [15], [14, 8], [4, 2], [13, 5], [17, 11], [7, 1], [9, 14], [2, 7], [4, 16], [1], [18], [3, 8], [14, 8], [18, 16], [5], [4, 18], [10], [19], [17], [8, 0], [4, 16], [13, 5], [7, 3], [9, 14], [8], [16, 9], [18, 10], [4, 2], [8, 0], [15, 10], [18, 16], [1, 3], [18, 10], [7, 3], [17, 11], [14, 12], [15, 17], [2, 7], [1, 3], [5, 10], [0], [4, 2], [11, 6], [9, 14], [16, 19], [2], [7], [18, 10], [17, 11], [16, 9], [13], [2, 16], [13, 4], [10, 9], [7, 3], [0], [1], [15, 17], [4, 18], [19, 9], [19], [14, 0], [15, 10], [8], [16], [5, 15], [15], [14], [12], [10, 11], [13, 5], [7, 1], [0], [13], [18], [16, 19], [9, 11], [5, 15], [19], [16], [15], [14, 0], [5, 18], [14], [6], [16, 19], [8, 0], [2, 7], [7, 19], [10, 11], [9, 6], [2, 16], [16, 19], [7, 3], [13, 18], [11, 6], [14], [5, 18], [6, 12], [10, 11], [19, 3], [13, 4], [8], [19, 14], [1, 3], [10, 9], [10], [7, 19], [4, 16], [16], [17, 11], [18, 15], [18], [19, 14], [2, 16], [10, 11], [16, 9], [4, 2], [3, 8], [18, 15], [6, 12], [0], [5], [12], [9, 11], [15, 10], [16, 14], [8, 0], [10, 11], [2], [8, 12], [16, 9], [9, 11], [4, 18], [16, 19], [15, 10], [19], [14, 12], [10, 9], [18], [8], [15], [0], [10, 6], [2, 16], [13, 5], [13, 4], [6], [19, 14], [16, 9], [1, 3], [14], [1], [16, 19], [19], [18], [14, 8], [10, 9], [17, 11], [4, 16], [16], [8, 12], [19, 14], [5, 10], [1, 3], [18, 15], ----End Timer [Execute Mapping]:  1.8124587535858154

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[118, 140]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[19, 36]
[60, 75]
[103, 116]
[159, 175]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[21, 26, 31]
[123, 127, 133]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[19, 36]
[60, 75]
[103, 116]
[159, 175]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[118, 140]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.2499806880950928

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [19, 36] xx => I, Pos: [19, 36] xx => I, Pos: [21, 26, 31] ccc => cc, Pos: [60, 75] xx => I, Pos: [60, 75] xx => I, Pos: [103, 116] xx => I, Pos: [103, 116] xx => I, Pos: [118, 140] cc => I, Pos: [118, 140] cc => I, Pos: [123, 127, 133] ccc => cc, Pos: [159, 175] xx => I, Pos: [159, 175] xx => I]

--------End Timer [Generate Plans]:  0.015610933303833008

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [19, 36] xx => I,
 Pos: [21, 26, 31] ccc => cc,
 Pos: [60, 75] xx => I,
 Pos: [103, 116] xx => I,
 Pos: [118, 140] cc => I,
 Pos: [123, 127, 133] ccc => cc,
 Pos: [159, 175] xx => I]
Change: 7, Saving: 8

Circuit before: xcccxcccccxxccxxxccxxccccccccxxcccxcxxxcccccxcccccccccccccccxccccxxcccxccccxxcccxccxxcxxxcccxxxcccxxxccxxcccccccccccxcccccxcccxccxccxccccccccxxxcccccxccccccxccxxxxccccxcccxxcxxccccxccccc
---------------
Apply:  Pos: [19, 36] xx => I
Apply:  Pos: [21, 26, 31] ccc => cc
Apply:  Pos: [60, 75] xx => I
Apply:  Pos: [103, 116] xx => I
Apply:  Pos: [118, 140] cc => I
Apply:  Pos: [123, 127, 133] ccc => cc
Apply:  Pos: [159, 175] xx => I
---------------
Circuit after: xcccxcccccxxccxxxccxccccccccxxccxcxxcccccxcccccccccccccccccccxxcccxccccxcccxccxxcxxxcccxxxcccxxxccxcccccccccccccccxcccxccxccxccccccxxxcccccxccccccxccxxxccccxcccxxcxccccxccccc

--------End Timer [apply mapping plan]:  0.0

[15], [10, 11], [1, 3], [4, 18], [4], [3, 8], [14, 12], [15, 17], [9, 6], [18, 10], [10], [5], [19, 14], [18, 15], [14], [11], [6], [10, 9], [5, 18], [15], [9, 14], [4, 2], [13, 5], [17, 11], [7, 1], [14, 8], [2, 7], [4, 16], [1], [18], [3, 8], [18, 16], [5], [4, 18], [19], [17], [8, 0], [4, 16], [13, 5], [7, 3], [9, 14], [8], [16, 9], [18, 10], [4, 2], [8, 0], [15, 10], [18, 16], [1, 3], [18, 10], [7, 3], [17, 11], [14, 12], [15, 17], [2, 7], [1, 3], [5, 10], [4, 2], [11, 6], [9, 14], [16, 19], [2], [7], [18, 10], [17, 11], [16, 9], [13], [2, 16], [13, 4], [10, 9], [7, 3], [1], [15, 17], [4, 18], [19, 9], [19], [14, 0], [15, 10], [8], [16], [5, 15], [15], [14], [12], [10, 11], [13, 5], [7, 1], [0], [13], [18], [16, 19], [9, 11], [5, 15], [19], [16], [15], [14, 0], [5, 18], [6], [16, 19], [8, 0], [2, 7], [7, 19], [10, 11], [9, 6], [2, 16], [16, 19], [7, 3], [13, 18], [11, 6], [5, 18], [10, 11], [19, 3], [13, 4], [8], [7, 19], [1, 3], [10, 9], [10], [19, 14], [4, 16], [16], [17, 11], [18, 15], [18], [2, 16], [10, 11], [16, 9], [4, 2], [3, 8], [18, 15], [0], [5], [12], [9, 11], [15, 10], [16, 14], [8, 0], [10, 11], [2], [8, 12], [16, 9], [9, 11], [4, 18], [16, 19], [15, 10], [19], [14, 12], [10, 9], [8], [15], [0], [10, 6], [2, 16], [13, 4], [13, 5], [6], [19, 14], [16, 9], [1, 3], [14], [1], [16, 19], [19], [14, 8], [10, 9], [17, 11], [4, 16], [16], [8, 12], [19, 14], [5, 10], [1, 3], [18, 15], ----End Timer [Execute Mapping]:  1.2655916213989258

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[83, 133]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[83, 133]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.2346322536468506

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [83, 133] xx => I, Pos: [83, 133] xx => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [83, 133] xx => I]
Change: 1, Saving: 1

Circuit before: xcccxcccccxxccxxxccxccccccccxxccxcxxcccccxcccccccccccccccccccxxcccxccccxcccxccxxcxxxcccxxxcccxxxccxcccccccccccccccxcccxccxccxccccccxxxcccccxccccccxccxxxccccxcccxxcxccccxccccc
---------------
Apply:  Pos: [83, 133] xx => I
---------------
Circuit after: xcccxcccccxxccxxxccxccccccccxxccxcxxcccccxcccccccccccccccccccxxcccxccccxcccxccxxcxxcccxxxcccxxxccxcccccccccccccccxcccxccxccxccccccxxcccccxccccccxccxxxccccxcccxxcxccccxccccc

--------End Timer [apply mapping plan]:  0.0

[15], [10, 11], [1, 3], [4, 18], [4], [3, 8], [14, 12], [15, 17], [9, 6], [18, 10], [10], [5], [19, 14], [18, 15], [14], [11], [6], [10, 9], [5, 18], [15], [9, 14], [4, 2], [13, 5], [17, 11], [7, 1], [14, 8], [2, 7], [4, 16], [1], [18], [3, 8], [18, 16], [5], [4, 18], [19], [17], [8, 0], [4, 16], [13, 5], [7, 3], [9, 14], [8], [16, 9], [18, 10], [4, 2], [8, 0], [15, 10], [18, 16], [1, 3], [18, 10], [7, 3], [17, 11], [14, 12], [15, 17], [2, 7], [1, 3], [5, 10], [4, 2], [11, 6], [9, 14], [16, 19], [2], [7], [18, 10], [17, 11], [16, 9], [13], [2, 16], [13, 4], [10, 9], [7, 3], [1], [15, 17], [4, 18], [19, 9], [19], [14, 0], [15, 10], [8], [16], [5, 15], [15], [14], [10, 11], [13, 5], [7, 1], [0], [13], [18], [16, 19], [9, 11], [5, 15], [19], [16], [15], [14, 0], [5, 18], [6], [16, 19], [8, 0], [2, 7], [7, 19], [10, 11], [9, 6], [2, 16], [16, 19], [7, 3], [13, 18], [11, 6], [5, 18], [10, 11], [19, 3], [13, 4], [8], [7, 19], [1, 3], [10, 9], [10], [19, 14], [4, 16], [16], [17, 11], [18, 15], [18], [2, 16], [10, 11], [16, 9], [4, 2], [3, 8], [18, 15], [0], [5], [9, 11], [15, 10], [16, 14], [8, 0], [10, 11], [2], [8, 12], [16, 9], [9, 11], [4, 18], [16, 19], [15, 10], [19], [14, 12], [10, 9], [8], [15], [0], [10, 6], [2, 16], [13, 5], [13, 4], [6], [19, 14], [16, 9], [1, 3], [14], [1], [16, 19], [19], [14, 8], [10, 9], [17, 11], [4, 16], [16], [8, 12], [19, 14], [5, 10], [1, 3], [18, 15], ----End Timer [Execute Mapping]:  1.2346322536468506

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.2656424045562744

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: xcccxcccccxxccxxxccxccccccccxxccxcxxcccccxcccccccccccccccccccxxcccxccccxcccxccxxcxxcccxxxcccxxxccxcccccccccccccccxcccxccxccxccccccxxcccccxccccccxccxxxccccxcccxxcxccccxccccc
---------------
---------------
Circuit after: xcccxcccccxxccxxxccxccccccccxxccxcxxcccccxcccccccccccccccccccxxcccxccccxcccxccxxcxxcccxxxcccxxxccxcccccccccccccccxcccxccxccxccccccxxcccccxccccccxccxxxccccxcccxxcxccccxccccc

--------End Timer [apply mapping plan]:  0.0

[15], [10, 11], [1, 3], [4, 18], [4], [3, 8], [14, 12], [15, 17], [9, 6], [18, 10], [10], [5], [19, 14], [18, 15], [14], [11], [6], [10, 9], [5, 18], [15], [9, 14], [4, 2], [13, 5], [17, 11], [7, 1], [14, 8], [2, 7], [4, 16], [1], [18], [3, 8], [18, 16], [5], [4, 18], [19], [17], [8, 0], [4, 16], [13, 5], [7, 3], [9, 14], [8], [16, 9], [18, 10], [4, 2], [8, 0], [15, 10], [18, 16], [1, 3], [18, 10], [7, 3], [17, 11], [14, 12], [15, 17], [2, 7], [1, 3], [5, 10], [4, 2], [11, 6], [9, 14], [16, 19], [2], [7], [18, 10], [17, 11], [16, 9], [13], [2, 16], [13, 4], [10, 9], [7, 3], [1], [15, 17], [4, 18], [19, 9], [19], [14, 0], [15, 10], [8], [16], [5, 15], [15], [14], [10, 11], [13, 5], [7, 1], [0], [13], [18], [16, 19], [9, 11], [5, 15], [19], [16], [15], [14, 0], [5, 18], [6], [16, 19], [8, 0], [2, 7], [7, 19], [10, 11], [9, 6], [2, 16], [16, 19], [7, 3], [13, 18], [11, 6], [5, 18], [10, 11], [19, 3], [13, 4], [8], [7, 19], [1, 3], [10, 9], [10], [19, 14], [4, 16], [16], [17, 11], [18, 15], [18], [2, 16], [10, 11], [16, 9], [4, 2], [3, 8], [18, 15], [0], [5], [9, 11], [15, 10], [16, 14], [8, 0], [10, 11], [2], [8, 12], [16, 9], [9, 11], [4, 18], [16, 19], [15, 10], [19], [14, 12], [10, 9], [8], [15], [0], [10, 6], [2, 16], [13, 4], [13, 5], [6], [19, 14], [16, 9], [1, 3], [14], [1], [16, 19], [19], [14, 8], [10, 9], [17, 11], [4, 16], [16], [8, 12], [19, 14], [5, 10], [1, 3], [18, 15], ----End Timer [Execute Mapping]:  1.2656424045562744

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-x-x-x-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-x-cx-cx-cx-x-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-x-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-x-x-x-x-x-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-x-x-x-cx-cx-x-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-cx-cx-x-x-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-x-cx-cx-cx-cx-x-x-cx-cx-x-x-x-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx 
     => total size: [270] (IBM)
 --------------------
 - qubits_num: 20, using gates: [x,cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 450


>> Solved circuit: 
Circuit Info: 
 - circuit: x-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-cx-cx-x-x-x-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-x-cx-x-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-x-cx-cx-cx-cx-x-cx-cx-cx-x-cx-cx-x-x-cx-x-x-cx-cx-cx-x-x-x-cx-cx-cx-x-x-x-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-x-cx-cx-x-cx-cx-x-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-cx-cx-x-x-x-cx-cx-cx-cx-x-cx-cx-cx-x-x-cx-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx 
     => total size: [172] (IBM)
 --------------------
 - qubits_num: 20, using gates: [x,cx]
 - circuit depth: 33 - (small)
 - circuit cycle: 298

Reduced: 
 - size: 98 (36.30%)
 - depth: 12 (26.67%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.12511515617370605

[0], [15], [7, 19], [10, 11], [1, 3], [4, 18], [0], [4], [7, 19], [3, 8], [14, 12], [15, 17], [9, 6], [18, 10], [10], [5], [19, 14], [7, 3], [18, 15], [14], [11], [6], [10, 9], [7, 3], [5, 18], [10], [15], [14, 8], [4, 2], [13, 5], [3, 8], [17, 11], [7, 1], [9, 6], [19], [3, 8], [9, 14], [2, 7], [4, 16], [15, 17], [1], [7], [19], [18], [3, 8], [10, 11], [14, 0], [12], [14, 8], [18, 16], [15, 17], [8], [7], [5], [14, 0], [16, 19], [1, 3], [9, 6], [8], [10, 11], [4, 18], [1, 3], [16, 19], [10], [19], [17], [8, 0], [4, 16], [13, 5], [7, 3], [9, 14], [8], [16, 9], [18, 10], [4, 2], [12], [8, 0], [15, 10], [18, 16], [4, 2], [1, 3], [8, 0], [4, 2], [18, 10], [7, 3], [17, 11], [14, 12], [8, 0], [15, 17], [2, 7], [1, 3], [5, 10], [0], [4, 2], [11, 6], [9, 14], [16, 19], [0], [2], [7], [18, 10], [17, 11], [8, 12], [16, 9], [0], [13], [2, 16], [4, 18], [8, 12], [10, 9], [7, 3], [0], [1], [15, 17], [13, 4], [2, 7], [19, 9], [19], [14, 0], [15, 10], [4, 18], [2, 7], [11, 6], [0], [8], [16], [17], [19, 3], [5, 15], [11, 6], [0], [4], [15], [14], [12], [10, 9], [19, 3], [13, 5], [7, 1], [0], [13], [1], [18], [16, 19], [9, 11], [5, 15], [19], [16], [15], [14, 0], [5, 18], [14], [6], [17], [10, 9], [16, 19], [8, 0], [2, 7], [4], [14, 0], [7, 19], [10, 11], [9, 6], [2, 16], [14, 0], [16, 19], [7, 3], [13, 5], [11, 6], [14], [1], [5, 18], [6, 12], [10, 11], [19, 3], [13, 4], [8], [19, 14], [13, 5], [1, 3], [10, 9], [10], [5], [7, 19], [4, 16], [19], [16], [17, 11], [12, 0], [18, 15], [7, 1], [19], [18], [14], [5], [7, 1], [2, 16], [12, 0], [10, 11], [19, 14], [16, 9], [4, 2], [3, 8], [15, 10], [6, 12], [14], [0], [5], [12], [9, 11], [18, 10], [16, 14], [8, 0], [18, 15], [10, 11], [14], [6], [2], [8, 12], [16, 9], [14], [9, 11], [4, 18], [16, 19], [15, 10], [6], [19], [14, 12], [10, 9], [14], [18], [8], [15], [0], [10, 6], [2, 16], [19, 9], [13, 5], [14], [2], [13, 4], [17, 11], [19, 9], [18, 10], [5, 15], [6], [19, 14], [16, 9], [12, 0], [1, 3], [14], [1], [18, 10], [12, 0], [17, 11], [5, 15], [16, 19], [19], [18], [14, 8], [10, 9], [17, 11], [4, 16], [16], [2], [8, 12], [19, 14], [5, 10], [1, 3], [18, 15], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[2, 8]
[17, 23]
[30, 35]
[35, 44]
[39, 50]
[46, 54]
[33, 57]
[45, 59]
[56, 61]
[55, 62]
[74, 79]
[76, 81]
[79, 82]
[81, 87]
[102, 108]
[115, 121]
[122, 129]
[127, 136]
[159, 164]
[190, 195]
[188, 197]
[236, 242]
[243, 252]
[248, 253]
[241, 254]
[244, 255]
[254, 261]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[0, 6]
[34, 42]
[41, 52]
[51, 58]
[47, 75]
[92, 97]
[97, 104]
[104, 111]
[123, 130]
[130, 139]
[126, 153]
[131, 158]
[141, 170]
[185, 191]
[182, 194]
[194, 207]
[215, 220]
[216, 225]
[229, 238]
[239, 264]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[135, 144, 154]
[167, 171, 178]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 

[111, 118, 123]
[193, 199, 205]
[205, 211, 215]
[238, 246, 250]

------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[107, 114, 120]
[150, 167, 171]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[203, 210, 213]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[0, 6]
[34, 42]
[41, 52]
[51, 58]
[47, 75]
[92, 97]
[97, 104]
[104, 111]
[123, 130]
[130, 139]
[126, 153]
[131, 158]
[141, 170]
[185, 191]
[182, 194]
[194, 207]
[215, 220]
[216, 225]
[229, 238]
[239, 264]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[2, 8]
[17, 23]
[30, 35]
[35, 44]
[39, 50]
[46, 54]
[33, 57]
[45, 59]
[56, 61]
[55, 62]
[74, 79]
[76, 81]
[79, 82]
[81, 87]
[102, 108]
[115, 121]
[122, 129]
[127, 136]
[159, 164]
[190, 195]
[188, 197]
[236, 242]
[243, 252]
[248, 253]
[241, 254]
[244, 255]
[254, 261]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.6561367511749268

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 6] xx => I, Pos: [0, 6] xx => I, Pos: [2, 8] cc => I, Pos: [2, 8] cc => I, Pos: [17, 23] cc => I, Pos: [17, 23] cc => I, Pos: [30, 35] cc => I, Pos: [30, 35] cc => I, Pos: [33, 57] cc => I, Pos: [33, 57] cc => I, Pos: [34, 42] xx => I, Pos: [34, 42] xx => I, Pos: [35, 44] cc => I, Pos: [35, 44] cc => I, Pos: [39, 50] cc => I, Pos: [39, 50] cc => I, Pos: [41, 52] xx => I, Pos: [41, 52] xx => I, Pos: [45, 59] cc => I, Pos: [45, 59] cc => I, Pos: [46, 54] cc => I, Pos: [46, 54] cc => I, Pos: [47, 75] xx => I, Pos: [47, 75] xx => I, Pos: [51, 58] xx => I, Pos: [51, 58] xx => I, Pos: [55, 62] cc => I, Pos: [55, 62] cc => I, Pos: [56, 61] cc => I, Pos: [56, 61] cc => I, Pos: [74, 79] cc => I, Pos: [74, 79] cc => I, Pos: [76, 81] cc => I, Pos: [76, 81] cc => I, Pos: [79, 82] cc => I, Pos: [79, 82] cc => I, Pos: [81, 87] cc => I, Pos: [81, 87] cc => I, Pos: [92, 97] xx => I, Pos: [92, 97] xx => I, Pos: [97, 104] xx => I, Pos: [97, 104] xx => I, Pos: [102, 108] cc => I, Pos: [102, 108] cc => I, Pos: [104, 111] xx => I, Pos: [104, 111] xx => I, Pos: [107, 114, 120] ccc => cc, Pos: [111, 118, 123] xcx => c, Pos: [115, 121] cc => I, Pos: [115, 121] cc => I, Pos: [122, 129] cc => I, Pos: [122, 129] cc => I, Pos: [123, 130] xx => I, Pos: [123, 130] xx => I, Pos: [126, 153] xx => I, Pos: [126, 153] xx => I, Pos: [127, 136] cc => I, Pos: [127, 136] cc => I, Pos: [130, 139] xx => I, Pos: [130, 139] xx => I, Pos: [131, 158] xx => I, Pos: [131, 158] xx => I, Pos: [135, 144, 154] ccc => cc, Pos: [141, 170] xx => I, Pos: [141, 170] xx => I, Pos: [150, 167, 171] ccc => cc, Pos: [159, 164] cc => I, Pos: [159, 164] cc => I, Pos: [167, 171, 178] ccc => cc, Pos: [182, 194] xx => I, Pos: [182, 194] xx => I, Pos: [185, 191] xx => I, Pos: [185, 191] xx => I, Pos: [188, 197] cc => I, Pos: [188, 197] cc => I, Pos: [190, 195] cc => I, Pos: [190, 195] cc => I, Pos: [193, 199, 205] xcx => c, Pos: [194, 207] xx => I, Pos: [194, 207] xx => I, Pos: [203, 210, 213] ccc => cc, Pos: [205, 211, 215] xcx => c, Pos: [215, 220] xx => I, Pos: [215, 220] xx => I, Pos: [216, 225] xx => I, Pos: [216, 225] xx => I, Pos: [229, 238] xx => I, Pos: [229, 238] xx => I, Pos: [236, 242] cc => I, Pos: [236, 242] cc => I, Pos: [238, 246, 250] xcx => c, Pos: [239, 264] xx => I, Pos: [239, 264] xx => I, Pos: [241, 254] cc => I, Pos: [241, 254] cc => I, Pos: [243, 252] cc => I, Pos: [243, 252] cc => I, Pos: [244, 255] cc => I, Pos: [244, 255] cc => I, Pos: [248, 253] cc => I, Pos: [248, 253] cc => I, Pos: [254, 261] cc => I, Pos: [254, 261] cc => I]

--------End Timer [Generate Plans]:  0.10936784744262695

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 6] xx => I,
 Pos: [2, 8] cc => I,
 Pos: [17, 23] cc => I,
 Pos: [30, 35] cc => I,
 Pos: [33, 57] cc => I,
 Pos: [34, 42] xx => I,
 Pos: [39, 50] cc => I,
 Pos: [41, 52] xx => I,
 Pos: [45, 59] cc => I,
 Pos: [46, 54] cc => I,
 Pos: [47, 75] xx => I,
 Pos: [51, 58] xx => I,
 Pos: [55, 62] cc => I,
 Pos: [56, 61] cc => I,
 Pos: [79, 82] cc => I,
 Pos: [76, 81] cc => I,
 Pos: [92, 97] xx => I,
 Pos: [102, 108] cc => I,
 Pos: [104, 111] xx => I,
 Pos: [107, 114, 120] ccc => cc,
 Pos: [115, 121] cc => I,
 Pos: [122, 129] cc => I,
 Pos: [123, 130] xx => I,
 Pos: [126, 153] xx => I,
 Pos: [127, 136] cc => I,
 Pos: [131, 158] xx => I,
 Pos: [135, 144, 154] ccc => cc,
 Pos: [141, 170] xx => I,
 Pos: [167, 171, 178] ccc => cc,
 Pos: [159, 164] cc => I,
 Pos: [194, 207] xx => I,
 Pos: [185, 191] xx => I,
 Pos: [188, 197] cc => I,
 Pos: [190, 195] cc => I,
 Pos: [193, 199, 205] xcx => c,
 Pos: [203, 210, 213] ccc => cc,
 Pos: [215, 220] xx => I,
 Pos: [216, 225] xx => I,
 Pos: [229, 238] xx => I,
 Pos: [236, 242] cc => I,
 Pos: [239, 264] xx => I,
 Pos: [241, 254] cc => I,
 Pos: [243, 252] cc => I,
 Pos: [244, 255] cc => I,
 Pos: [248, 253] cc => I]
Change: 45, Saving: 46

Circuit before: xxccccxxccccccxxcccxxxcccxxcccccccxcccccxxxxcccxcccxxxccccxccccxxxcccccxcccxccccccccccccccccxccccxxxccccxxcccccxxccccxcccccxxxxcccxxxxxccccxxxxcccxxxccxxxccccxccccccccccxxcccccxccccxxccxxccccxxxxccccccccccxxxxccccccxxxccxccccxxccxxxxxccccxxcccccxccccxxcccccxxccccxxccccc
---------------
Apply:  Pos: [0, 6] xx => I
Apply:  Pos: [2, 8] cc => I
Apply:  Pos: [17, 23] cc => I
Apply:  Pos: [30, 35] cc => I
Apply:  Pos: [33, 57] cc => I
Apply:  Pos: [34, 42] xx => I
Apply:  Pos: [39, 50] cc => I
Apply:  Pos: [41, 52] xx => I
Apply:  Pos: [45, 59] cc => I
Apply:  Pos: [46, 54] cc => I
Apply:  Pos: [47, 75] xx => I
Apply:  Pos: [51, 58] xx => I
Apply:  Pos: [55, 62] cc => I
Apply:  Pos: [56, 61] cc => I
Apply:  Pos: [79, 82] cc => I
Apply:  Pos: [76, 81] cc => I
Apply:  Pos: [92, 97] xx => I
Apply:  Pos: [102, 108] cc => I
Apply:  Pos: [104, 111] xx => I
Apply:  Pos: [107, 114, 120] ccc => cc
Apply:  Pos: [115, 121] cc => I
Apply:  Pos: [122, 129] cc => I
Apply:  Pos: [123, 130] xx => I
Apply:  Pos: [126, 153] xx => I
Apply:  Pos: [127, 136] cc => I
Apply:  Pos: [131, 158] xx => I
Apply:  Pos: [135, 144, 154] ccc => cc
Apply:  Pos: [141, 170] xx => I
Apply:  Pos: [167, 171, 178] ccc => cc
Apply:  Pos: [159, 164] cc => I
Apply:  Pos: [194, 207] xx => I
Apply:  Pos: [185, 191] xx => I
Apply:  Pos: [188, 197] cc => I
Apply:  Pos: [190, 195] cc => I
Apply:  Pos: [193, 199, 205] xcx => c
Apply:  Pos: [203, 210, 213] ccc => cc
Apply:  Pos: [215, 220] xx => I
Apply:  Pos: [216, 225] xx => I
Apply:  Pos: [229, 238] xx => I
Apply:  Pos: [236, 242] cc => I
Apply:  Pos: [239, 264] xx => I
Apply:  Pos: [241, 254] cc => I
Apply:  Pos: [243, 252] cc => I
Apply:  Pos: [244, 255] cc => I
Apply:  Pos: [248, 253] cc => I
---------------
Circuit after: xcccxcccccxxccxxxccxxccccccccxxcccxcxxxcccccxcccccccccccccccccccxxcccxccccxcccxccxxcxxxcccxxxcccxxxccxxcccccccccccxcccccxcccxxccxccxccccccccxxcccccxccccccxccxxxxccccxcccxxcxxccccxccccc

--------End Timer [apply mapping plan]:  0.0

[15], [10, 11], [1, 3], [4, 18], [4], [3, 8], [14, 12], [15, 17], [9, 6], [18, 10], [10], [5], [19, 14], [18, 15], [14], [11], [6], [10, 9], [5, 18], [10], [15], [14, 8], [4, 2], [13, 5], [17, 11], [7, 1], [9, 14], [2, 7], [4, 16], [1], [18], [3, 8], [14, 8], [18, 16], [5], [4, 18], [10], [19], [17], [8, 0], [4, 16], [13, 5], [7, 3], [9, 14], [8], [16, 9], [18, 10], [4, 2], [15, 10], [18, 16], [1, 3], [18, 10], [7, 3], [17, 11], [14, 12], [8, 0], [15, 17], [2, 7], [1, 3], [5, 10], [4, 2], [11, 6], [9, 14], [16, 19], [2], [7], [18, 10], [17, 11], [16, 9], [13], [2, 16], [13, 4], [10, 9], [7, 3], [1], [15, 17], [4, 18], [19, 9], [19], [14, 0], [15, 10], [8], [16], [5, 15], [15], [14], [12], [10, 11], [13, 5], [7, 1], [0], [13], [18], [16, 19], [9, 11], [5, 15], [19], [16], [15], [14, 0], [5, 18], [14], [6], [16, 19], [8, 0], [2, 7], [7, 19], [10, 11], [9, 6], [2, 16], [16, 19], [7, 3], [13, 18], [11, 6], [14], [5, 18], [6, 12], [10, 11], [19, 3], [13, 4], [8], [19, 14], [1, 3], [10, 9], [10], [5], [7, 19], [4, 16], [16], [17, 11], [18, 15], [18], [19, 14], [2, 16], [10, 11], [16, 9], [4, 2], [3, 8], [18, 15], [6, 12], [0], [12], [9, 11], [15, 10], [16, 14], [8, 0], [10, 11], [2], [8, 12], [16, 9], [9, 11], [4, 18], [16, 19], [15, 10], [19], [14, 12], [10, 9], [18], [8], [15], [0], [10, 6], [2, 16], [13, 5], [13, 4], [6], [19, 14], [16, 9], [1, 3], [14], [1], [16, 19], [19], [18], [14, 8], [10, 9], [17, 11], [4, 16], [16], [8, 12], [19, 14], [5, 10], [1, 3], [18, 15], ----End Timer [Execute Mapping]:  1.7655045986175537

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[116, 139]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[19, 36]
[101, 114]
[157, 173]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[21, 26, 31]
[121, 126, 132]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[19, 36]
[101, 114]
[157, 173]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[116, 139]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.250305414199829

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [19, 36] xx => I, Pos: [19, 36] xx => I, Pos: [21, 26, 31] ccc => cc, Pos: [101, 114] xx => I, Pos: [101, 114] xx => I, Pos: [116, 139] cc => I, Pos: [116, 139] cc => I, Pos: [121, 126, 132] ccc => cc, Pos: [157, 173] xx => I, Pos: [157, 173] xx => I]

--------End Timer [Generate Plans]:  0.015624046325683594

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [19, 36] xx => I,
 Pos: [21, 26, 31] ccc => cc,
 Pos: [101, 114] xx => I,
 Pos: [116, 139] cc => I,
 Pos: [121, 126, 132] ccc => cc,
 Pos: [157, 173] xx => I]
Change: 6, Saving: 6

Circuit before: xcccxcccccxxccxxxccxxccccccccxxcccxcxxxcccccxcccccccccccccccccccxxcccxccccxcccxccxxcxxxcccxxxcccxxxccxxcccccccccccxcccccxcccxxccxccxccccccccxxcccccxccccccxccxxxxccccxcccxxcxxccccxccccc
---------------
Apply:  Pos: [19, 36] xx => I
Apply:  Pos: [21, 26, 31] ccc => cc
Apply:  Pos: [101, 114] xx => I
Apply:  Pos: [116, 139] cc => I
Apply:  Pos: [121, 126, 132] ccc => cc
Apply:  Pos: [157, 173] xx => I
---------------
Circuit after: xcccxcccccxxccxxxccxccccccccxxccxcxxcccccxcccccccccccccccccccxxcccxccccxcccxccxxcxxxcccxxxcccxxxccxcccccccccccccccxcccxxccxccxccccccxxcccccxccccccxccxxxccccxcccxxcxccccxccccc

--------End Timer [apply mapping plan]:  0.0

[15], [10, 11], [1, 3], [4, 18], [4], [3, 8], [14, 12], [15, 17], [9, 6], [18, 10], [10], [5], [19, 14], [18, 15], [14], [11], [6], [10, 9], [5, 18], [15], [9, 14], [4, 2], [13, 5], [17, 11], [7, 1], [14, 8], [2, 7], [4, 16], [1], [18], [3, 8], [18, 16], [5], [4, 18], [19], [17], [8, 0], [4, 16], [13, 5], [7, 3], [9, 14], [8], [16, 9], [18, 10], [4, 2], [15, 10], [18, 16], [1, 3], [18, 10], [7, 3], [17, 11], [14, 12], [8, 0], [15, 17], [2, 7], [1, 3], [5, 10], [4, 2], [11, 6], [9, 14], [16, 19], [2], [7], [18, 10], [17, 11], [16, 9], [13], [2, 16], [13, 4], [10, 9], [7, 3], [1], [15, 17], [4, 18], [19, 9], [19], [14, 0], [15, 10], [8], [16], [5, 15], [15], [14], [12], [10, 11], [13, 5], [7, 1], [0], [13], [18], [16, 19], [9, 11], [5, 15], [19], [16], [15], [14, 0], [5, 18], [6], [16, 19], [8, 0], [2, 7], [7, 19], [10, 11], [9, 6], [2, 16], [16, 19], [7, 3], [13, 18], [11, 6], [5, 18], [10, 11], [19, 3], [13, 4], [8], [7, 19], [1, 3], [10, 9], [10], [5], [19, 14], [4, 16], [16], [17, 11], [18, 15], [18], [2, 16], [10, 11], [16, 9], [4, 2], [3, 8], [18, 15], [0], [12], [9, 11], [15, 10], [16, 14], [8, 0], [10, 11], [2], [8, 12], [16, 9], [9, 11], [4, 18], [16, 19], [15, 10], [19], [14, 12], [10, 9], [8], [15], [0], [10, 6], [2, 16], [13, 4], [13, 5], [6], [19, 14], [16, 9], [1, 3], [14], [1], [16, 19], [19], [14, 8], [10, 9], [17, 11], [4, 16], [16], [8, 12], [19, 14], [5, 10], [1, 3], [18, 15], ----End Timer [Execute Mapping]:  1.2659294605255127

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[83, 133]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[83, 133]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.2186672687530518

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [83, 133] xx => I, Pos: [83, 133] xx => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [83, 133] xx => I]
Change: 1, Saving: 1

Circuit before: xcccxcccccxxccxxxccxccccccccxxccxcxxcccccxcccccccccccccccccccxxcccxccccxcccxccxxcxxxcccxxxcccxxxccxcccccccccccccccxcccxxccxccxccccccxxcccccxccccccxccxxxccccxcccxxcxccccxccccc
---------------
Apply:  Pos: [83, 133] xx => I
---------------
Circuit after: xcccxcccccxxccxxxccxccccccccxxccxcxxcccccxcccccccccccccccccccxxcccxccccxcccxccxxcxxcccxxxcccxxxccxcccccccccccccccxcccxxccxccxccccccxcccccxccccccxccxxxccccxcccxxcxccccxccccc

--------End Timer [apply mapping plan]:  0.0

[15], [10, 11], [1, 3], [4, 18], [4], [3, 8], [14, 12], [15, 17], [9, 6], [18, 10], [10], [5], [19, 14], [18, 15], [14], [11], [6], [10, 9], [5, 18], [15], [9, 14], [4, 2], [13, 5], [17, 11], [7, 1], [14, 8], [2, 7], [4, 16], [1], [18], [3, 8], [18, 16], [5], [4, 18], [19], [17], [8, 0], [4, 16], [13, 5], [7, 3], [9, 14], [8], [16, 9], [18, 10], [4, 2], [15, 10], [18, 16], [1, 3], [18, 10], [7, 3], [17, 11], [14, 12], [8, 0], [15, 17], [2, 7], [1, 3], [5, 10], [4, 2], [11, 6], [9, 14], [16, 19], [2], [7], [18, 10], [17, 11], [16, 9], [13], [2, 16], [13, 4], [10, 9], [7, 3], [1], [15, 17], [4, 18], [19, 9], [19], [14, 0], [15, 10], [8], [16], [5, 15], [15], [14], [10, 11], [13, 5], [7, 1], [0], [13], [18], [16, 19], [9, 11], [5, 15], [19], [16], [15], [14, 0], [5, 18], [6], [16, 19], [8, 0], [2, 7], [7, 19], [10, 11], [9, 6], [2, 16], [16, 19], [7, 3], [13, 18], [11, 6], [5, 18], [10, 11], [19, 3], [13, 4], [8], [7, 19], [1, 3], [10, 9], [10], [5], [19, 14], [4, 16], [16], [17, 11], [18, 15], [18], [2, 16], [10, 11], [16, 9], [4, 2], [3, 8], [18, 15], [0], [9, 11], [15, 10], [16, 14], [8, 0], [10, 11], [2], [8, 12], [16, 9], [9, 11], [4, 18], [16, 19], [15, 10], [19], [14, 12], [10, 9], [8], [15], [0], [10, 6], [2, 16], [13, 5], [13, 4], [6], [19, 14], [16, 9], [1, 3], [14], [1], [16, 19], [19], [14, 8], [10, 9], [17, 11], [4, 16], [16], [8, 12], [19, 14], [5, 10], [1, 3], [18, 15], ----End Timer [Execute Mapping]:  1.2186672687530518

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.2345325946807861

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: xcccxcccccxxccxxxccxccccccccxxccxcxxcccccxcccccccccccccccccccxxcccxccccxcccxccxxcxxcccxxxcccxxxccxcccccccccccccccxcccxxccxccxccccccxcccccxccccccxccxxxccccxcccxxcxccccxccccc
---------------
---------------
Circuit after: xcccxcccccxxccxxxccxccccccccxxccxcxxcccccxcccccccccccccccccccxxcccxccccxcccxccxxcxxcccxxxcccxxxccxcccccccccccccccxcccxxccxccxccccccxcccccxccccccxccxxxccccxcccxxcxccccxccccc

--------End Timer [apply mapping plan]:  0.0

[15], [10, 11], [1, 3], [4, 18], [4], [3, 8], [14, 12], [15, 17], [9, 6], [18, 10], [10], [5], [19, 14], [18, 15], [14], [11], [6], [10, 9], [5, 18], [15], [9, 14], [4, 2], [13, 5], [17, 11], [7, 1], [14, 8], [2, 7], [4, 16], [1], [18], [3, 8], [18, 16], [5], [4, 18], [19], [17], [8, 0], [4, 16], [13, 5], [7, 3], [9, 14], [8], [16, 9], [18, 10], [4, 2], [15, 10], [18, 16], [1, 3], [18, 10], [7, 3], [17, 11], [14, 12], [8, 0], [15, 17], [2, 7], [1, 3], [5, 10], [4, 2], [11, 6], [9, 14], [16, 19], [2], [7], [18, 10], [17, 11], [16, 9], [13], [2, 16], [13, 4], [10, 9], [7, 3], [1], [15, 17], [4, 18], [19, 9], [19], [14, 0], [15, 10], [8], [16], [5, 15], [15], [14], [10, 11], [13, 5], [7, 1], [0], [13], [18], [16, 19], [9, 11], [5, 15], [19], [16], [15], [14, 0], [5, 18], [6], [16, 19], [8, 0], [2, 7], [7, 19], [10, 11], [9, 6], [2, 16], [16, 19], [7, 3], [13, 18], [11, 6], [5, 18], [10, 11], [19, 3], [13, 4], [8], [7, 19], [1, 3], [10, 9], [10], [5], [19, 14], [4, 16], [16], [17, 11], [18, 15], [18], [2, 16], [10, 11], [16, 9], [4, 2], [3, 8], [18, 15], [0], [9, 11], [15, 10], [16, 14], [8, 0], [10, 11], [2], [8, 12], [16, 9], [9, 11], [4, 18], [16, 19], [15, 10], [19], [14, 12], [10, 9], [8], [15], [0], [10, 6], [2, 16], [13, 4], [13, 5], [6], [19, 14], [16, 9], [1, 3], [14], [1], [16, 19], [19], [14, 8], [10, 9], [17, 11], [4, 16], [16], [8, 12], [19, 14], [5, 10], [1, 3], [18, 15], ----End Timer [Execute Mapping]:  1.2345325946807861

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-x-x-x-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-x-cx-cx-cx-x-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-x-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-x-x-x-x-x-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-x-x-x-cx-cx-x-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-cx-cx-x-x-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-x-cx-cx-cx-cx-x-x-cx-cx-x-x-x-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx 
     => total size: [270] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx,x]
 - circuit depth: 45 - (small)
 - circuit cycle: 450


>> Solved circuit: 
Circuit Info: 
 - circuit: x-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-cx-cx-x-x-x-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-x-cx-x-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-x-cx-cx-cx-cx-x-cx-cx-cx-x-cx-cx-x-x-cx-x-x-cx-cx-cx-x-x-x-cx-cx-cx-x-x-x-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-x-x-cx-cx-x-cx-cx-x-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-cx-cx-x-x-x-cx-cx-cx-cx-x-cx-cx-cx-x-x-cx-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx 
     => total size: [172] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx,x]
 - circuit depth: 33 - (small)
 - circuit cycle: 298

Reduced: 
 - size: 98 (36.30%)
 - depth: 12 (26.67%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.10937237739562988

[0], [15], [7, 19], [10, 11], [1, 3], [4, 18], [0], [4], [7, 19], [3, 8], [14, 12], [15, 17], [9, 6], [18, 10], [10], [5], [19, 14], [7, 3], [18, 15], [14], [11], [6], [10, 9], [7, 3], [5, 18], [10], [15], [14, 8], [4, 2], [13, 5], [3, 8], [17, 11], [7, 1], [9, 6], [19], [3, 8], [9, 14], [2, 7], [4, 16], [15, 17], [1], [7], [19], [18], [3, 8], [10, 11], [14, 0], [12], [14, 8], [18, 16], [15, 17], [8], [7], [5], [14, 0], [16, 19], [1, 3], [9, 6], [8], [10, 11], [4, 18], [1, 3], [16, 19], [10], [19], [17], [8, 0], [4, 16], [13, 5], [7, 3], [9, 14], [8], [16, 9], [18, 10], [4, 2], [12], [8, 0], [15, 10], [18, 16], [4, 2], [1, 3], [8, 0], [4, 2], [18, 10], [7, 3], [17, 11], [14, 12], [8, 0], [15, 17], [2, 7], [1, 3], [5, 10], [0], [4, 2], [11, 6], [9, 14], [16, 19], [0], [2], [7], [18, 10], [17, 11], [8, 12], [16, 9], [0], [13], [2, 16], [4, 18], [8, 12], [10, 9], [7, 3], [0], [1], [15, 17], [13, 4], [2, 7], [19, 9], [19], [14, 0], [15, 10], [4, 18], [2, 7], [11, 6], [0], [8], [16], [17], [19, 3], [5, 15], [11, 6], [0], [4], [15], [14], [12], [10, 9], [19, 3], [13, 5], [7, 1], [0], [13], [1], [18], [16, 19], [9, 11], [5, 15], [19], [16], [15], [14, 0], [5, 18], [14], [6], [17], [10, 9], [16, 19], [8, 0], [2, 7], [4], [14, 0], [7, 19], [10, 11], [9, 6], [2, 16], [14, 0], [16, 19], [7, 3], [13, 5], [11, 6], [14], [1], [5, 18], [6, 12], [10, 11], [19, 3], [13, 4], [8], [19, 14], [13, 5], [1, 3], [10, 9], [10], [5], [7, 19], [4, 16], [19], [16], [17, 11], [12, 0], [18, 15], [7, 1], [19], [18], [14], [5], [7, 1], [2, 16], [12, 0], [10, 11], [19, 14], [16, 9], [4, 2], [3, 8], [15, 10], [6, 12], [14], [0], [5], [12], [9, 11], [18, 10], [16, 14], [8, 0], [18, 15], [10, 11], [14], [6], [2], [8, 12], [16, 9], [14], [9, 11], [4, 18], [16, 19], [15, 10], [6], [19], [14, 12], [10, 9], [14], [18], [8], [15], [0], [10, 6], [2, 16], [19, 9], [13, 5], [14], [2], [13, 4], [17, 11], [19, 9], [18, 10], [5, 15], [6], [19, 14], [16, 9], [12, 0], [1, 3], [14], [1], [18, 10], [12, 0], [17, 11], [5, 15], [16, 19], [19], [18], [14, 8], [10, 9], [17, 11], [4, 16], [16], [2], [8, 12], [19, 14], [5, 10], [1, 3], [18, 15], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[2, 8]
[17, 23]
[30, 35]
[35, 44]
[39, 50]
[46, 54]
[33, 57]
[45, 59]
[56, 61]
[55, 62]
[74, 79]
[76, 81]
[79, 82]
[81, 87]
[102, 108]
[115, 121]
[122, 129]
[127, 136]
[159, 164]
[190, 195]
[188, 197]
[236, 242]
[243, 252]
[248, 253]
[241, 254]
[244, 255]
[254, 261]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[0, 6]
[34, 42]
[41, 52]
[51, 58]
[47, 75]
[92, 97]
[97, 104]
[104, 111]
[123, 130]
[130, 139]
[126, 153]
[131, 158]
[141, 170]
[185, 191]
[182, 194]
[194, 207]
[215, 220]
[216, 225]
[229, 238]
[239, 264]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[135, 144, 154]
[167, 171, 178]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 

[111, 118, 123]
[193, 199, 205]
[205, 211, 215]
[238, 246, 250]

------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[107, 114, 120]
[150, 167, 171]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[203, 210, 213]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[0, 6]
[34, 42]
[41, 52]
[51, 58]
[47, 75]
[92, 97]
[97, 104]
[104, 111]
[123, 130]
[130, 139]
[126, 153]
[131, 158]
[141, 170]
[185, 191]
[182, 194]
[194, 207]
[215, 220]
[216, 225]
[229, 238]
[239, 264]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[2, 8]
[17, 23]
[30, 35]
[35, 44]
[39, 50]
[46, 54]
[33, 57]
[45, 59]
[56, 61]
[55, 62]
[74, 79]
[76, 81]
[79, 82]
[81, 87]
[102, 108]
[115, 121]
[122, 129]
[127, 136]
[159, 164]
[190, 195]
[188, 197]
[236, 242]
[243, 252]
[248, 253]
[241, 254]
[244, 255]
[254, 261]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.702160358428955

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 6] xx => I, Pos: [0, 6] xx => I, Pos: [2, 8] cc => I, Pos: [2, 8] cc => I, Pos: [17, 23] cc => I, Pos: [17, 23] cc => I, Pos: [30, 35] cc => I, Pos: [30, 35] cc => I, Pos: [33, 57] cc => I, Pos: [33, 57] cc => I, Pos: [34, 42] xx => I, Pos: [34, 42] xx => I, Pos: [35, 44] cc => I, Pos: [35, 44] cc => I, Pos: [39, 50] cc => I, Pos: [39, 50] cc => I, Pos: [41, 52] xx => I, Pos: [41, 52] xx => I, Pos: [45, 59] cc => I, Pos: [45, 59] cc => I, Pos: [46, 54] cc => I, Pos: [46, 54] cc => I, Pos: [47, 75] xx => I, Pos: [47, 75] xx => I, Pos: [51, 58] xx => I, Pos: [51, 58] xx => I, Pos: [55, 62] cc => I, Pos: [55, 62] cc => I, Pos: [56, 61] cc => I, Pos: [56, 61] cc => I, Pos: [74, 79] cc => I, Pos: [74, 79] cc => I, Pos: [76, 81] cc => I, Pos: [76, 81] cc => I, Pos: [79, 82] cc => I, Pos: [79, 82] cc => I, Pos: [81, 87] cc => I, Pos: [81, 87] cc => I, Pos: [92, 97] xx => I, Pos: [92, 97] xx => I, Pos: [97, 104] xx => I, Pos: [97, 104] xx => I, Pos: [102, 108] cc => I, Pos: [102, 108] cc => I, Pos: [104, 111] xx => I, Pos: [104, 111] xx => I, Pos: [107, 114, 120] ccc => cc, Pos: [111, 118, 123] xcx => c, Pos: [115, 121] cc => I, Pos: [115, 121] cc => I, Pos: [122, 129] cc => I, Pos: [122, 129] cc => I, Pos: [123, 130] xx => I, Pos: [123, 130] xx => I, Pos: [126, 153] xx => I, Pos: [126, 153] xx => I, Pos: [127, 136] cc => I, Pos: [127, 136] cc => I, Pos: [130, 139] xx => I, Pos: [130, 139] xx => I, Pos: [131, 158] xx => I, Pos: [131, 158] xx => I, Pos: [135, 144, 154] ccc => cc, Pos: [141, 170] xx => I, Pos: [141, 170] xx => I, Pos: [150, 167, 171] ccc => cc, Pos: [159, 164] cc => I, Pos: [159, 164] cc => I, Pos: [167, 171, 178] ccc => cc, Pos: [182, 194] xx => I, Pos: [182, 194] xx => I, Pos: [185, 191] xx => I, Pos: [185, 191] xx => I, Pos: [188, 197] cc => I, Pos: [188, 197] cc => I, Pos: [190, 195] cc => I, Pos: [190, 195] cc => I, Pos: [193, 199, 205] xcx => c, Pos: [194, 207] xx => I, Pos: [194, 207] xx => I, Pos: [203, 210, 213] ccc => cc, Pos: [205, 211, 215] xcx => c, Pos: [215, 220] xx => I, Pos: [215, 220] xx => I, Pos: [216, 225] xx => I, Pos: [216, 225] xx => I, Pos: [229, 238] xx => I, Pos: [229, 238] xx => I, Pos: [236, 242] cc => I, Pos: [236, 242] cc => I, Pos: [238, 246, 250] xcx => c, Pos: [239, 264] xx => I, Pos: [239, 264] xx => I, Pos: [241, 254] cc => I, Pos: [241, 254] cc => I, Pos: [243, 252] cc => I, Pos: [243, 252] cc => I, Pos: [244, 255] cc => I, Pos: [244, 255] cc => I, Pos: [248, 253] cc => I, Pos: [248, 253] cc => I, Pos: [254, 261] cc => I, Pos: [254, 261] cc => I]

--------End Timer [Generate Plans]:  0.10936832427978516

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 6] xx => I,
 Pos: [2, 8] cc => I,
 Pos: [17, 23] cc => I,
 Pos: [30, 35] cc => I,
 Pos: [33, 57] cc => I,
 Pos: [34, 42] xx => I,
 Pos: [39, 50] cc => I,
 Pos: [41, 52] xx => I,
 Pos: [45, 59] cc => I,
 Pos: [46, 54] cc => I,
 Pos: [47, 75] xx => I,
 Pos: [51, 58] xx => I,
 Pos: [55, 62] cc => I,
 Pos: [56, 61] cc => I,
 Pos: [79, 82] cc => I,
 Pos: [81, 87] cc => I,
 Pos: [97, 104] xx => I,
 Pos: [102, 108] cc => I,
 Pos: [107, 114, 120] ccc => cc,
 Pos: [123, 130] xx => I,
 Pos: [115, 121] cc => I,
 Pos: [122, 129] cc => I,
 Pos: [126, 153] xx => I,
 Pos: [127, 136] cc => I,
 Pos: [131, 158] xx => I,
 Pos: [135, 144, 154] ccc => cc,
 Pos: [141, 170] xx => I,
 Pos: [167, 171, 178] ccc => cc,
 Pos: [159, 164] cc => I,
 Pos: [182, 194] xx => I,
 Pos: [185, 191] xx => I,
 Pos: [188, 197] cc => I,
 Pos: [190, 195] cc => I,
 Pos: [205, 211, 215] xcx => c,
 Pos: [203, 210, 213] ccc => cc,
 Pos: [216, 225] xx => I,
 Pos: [229, 238] xx => I,
 Pos: [236, 242] cc => I,
 Pos: [239, 264] xx => I,
 Pos: [241, 254] cc => I,
 Pos: [243, 252] cc => I,
 Pos: [244, 255] cc => I,
 Pos: [248, 253] cc => I]
Change: 43, Saving: 43

Circuit before: xxccccxxccccccxxcccxxxcccxxcccccccxcccccxxxxcccxcccxxxccccxccccxxxcccccxcccxccccccccccccccccxccccxxxccccxxcccccxxccccxcccccxxxxcccxxxxxccccxxxxcccxxxccxxxccccxccccccccccxxcccccxccccxxccxxccccxxxxccccccccccxxxxccccccxxxccxccccxxccxxxxxccccxxcccccxccccxxcccccxxccccxxccccc
---------------
Apply:  Pos: [0, 6] xx => I
Apply:  Pos: [2, 8] cc => I
Apply:  Pos: [17, 23] cc => I
Apply:  Pos: [30, 35] cc => I
Apply:  Pos: [33, 57] cc => I
Apply:  Pos: [34, 42] xx => I
Apply:  Pos: [39, 50] cc => I
Apply:  Pos: [41, 52] xx => I
Apply:  Pos: [45, 59] cc => I
Apply:  Pos: [46, 54] cc => I
Apply:  Pos: [47, 75] xx => I
Apply:  Pos: [51, 58] xx => I
Apply:  Pos: [55, 62] cc => I
Apply:  Pos: [56, 61] cc => I
Apply:  Pos: [79, 82] cc => I
Apply:  Pos: [81, 87] cc => I
Apply:  Pos: [97, 104] xx => I
Apply:  Pos: [102, 108] cc => I
Apply:  Pos: [107, 114, 120] ccc => cc
Apply:  Pos: [123, 130] xx => I
Apply:  Pos: [115, 121] cc => I
Apply:  Pos: [122, 129] cc => I
Apply:  Pos: [126, 153] xx => I
Apply:  Pos: [127, 136] cc => I
Apply:  Pos: [131, 158] xx => I
Apply:  Pos: [135, 144, 154] ccc => cc
Apply:  Pos: [141, 170] xx => I
Apply:  Pos: [167, 171, 178] ccc => cc
Apply:  Pos: [159, 164] cc => I
Apply:  Pos: [182, 194] xx => I
Apply:  Pos: [185, 191] xx => I
Apply:  Pos: [188, 197] cc => I
Apply:  Pos: [190, 195] cc => I
Apply:  Pos: [205, 211, 215] xcx => c
Apply:  Pos: [203, 210, 213] ccc => cc
Apply:  Pos: [216, 225] xx => I
Apply:  Pos: [229, 238] xx => I
Apply:  Pos: [236, 242] cc => I
Apply:  Pos: [239, 264] xx => I
Apply:  Pos: [241, 254] cc => I
Apply:  Pos: [243, 252] cc => I
Apply:  Pos: [244, 255] cc => I
Apply:  Pos: [248, 253] cc => I
---------------
Circuit after: xcccxcccccxxccxxxccxxccccccccxxcccxcxxxcccccxcccccccccccccccxccccxxcccxccccxxcccxccxxcxxxcccxxxcccxxxccxxcccccccccccxcccccxcccxccxccxxcccccccccxxxccccxccxccccxccxxxxccccxcccxxcxxccccxccccc

--------End Timer [apply mapping plan]:  0.0

[15], [10, 11], [1, 3], [4, 18], [4], [3, 8], [14, 12], [15, 17], [9, 6], [18, 10], [10], [5], [19, 14], [18, 15], [14], [11], [6], [10, 9], [5, 18], [10], [15], [14, 8], [4, 2], [13, 5], [17, 11], [7, 1], [9, 14], [2, 7], [4, 16], [1], [18], [3, 8], [14, 8], [18, 16], [5], [4, 18], [10], [19], [17], [8, 0], [4, 16], [13, 5], [7, 3], [9, 14], [8], [16, 9], [18, 10], [4, 2], [8, 0], [15, 10], [18, 16], [1, 3], [18, 10], [7, 3], [17, 11], [14, 12], [15, 17], [2, 7], [1, 3], [5, 10], [0], [4, 2], [11, 6], [9, 14], [16, 19], [2], [7], [18, 10], [17, 11], [16, 9], [13], [2, 16], [13, 4], [10, 9], [7, 3], [0], [1], [15, 17], [4, 18], [19, 9], [19], [14, 0], [15, 10], [8], [16], [5, 15], [15], [14], [12], [10, 11], [13, 5], [7, 1], [0], [13], [18], [16, 19], [9, 11], [5, 15], [19], [16], [15], [14, 0], [5, 18], [14], [6], [16, 19], [8, 0], [2, 7], [7, 19], [10, 11], [9, 6], [2, 16], [16, 19], [7, 3], [13, 18], [11, 6], [14], [5, 18], [6, 12], [10, 11], [19, 3], [13, 4], [8], [19, 14], [1, 3], [10, 9], [10], [7, 19], [4, 16], [16], [17, 11], [18, 15], [18], [14], [2, 16], [10, 11], [19, 14], [16, 9], [4, 2], [3, 8], [18, 15], [6, 12], [16, 14], [0], [5], [12], [9, 11], [15, 10], [8, 0], [10, 11], [2], [8, 12], [16, 9], [14], [9, 11], [4, 18], [16, 19], [15, 10], [19], [14, 12], [10, 9], [18], [8], [15], [0], [10, 6], [2, 16], [13, 5], [13, 4], [6], [19, 14], [16, 9], [1, 3], [14], [1], [16, 19], [19], [18], [14, 8], [10, 9], [17, 11], [4, 16], [16], [8, 12], [19, 14], [5, 10], [1, 3], [18, 15], ----End Timer [Execute Mapping]:  1.8115286827087402

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[118, 141]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[19, 36]
[60, 75]
[103, 116]
[161, 177]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[21, 26, 31]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[19, 36]
[60, 75]
[103, 116]
[161, 177]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[118, 141]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.250068187713623

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [19, 36] xx => I, Pos: [19, 36] xx => I, Pos: [21, 26, 31] ccc => cc, Pos: [60, 75] xx => I, Pos: [60, 75] xx => I, Pos: [103, 116] xx => I, Pos: [103, 116] xx => I, Pos: [118, 141] cc => I, Pos: [118, 141] cc => I, Pos: [161, 177] xx => I, Pos: [161, 177] xx => I]

--------End Timer [Generate Plans]:  0.01562356948852539

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [19, 36] xx => I,
 Pos: [21, 26, 31] ccc => cc,
 Pos: [60, 75] xx => I,
 Pos: [103, 116] xx => I,
 Pos: [118, 141] cc => I,
 Pos: [161, 177] xx => I]
Change: 6, Saving: 7

Circuit before: xcccxcccccxxccxxxccxxccccccccxxcccxcxxxcccccxcccccccccccccccxccccxxcccxccccxxcccxccxxcxxxcccxxxcccxxxccxxcccccccccccxcccccxcccxccxccxxcccccccccxxxccccxccxccccxccxxxxccccxcccxxcxxccccxccccc
---------------
Apply:  Pos: [19, 36] xx => I
Apply:  Pos: [21, 26, 31] ccc => cc
Apply:  Pos: [60, 75] xx => I
Apply:  Pos: [103, 116] xx => I
Apply:  Pos: [118, 141] cc => I
Apply:  Pos: [161, 177] xx => I
---------------
Circuit after: xcccxcccccxxccxxxccxccccccccxxccxcxxcccccxcccccccccccccccccccxxcccxccccxcccxccxxcxxxcccxxxcccxxxccxcccccccccccccccxcccxccxccxxccccccccxxxccccxccxccccxccxxxccccxcccxxcxccccxccccc

--------End Timer [apply mapping plan]:  0.0

[15], [10, 11], [1, 3], [4, 18], [4], [3, 8], [14, 12], [15, 17], [9, 6], [18, 10], [10], [5], [19, 14], [18, 15], [14], [11], [6], [10, 9], [5, 18], [15], [9, 14], [4, 2], [13, 5], [17, 11], [7, 1], [14, 8], [2, 7], [4, 16], [1], [18], [3, 8], [18, 16], [5], [4, 18], [19], [17], [8, 0], [4, 16], [13, 5], [7, 3], [9, 14], [8], [16, 9], [18, 10], [4, 2], [8, 0], [15, 10], [18, 16], [1, 3], [18, 10], [7, 3], [17, 11], [14, 12], [15, 17], [2, 7], [1, 3], [5, 10], [4, 2], [11, 6], [9, 14], [16, 19], [2], [7], [18, 10], [17, 11], [16, 9], [13], [2, 16], [13, 4], [10, 9], [7, 3], [1], [15, 17], [4, 18], [19, 9], [19], [14, 0], [15, 10], [8], [16], [5, 15], [15], [14], [12], [10, 11], [13, 5], [7, 1], [0], [13], [18], [16, 19], [9, 11], [5, 15], [19], [16], [15], [14, 0], [5, 18], [6], [16, 19], [8, 0], [2, 7], [7, 19], [10, 11], [9, 6], [2, 16], [16, 19], [7, 3], [13, 18], [11, 6], [5, 18], [10, 11], [19, 3], [13, 4], [8], [19, 14], [1, 3], [10, 9], [10], [7, 19], [4, 16], [16], [17, 11], [18, 15], [18], [14], [2, 16], [10, 11], [19, 14], [16, 9], [4, 2], [3, 8], [18, 15], [16, 14], [0], [5], [12], [9, 11], [15, 10], [8, 0], [10, 11], [2], [8, 12], [16, 9], [14], [9, 11], [4, 18], [16, 19], [15, 10], [19], [14, 12], [10, 9], [8], [15], [0], [10, 6], [2, 16], [13, 4], [13, 5], [6], [19, 14], [16, 9], [1, 3], [14], [1], [16, 19], [19], [14, 8], [10, 9], [17, 11], [4, 16], [16], [8, 12], [19, 14], [5, 10], [1, 3], [18, 15], ----End Timer [Execute Mapping]:  1.2656917572021484

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.2500300407409668

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: xcccxcccccxxccxxxccxccccccccxxccxcxxcccccxcccccccccccccccccccxxcccxccccxcccxccxxcxxxcccxxxcccxxxccxcccccccccccccccxcccxccxccxxccccccccxxxccccxccxccccxccxxxccccxcccxxcxccccxccccc
---------------
---------------
Circuit after: xcccxcccccxxccxxxccxccccccccxxccxcxxcccccxcccccccccccccccccccxxcccxccccxcccxccxxcxxxcccxxxcccxxxccxcccccccccccccccxcccxccxccxxccccccccxxxccccxccxccccxccxxxccccxcccxxcxccccxccccc

--------End Timer [apply mapping plan]:  0.0

[15], [10, 11], [1, 3], [4, 18], [4], [3, 8], [14, 12], [15, 17], [9, 6], [18, 10], [10], [5], [19, 14], [18, 15], [14], [11], [6], [10, 9], [5, 18], [15], [9, 14], [4, 2], [13, 5], [17, 11], [7, 1], [14, 8], [2, 7], [4, 16], [1], [18], [3, 8], [18, 16], [5], [4, 18], [19], [17], [8, 0], [4, 16], [13, 5], [7, 3], [9, 14], [8], [16, 9], [18, 10], [4, 2], [8, 0], [15, 10], [18, 16], [1, 3], [18, 10], [7, 3], [17, 11], [14, 12], [15, 17], [2, 7], [1, 3], [5, 10], [4, 2], [11, 6], [9, 14], [16, 19], [2], [7], [18, 10], [17, 11], [16, 9], [13], [2, 16], [13, 4], [10, 9], [7, 3], [1], [15, 17], [4, 18], [19, 9], [19], [14, 0], [15, 10], [8], [16], [5, 15], [15], [14], [12], [10, 11], [13, 5], [7, 1], [0], [13], [18], [16, 19], [9, 11], [5, 15], [19], [16], [15], [14, 0], [5, 18], [6], [16, 19], [8, 0], [2, 7], [7, 19], [10, 11], [9, 6], [2, 16], [16, 19], [7, 3], [13, 18], [11, 6], [5, 18], [10, 11], [19, 3], [13, 4], [8], [19, 14], [1, 3], [10, 9], [10], [7, 19], [4, 16], [16], [17, 11], [18, 15], [18], [14], [2, 16], [10, 11], [19, 14], [16, 9], [4, 2], [3, 8], [18, 15], [16, 14], [0], [5], [12], [9, 11], [15, 10], [8, 0], [10, 11], [2], [8, 12], [16, 9], [14], [9, 11], [4, 18], [16, 19], [15, 10], [19], [14, 12], [10, 9], [8], [15], [0], [10, 6], [2, 16], [13, 5], [13, 4], [6], [19, 14], [16, 9], [1, 3], [14], [1], [16, 19], [19], [14, 8], [10, 9], [17, 11], [4, 16], [16], [8, 12], [19, 14], [5, 10], [1, 3], [18, 15], ----End Timer [Execute Mapping]:  1.2500300407409668

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-x-x-x-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-x-cx-cx-cx-x-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-x-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-x-x-x-x-x-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-x-x-x-cx-cx-x-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-cx-cx-x-x-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-x-cx-cx-cx-cx-x-x-cx-cx-x-x-x-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx 
     => total size: [270] (IBM)
 --------------------
 - qubits_num: 20, using gates: [x,cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 450


>> Solved circuit: 
Circuit Info: 
 - circuit: x-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-cx-cx-x-x-x-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-x-cx-x-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-x-cx-cx-cx-cx-x-cx-cx-cx-x-cx-cx-x-x-cx-x-x-x-cx-cx-cx-x-x-x-cx-cx-cx-x-x-x-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-x-cx-cx-x-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-x-cx-cx-x-cx-cx-cx-cx-x-cx-cx-x-x-x-cx-cx-cx-cx-x-cx-cx-cx-x-x-cx-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx 
     => total size: [177] (IBM)
 --------------------
 - qubits_num: 20, using gates: [x,cx]
 - circuit depth: 33 - (small)
 - circuit cycle: 304

Reduced: 
 - size: 93 (34.44%)
 - depth: 12 (26.67%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.10934782028198242

[0], [15], [7, 19], [10, 11], [1, 3], [4, 18], [0], [4], [7, 19], [3, 8], [14, 12], [15, 17], [9, 6], [18, 10], [10], [5], [19, 14], [7, 3], [18, 15], [14], [11], [6], [10, 9], [7, 3], [5, 18], [10], [15], [14, 8], [4, 2], [13, 5], [3, 8], [17, 11], [7, 1], [9, 6], [19], [3, 8], [9, 14], [2, 7], [4, 16], [15, 17], [1], [7], [19], [18], [3, 8], [10, 11], [14, 0], [12], [14, 8], [18, 16], [15, 17], [8], [7], [5], [14, 0], [16, 19], [1, 3], [9, 6], [8], [10, 11], [4, 18], [1, 3], [16, 19], [10], [19], [17], [8, 0], [4, 16], [13, 5], [7, 3], [9, 14], [8], [16, 9], [18, 10], [4, 2], [12], [8, 0], [15, 10], [18, 16], [4, 2], [1, 3], [8, 0], [4, 2], [18, 10], [7, 3], [17, 11], [14, 12], [8, 0], [15, 17], [2, 7], [1, 3], [5, 10], [0], [4, 2], [11, 6], [9, 14], [16, 19], [0], [2], [7], [18, 10], [17, 11], [8, 12], [16, 9], [0], [13], [2, 16], [4, 18], [8, 12], [10, 9], [7, 3], [0], [1], [15, 17], [13, 4], [2, 7], [19, 9], [19], [14, 0], [15, 10], [4, 18], [2, 7], [11, 6], [0], [8], [16], [17], [19, 3], [5, 15], [11, 6], [0], [4], [15], [14], [12], [10, 9], [19, 3], [13, 5], [7, 1], [0], [13], [1], [18], [16, 19], [9, 11], [5, 15], [19], [16], [15], [14, 0], [5, 18], [14], [6], [17], [10, 9], [16, 19], [8, 0], [2, 7], [4], [14, 0], [7, 19], [10, 11], [9, 6], [2, 16], [14, 0], [16, 19], [7, 3], [13, 5], [11, 6], [14], [1], [5, 18], [6, 12], [10, 11], [19, 3], [13, 4], [8], [19, 14], [13, 5], [1, 3], [10, 9], [10], [5], [7, 19], [4, 16], [19], [16], [17, 11], [12, 0], [18, 15], [7, 1], [19], [18], [14], [5], [7, 1], [2, 16], [12, 0], [10, 11], [19, 14], [16, 9], [4, 2], [3, 8], [15, 10], [6, 12], [14], [0], [5], [12], [9, 11], [18, 10], [16, 14], [8, 0], [18, 15], [10, 11], [14], [6], [2], [8, 12], [16, 9], [14], [9, 11], [4, 18], [16, 19], [15, 10], [6], [19], [14, 12], [10, 9], [14], [18], [8], [15], [0], [10, 6], [2, 16], [19, 9], [13, 5], [14], [2], [13, 4], [17, 11], [19, 9], [18, 10], [5, 15], [6], [19, 14], [16, 9], [12, 0], [1, 3], [14], [1], [18, 10], [12, 0], [17, 11], [5, 15], [16, 19], [19], [18], [14, 8], [10, 9], [17, 11], [4, 16], [16], [2], [8, 12], [19, 14], [5, 10], [1, 3], [18, 15], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[2, 8]
[17, 23]
[30, 35]
[35, 44]
[39, 50]
[46, 54]
[33, 57]
[45, 59]
[56, 61]
[55, 62]
[74, 79]
[76, 81]
[79, 82]
[81, 87]
[102, 108]
[115, 121]
[122, 129]
[127, 136]
[159, 164]
[190, 195]
[188, 197]
[236, 242]
[243, 252]
[248, 253]
[241, 254]
[244, 255]
[254, 261]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[0, 6]
[34, 42]
[41, 52]
[51, 58]
[47, 75]
[92, 97]
[97, 104]
[104, 111]
[123, 130]
[130, 139]
[126, 153]
[131, 158]
[141, 170]
[185, 191]
[182, 194]
[194, 207]
[215, 220]
[216, 225]
[229, 238]
[239, 264]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[135, 144, 154]
[167, 171, 178]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 

[111, 118, 123]
[193, 199, 205]
[205, 211, 215]
[238, 246, 250]

------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[107, 114, 120]
[150, 167, 171]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[203, 210, 213]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[0, 6]
[34, 42]
[41, 52]
[51, 58]
[47, 75]
[92, 97]
[97, 104]
[104, 111]
[123, 130]
[130, 139]
[126, 153]
[131, 158]
[141, 170]
[185, 191]
[182, 194]
[194, 207]
[215, 220]
[216, 225]
[229, 238]
[239, 264]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[2, 8]
[17, 23]
[30, 35]
[35, 44]
[39, 50]
[46, 54]
[33, 57]
[45, 59]
[56, 61]
[55, 62]
[74, 79]
[76, 81]
[79, 82]
[81, 87]
[102, 108]
[115, 121]
[122, 129]
[127, 136]
[159, 164]
[190, 195]
[188, 197]
[236, 242]
[243, 252]
[248, 253]
[241, 254]
[244, 255]
[254, 261]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.7031748294830322

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 6] xx => I, Pos: [0, 6] xx => I, Pos: [2, 8] cc => I, Pos: [2, 8] cc => I, Pos: [17, 23] cc => I, Pos: [17, 23] cc => I, Pos: [30, 35] cc => I, Pos: [30, 35] cc => I, Pos: [33, 57] cc => I, Pos: [33, 57] cc => I, Pos: [34, 42] xx => I, Pos: [34, 42] xx => I, Pos: [35, 44] cc => I, Pos: [35, 44] cc => I, Pos: [39, 50] cc => I, Pos: [39, 50] cc => I, Pos: [41, 52] xx => I, Pos: [41, 52] xx => I, Pos: [45, 59] cc => I, Pos: [45, 59] cc => I, Pos: [46, 54] cc => I, Pos: [46, 54] cc => I, Pos: [47, 75] xx => I, Pos: [47, 75] xx => I, Pos: [51, 58] xx => I, Pos: [51, 58] xx => I, Pos: [55, 62] cc => I, Pos: [55, 62] cc => I, Pos: [56, 61] cc => I, Pos: [56, 61] cc => I, Pos: [74, 79] cc => I, Pos: [74, 79] cc => I, Pos: [76, 81] cc => I, Pos: [76, 81] cc => I, Pos: [79, 82] cc => I, Pos: [79, 82] cc => I, Pos: [81, 87] cc => I, Pos: [81, 87] cc => I, Pos: [92, 97] xx => I, Pos: [92, 97] xx => I, Pos: [97, 104] xx => I, Pos: [97, 104] xx => I, Pos: [102, 108] cc => I, Pos: [102, 108] cc => I, Pos: [104, 111] xx => I, Pos: [104, 111] xx => I, Pos: [107, 114, 120] ccc => cc, Pos: [111, 118, 123] xcx => c, Pos: [115, 121] cc => I, Pos: [115, 121] cc => I, Pos: [122, 129] cc => I, Pos: [122, 129] cc => I, Pos: [123, 130] xx => I, Pos: [123, 130] xx => I, Pos: [126, 153] xx => I, Pos: [126, 153] xx => I, Pos: [127, 136] cc => I, Pos: [127, 136] cc => I, Pos: [130, 139] xx => I, Pos: [130, 139] xx => I, Pos: [131, 158] xx => I, Pos: [131, 158] xx => I, Pos: [135, 144, 154] ccc => cc, Pos: [141, 170] xx => I, Pos: [141, 170] xx => I, Pos: [150, 167, 171] ccc => cc, Pos: [159, 164] cc => I, Pos: [159, 164] cc => I, Pos: [167, 171, 178] ccc => cc, Pos: [182, 194] xx => I, Pos: [182, 194] xx => I, Pos: [185, 191] xx => I, Pos: [185, 191] xx => I, Pos: [188, 197] cc => I, Pos: [188, 197] cc => I, Pos: [190, 195] cc => I, Pos: [190, 195] cc => I, Pos: [193, 199, 205] xcx => c, Pos: [194, 207] xx => I, Pos: [194, 207] xx => I, Pos: [203, 210, 213] ccc => cc, Pos: [205, 211, 215] xcx => c, Pos: [215, 220] xx => I, Pos: [215, 220] xx => I, Pos: [216, 225] xx => I, Pos: [216, 225] xx => I, Pos: [229, 238] xx => I, Pos: [229, 238] xx => I, Pos: [236, 242] cc => I, Pos: [236, 242] cc => I, Pos: [238, 246, 250] xcx => c, Pos: [239, 264] xx => I, Pos: [239, 264] xx => I, Pos: [241, 254] cc => I, Pos: [241, 254] cc => I, Pos: [243, 252] cc => I, Pos: [243, 252] cc => I, Pos: [244, 255] cc => I, Pos: [244, 255] cc => I, Pos: [248, 253] cc => I, Pos: [248, 253] cc => I, Pos: [254, 261] cc => I, Pos: [254, 261] cc => I]

--------End Timer [Generate Plans]:  0.10936260223388672

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 6] xx => I,
 Pos: [2, 8] cc => I,
 Pos: [17, 23] cc => I,
 Pos: [30, 35] cc => I,
 Pos: [33, 57] cc => I,
 Pos: [34, 42] xx => I,
 Pos: [39, 50] cc => I,
 Pos: [41, 52] xx => I,
 Pos: [45, 59] cc => I,
 Pos: [46, 54] cc => I,
 Pos: [47, 75] xx => I,
 Pos: [51, 58] xx => I,
 Pos: [55, 62] cc => I,
 Pos: [56, 61] cc => I,
 Pos: [79, 82] cc => I,
 Pos: [76, 81] cc => I,
 Pos: [92, 97] xx => I,
 Pos: [102, 108] cc => I,
 Pos: [104, 111] xx => I,
 Pos: [107, 114, 120] ccc => cc,
 Pos: [115, 121] cc => I,
 Pos: [122, 129] cc => I,
 Pos: [123, 130] xx => I,
 Pos: [126, 153] xx => I,
 Pos: [127, 136] cc => I,
 Pos: [131, 158] xx => I,
 Pos: [135, 144, 154] ccc => cc,
 Pos: [141, 170] xx => I,
 Pos: [167, 171, 178] ccc => cc,
 Pos: [159, 164] cc => I,
 Pos: [194, 207] xx => I,
 Pos: [185, 191] xx => I,
 Pos: [188, 197] cc => I,
 Pos: [190, 195] cc => I,
 Pos: [205, 211, 215] xcx => c,
 Pos: [203, 210, 213] ccc => cc,
 Pos: [216, 225] xx => I,
 Pos: [238, 246, 250] xcx => c,
 Pos: [236, 242] cc => I,
 Pos: [239, 264] xx => I,
 Pos: [241, 254] cc => I,
 Pos: [243, 252] cc => I,
 Pos: [244, 255] cc => I,
 Pos: [248, 253] cc => I]
Change: 44, Saving: 45

Circuit before: xxccccxxccccccxxcccxxxcccxxcccccccxcccccxxxxcccxcccxxxccccxccccxxxcccccxcccxccccccccccccccccxccccxxxccccxxcccccxxccccxcccccxxxxcccxxxxxccccxxxxcccxxxccxxxccccxccccccccccxxcccccxccccxxccxxccccxxxxccccccccccxxxxccccccxxxccxccccxxccxxxxxccccxxcccccxccccxxcccccxxccccxxccccc
---------------
Apply:  Pos: [0, 6] xx => I
Apply:  Pos: [2, 8] cc => I
Apply:  Pos: [17, 23] cc => I
Apply:  Pos: [30, 35] cc => I
Apply:  Pos: [33, 57] cc => I
Apply:  Pos: [34, 42] xx => I
Apply:  Pos: [39, 50] cc => I
Apply:  Pos: [41, 52] xx => I
Apply:  Pos: [45, 59] cc => I
Apply:  Pos: [46, 54] cc => I
Apply:  Pos: [47, 75] xx => I
Apply:  Pos: [51, 58] xx => I
Apply:  Pos: [55, 62] cc => I
Apply:  Pos: [56, 61] cc => I
Apply:  Pos: [79, 82] cc => I
Apply:  Pos: [76, 81] cc => I
Apply:  Pos: [92, 97] xx => I
Apply:  Pos: [102, 108] cc => I
Apply:  Pos: [104, 111] xx => I
Apply:  Pos: [107, 114, 120] ccc => cc
Apply:  Pos: [115, 121] cc => I
Apply:  Pos: [122, 129] cc => I
Apply:  Pos: [123, 130] xx => I
Apply:  Pos: [126, 153] xx => I
Apply:  Pos: [127, 136] cc => I
Apply:  Pos: [131, 158] xx => I
Apply:  Pos: [135, 144, 154] ccc => cc
Apply:  Pos: [141, 170] xx => I
Apply:  Pos: [167, 171, 178] ccc => cc
Apply:  Pos: [159, 164] cc => I
Apply:  Pos: [194, 207] xx => I
Apply:  Pos: [185, 191] xx => I
Apply:  Pos: [188, 197] cc => I
Apply:  Pos: [190, 195] cc => I
Apply:  Pos: [205, 211, 215] xcx => c
Apply:  Pos: [203, 210, 213] ccc => cc
Apply:  Pos: [216, 225] xx => I
Apply:  Pos: [238, 246, 250] xcx => c
Apply:  Pos: [236, 242] cc => I
Apply:  Pos: [239, 264] xx => I
Apply:  Pos: [241, 254] cc => I
Apply:  Pos: [243, 252] cc => I
Apply:  Pos: [244, 255] cc => I
Apply:  Pos: [248, 253] cc => I
---------------
Circuit after: xcccxcccccxxccxxxccxxccccccccxxcccxcxxxcccccxcccccccccccccccccccxxcccxccccxcccxccxxcxxxcccxxxcccxxxccxxcccccccccccxcccccxcccxxccxccxxcccccccccxxccccxccxccccxccxxxxxcccccxccxcxxccccxccccc

--------End Timer [apply mapping plan]:  0.0

[15], [10, 11], [1, 3], [4, 18], [4], [3, 8], [14, 12], [15, 17], [9, 6], [18, 10], [10], [5], [19, 14], [18, 15], [14], [11], [6], [10, 9], [5, 18], [10], [15], [14, 8], [4, 2], [13, 5], [17, 11], [7, 1], [9, 14], [2, 7], [4, 16], [1], [18], [3, 8], [14, 8], [18, 16], [5], [4, 18], [10], [19], [17], [8, 0], [4, 16], [13, 5], [7, 3], [9, 14], [8], [16, 9], [18, 10], [4, 2], [15, 10], [18, 16], [1, 3], [18, 10], [7, 3], [17, 11], [14, 12], [8, 0], [15, 17], [2, 7], [1, 3], [5, 10], [4, 2], [11, 6], [9, 14], [16, 19], [2], [7], [18, 10], [17, 11], [16, 9], [13], [2, 16], [13, 4], [10, 9], [7, 3], [1], [15, 17], [4, 18], [19, 9], [19], [14, 0], [15, 10], [8], [16], [5, 15], [15], [14], [12], [10, 11], [13, 5], [7, 1], [0], [13], [18], [16, 19], [9, 11], [5, 15], [19], [16], [15], [14, 0], [5, 18], [14], [6], [16, 19], [8, 0], [2, 7], [7, 19], [10, 11], [9, 6], [2, 16], [16, 19], [7, 3], [13, 18], [11, 6], [14], [5, 18], [6, 12], [10, 11], [19, 3], [13, 4], [8], [19, 14], [1, 3], [10, 9], [10], [5], [7, 19], [4, 16], [16], [17, 11], [18, 15], [18], [14], [2, 16], [10, 11], [19, 14], [16, 9], [4, 2], [3, 8], [18, 15], [6, 12], [16, 14], [0], [12], [9, 11], [15, 10], [8, 0], [10, 11], [2], [8, 12], [16, 9], [14], [9, 11], [4, 18], [16, 19], [15, 10], [19], [14, 12], [10, 9], [14], [18], [8], [15], [0], [10, 6], [2, 16], [13, 5], [19, 14], [13, 4], [6], [16, 9], [1, 3], [1], [16, 19], [19], [18], [14, 8], [10, 9], [17, 11], [4, 16], [16], [8, 12], [19, 14], [5, 10], [1, 3], [18, 15], ----End Timer [Execute Mapping]:  1.812537431716919

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[116, 140]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[19, 36]
[101, 114]
[160, 175]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[21, 26, 31]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[19, 36]
[101, 114]
[160, 175]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[116, 140]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.2655653953552246

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [19, 36] xx => I, Pos: [19, 36] xx => I, Pos: [21, 26, 31] ccc => cc, Pos: [101, 114] xx => I, Pos: [101, 114] xx => I, Pos: [116, 140] cc => I, Pos: [116, 140] cc => I, Pos: [160, 175] xx => I, Pos: [160, 175] xx => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [19, 36] xx => I,
 Pos: [21, 26, 31] ccc => cc,
 Pos: [101, 114] xx => I,
 Pos: [116, 140] cc => I,
 Pos: [160, 175] xx => I]
Change: 5, Saving: 5

Circuit before: xcccxcccccxxccxxxccxxccccccccxxcccxcxxxcccccxcccccccccccccccccccxxcccxccccxcccxccxxcxxxcccxxxcccxxxccxxcccccccccccxcccccxcccxxccxccxxcccccccccxxccccxccxccccxccxxxxxcccccxccxcxxccccxccccc
---------------
Apply:  Pos: [19, 36] xx => I
Apply:  Pos: [21, 26, 31] ccc => cc
Apply:  Pos: [101, 114] xx => I
Apply:  Pos: [116, 140] cc => I
Apply:  Pos: [160, 175] xx => I
---------------
Circuit after: xcccxcccccxxccxxxccxccccccccxxccxcxxcccccxcccccccccccccccccccxxcccxccccxcccxccxxcxxxcccxxxcccxxxccxcccccccccccccccxcccxxccxccxxccccccccxxccccxccxccccxccxxxxcccccxccxcxccccxccccc

--------End Timer [apply mapping plan]:  0.0

[15], [10, 11], [1, 3], [4, 18], [4], [3, 8], [14, 12], [15, 17], [9, 6], [18, 10], [10], [5], [19, 14], [18, 15], [14], [11], [6], [10, 9], [5, 18], [15], [9, 14], [4, 2], [13, 5], [17, 11], [7, 1], [14, 8], [2, 7], [4, 16], [1], [18], [3, 8], [18, 16], [5], [4, 18], [19], [17], [8, 0], [4, 16], [13, 5], [7, 3], [9, 14], [8], [16, 9], [18, 10], [4, 2], [15, 10], [18, 16], [1, 3], [18, 10], [7, 3], [17, 11], [14, 12], [8, 0], [15, 17], [2, 7], [1, 3], [5, 10], [4, 2], [11, 6], [9, 14], [16, 19], [2], [7], [18, 10], [17, 11], [16, 9], [13], [2, 16], [13, 4], [10, 9], [7, 3], [1], [15, 17], [4, 18], [19, 9], [19], [14, 0], [15, 10], [8], [16], [5, 15], [15], [14], [12], [10, 11], [13, 5], [7, 1], [0], [13], [18], [16, 19], [9, 11], [5, 15], [19], [16], [15], [14, 0], [5, 18], [6], [16, 19], [8, 0], [2, 7], [7, 19], [10, 11], [9, 6], [2, 16], [16, 19], [7, 3], [13, 18], [11, 6], [5, 18], [10, 11], [19, 3], [13, 4], [8], [19, 14], [1, 3], [10, 9], [10], [5], [7, 19], [4, 16], [16], [17, 11], [18, 15], [18], [14], [2, 16], [10, 11], [19, 14], [16, 9], [4, 2], [3, 8], [18, 15], [16, 14], [0], [12], [9, 11], [15, 10], [8, 0], [10, 11], [2], [8, 12], [16, 9], [14], [9, 11], [4, 18], [16, 19], [15, 10], [19], [14, 12], [10, 9], [14], [8], [15], [0], [10, 6], [2, 16], [13, 5], [19, 14], [13, 4], [6], [16, 9], [1, 3], [1], [16, 19], [19], [14, 8], [10, 9], [17, 11], [4, 16], [16], [8, 12], [19, 14], [5, 10], [1, 3], [18, 15], ----End Timer [Execute Mapping]:  1.2655653953552246

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.2344200611114502

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: xcccxcccccxxccxxxccxccccccccxxccxcxxcccccxcccccccccccccccccccxxcccxccccxcccxccxxcxxxcccxxxcccxxxccxcccccccccccccccxcccxxccxccxxccccccccxxccccxccxccccxccxxxxcccccxccxcxccccxccccc
---------------
---------------
Circuit after: xcccxcccccxxccxxxccxccccccccxxccxcxxcccccxcccccccccccccccccccxxcccxccccxcccxccxxcxxxcccxxxcccxxxccxcccccccccccccccxcccxxccxccxxccccccccxxccccxccxccccxccxxxxcccccxccxcxccccxccccc

--------End Timer [apply mapping plan]:  0.0

[15], [10, 11], [1, 3], [4, 18], [4], [3, 8], [14, 12], [15, 17], [9, 6], [18, 10], [10], [5], [19, 14], [18, 15], [14], [11], [6], [10, 9], [5, 18], [15], [9, 14], [4, 2], [13, 5], [17, 11], [7, 1], [14, 8], [2, 7], [4, 16], [1], [18], [3, 8], [18, 16], [5], [4, 18], [19], [17], [8, 0], [4, 16], [13, 5], [7, 3], [9, 14], [8], [16, 9], [18, 10], [4, 2], [15, 10], [18, 16], [1, 3], [18, 10], [7, 3], [17, 11], [14, 12], [8, 0], [15, 17], [2, 7], [1, 3], [5, 10], [4, 2], [11, 6], [9, 14], [16, 19], [2], [7], [18, 10], [17, 11], [16, 9], [13], [2, 16], [13, 4], [10, 9], [7, 3], [1], [15, 17], [4, 18], [19, 9], [19], [14, 0], [15, 10], [8], [16], [5, 15], [15], [14], [12], [10, 11], [13, 5], [7, 1], [0], [13], [18], [16, 19], [9, 11], [5, 15], [19], [16], [15], [14, 0], [5, 18], [6], [16, 19], [8, 0], [2, 7], [7, 19], [10, 11], [9, 6], [2, 16], [16, 19], [7, 3], [13, 18], [11, 6], [5, 18], [10, 11], [19, 3], [13, 4], [8], [19, 14], [1, 3], [10, 9], [10], [5], [7, 19], [4, 16], [16], [17, 11], [18, 15], [18], [14], [2, 16], [10, 11], [19, 14], [16, 9], [4, 2], [3, 8], [18, 15], [16, 14], [0], [12], [9, 11], [15, 10], [8, 0], [10, 11], [2], [8, 12], [16, 9], [14], [9, 11], [4, 18], [16, 19], [15, 10], [19], [14, 12], [10, 9], [14], [8], [15], [0], [10, 6], [2, 16], [13, 5], [19, 14], [13, 4], [6], [16, 9], [1, 3], [1], [16, 19], [19], [14, 8], [10, 9], [17, 11], [4, 16], [16], [8, 12], [19, 14], [5, 10], [1, 3], [18, 15], ----End Timer [Execute Mapping]:  1.2344200611114502

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-x-x-x-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-x-cx-cx-cx-x-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-x-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-x-x-x-x-x-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-x-x-x-cx-cx-x-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-cx-cx-x-x-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-x-cx-cx-cx-cx-x-x-cx-cx-x-x-x-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx 
     => total size: [270] (IBM)
 --------------------
 - qubits_num: 20, using gates: [x,cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 450


>> Solved circuit: 
Circuit Info: 
 - circuit: x-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-cx-cx-x-x-x-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-x-cx-x-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-x-cx-cx-cx-cx-x-cx-cx-cx-x-cx-cx-x-x-cx-x-x-x-cx-cx-cx-x-x-x-cx-cx-cx-x-x-x-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-x-x-cx-cx-x-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-cx-cx-x-cx-cx-cx-cx-x-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-x-cx-cx-x-cx-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx 
     => total size: [177] (IBM)
 --------------------
 - qubits_num: 20, using gates: [x,cx]
 - circuit depth: 33 - (small)
 - circuit cycle: 304

Reduced: 
 - size: 93 (34.44%)
 - depth: 12 (26.67%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.10928559303283691

[0], [15], [7, 19], [10, 11], [1, 3], [4, 18], [0], [4], [7, 19], [3, 8], [14, 12], [15, 17], [9, 6], [18, 10], [10], [5], [19, 14], [7, 3], [18, 15], [14], [11], [6], [10, 9], [7, 3], [5, 18], [10], [15], [14, 8], [4, 2], [13, 5], [3, 8], [17, 11], [7, 1], [9, 6], [19], [3, 8], [9, 14], [2, 7], [4, 16], [15, 17], [1], [7], [19], [18], [3, 8], [10, 11], [14, 0], [12], [14, 8], [18, 16], [15, 17], [8], [7], [5], [14, 0], [16, 19], [1, 3], [9, 6], [8], [10, 11], [4, 18], [1, 3], [16, 19], [10], [19], [17], [8, 0], [4, 16], [13, 5], [7, 3], [9, 14], [8], [16, 9], [18, 10], [4, 2], [12], [8, 0], [15, 10], [18, 16], [4, 2], [1, 3], [8, 0], [4, 2], [18, 10], [7, 3], [17, 11], [14, 12], [8, 0], [15, 17], [2, 7], [1, 3], [5, 10], [0], [4, 2], [11, 6], [9, 14], [16, 19], [0], [2], [7], [18, 10], [17, 11], [8, 12], [16, 9], [0], [13], [2, 16], [4, 18], [8, 12], [10, 9], [7, 3], [0], [1], [15, 17], [13, 4], [2, 7], [19, 9], [19], [14, 0], [15, 10], [4, 18], [2, 7], [11, 6], [0], [8], [16], [17], [19, 3], [5, 15], [11, 6], [0], [4], [15], [14], [12], [10, 9], [19, 3], [13, 5], [7, 1], [0], [13], [1], [18], [16, 19], [9, 11], [5, 15], [19], [16], [15], [14, 0], [5, 18], [14], [6], [17], [10, 9], [16, 19], [8, 0], [2, 7], [4], [14, 0], [7, 19], [10, 11], [9, 6], [2, 16], [14, 0], [16, 19], [7, 3], [13, 5], [11, 6], [14], [1], [5, 18], [6, 12], [10, 11], [19, 3], [13, 4], [8], [19, 14], [13, 5], [1, 3], [10, 9], [10], [5], [7, 19], [4, 16], [19], [16], [17, 11], [12, 0], [18, 15], [7, 1], [19], [18], [14], [5], [7, 1], [2, 16], [12, 0], [10, 11], [19, 14], [16, 9], [4, 2], [3, 8], [15, 10], [6, 12], [14], [0], [5], [12], [9, 11], [18, 10], [16, 14], [8, 0], [18, 15], [10, 11], [14], [6], [2], [8, 12], [16, 9], [14], [9, 11], [4, 18], [16, 19], [15, 10], [6], [19], [14, 12], [10, 9], [14], [18], [8], [15], [0], [10, 6], [2, 16], [19, 9], [13, 5], [14], [2], [13, 4], [17, 11], [19, 9], [18, 10], [5, 15], [6], [19, 14], [16, 9], [12, 0], [1, 3], [14], [1], [18, 10], [12, 0], [17, 11], [5, 15], [16, 19], [19], [18], [14, 8], [10, 9], [17, 11], [4, 16], [16], [2], [8, 12], [19, 14], [5, 10], [1, 3], [18, 15], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[2, 8]
[17, 23]
[30, 35]
[35, 44]
[39, 50]
[46, 54]
[33, 57]
[45, 59]
[56, 61]
[55, 62]
[74, 79]
[76, 81]
[79, 82]
[81, 87]
[102, 108]
[115, 121]
[122, 129]
[127, 136]
[159, 164]
[190, 195]
[188, 197]
[236, 242]
[243, 252]
[248, 253]
[241, 254]
[244, 255]
[254, 261]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[0, 6]
[34, 42]
[41, 52]
[51, 58]
[47, 75]
[92, 97]
[97, 104]
[104, 111]
[123, 130]
[130, 139]
[126, 153]
[131, 158]
[141, 170]
[185, 191]
[182, 194]
[194, 207]
[215, 220]
[216, 225]
[229, 238]
[239, 264]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[135, 144, 154]
[167, 171, 178]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 

[111, 118, 123]
[193, 199, 205]
[205, 211, 215]
[238, 246, 250]

------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[107, 114, 120]
[150, 167, 171]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[203, 210, 213]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[0, 6]
[34, 42]
[41, 52]
[51, 58]
[47, 75]
[92, 97]
[97, 104]
[104, 111]
[123, 130]
[130, 139]
[126, 153]
[131, 158]
[141, 170]
[185, 191]
[182, 194]
[194, 207]
[215, 220]
[216, 225]
[229, 238]
[239, 264]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[2, 8]
[17, 23]
[30, 35]
[35, 44]
[39, 50]
[46, 54]
[33, 57]
[45, 59]
[56, 61]
[55, 62]
[74, 79]
[76, 81]
[79, 82]
[81, 87]
[102, 108]
[115, 121]
[122, 129]
[127, 136]
[159, 164]
[190, 195]
[188, 197]
[236, 242]
[243, 252]
[248, 253]
[241, 254]
[244, 255]
[254, 261]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.6875181198120117

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 6] xx => I, Pos: [0, 6] xx => I, Pos: [2, 8] cc => I, Pos: [2, 8] cc => I, Pos: [17, 23] cc => I, Pos: [17, 23] cc => I, Pos: [30, 35] cc => I, Pos: [30, 35] cc => I, Pos: [33, 57] cc => I, Pos: [33, 57] cc => I, Pos: [34, 42] xx => I, Pos: [34, 42] xx => I, Pos: [35, 44] cc => I, Pos: [35, 44] cc => I, Pos: [39, 50] cc => I, Pos: [39, 50] cc => I, Pos: [41, 52] xx => I, Pos: [41, 52] xx => I, Pos: [45, 59] cc => I, Pos: [45, 59] cc => I, Pos: [46, 54] cc => I, Pos: [46, 54] cc => I, Pos: [47, 75] xx => I, Pos: [47, 75] xx => I, Pos: [51, 58] xx => I, Pos: [51, 58] xx => I, Pos: [55, 62] cc => I, Pos: [55, 62] cc => I, Pos: [56, 61] cc => I, Pos: [56, 61] cc => I, Pos: [74, 79] cc => I, Pos: [74, 79] cc => I, Pos: [76, 81] cc => I, Pos: [76, 81] cc => I, Pos: [79, 82] cc => I, Pos: [79, 82] cc => I, Pos: [81, 87] cc => I, Pos: [81, 87] cc => I, Pos: [92, 97] xx => I, Pos: [92, 97] xx => I, Pos: [97, 104] xx => I, Pos: [97, 104] xx => I, Pos: [102, 108] cc => I, Pos: [102, 108] cc => I, Pos: [104, 111] xx => I, Pos: [104, 111] xx => I, Pos: [107, 114, 120] ccc => cc, Pos: [111, 118, 123] xcx => c, Pos: [115, 121] cc => I, Pos: [115, 121] cc => I, Pos: [122, 129] cc => I, Pos: [122, 129] cc => I, Pos: [123, 130] xx => I, Pos: [123, 130] xx => I, Pos: [126, 153] xx => I, Pos: [126, 153] xx => I, Pos: [127, 136] cc => I, Pos: [127, 136] cc => I, Pos: [130, 139] xx => I, Pos: [130, 139] xx => I, Pos: [131, 158] xx => I, Pos: [131, 158] xx => I, Pos: [135, 144, 154] ccc => cc, Pos: [141, 170] xx => I, Pos: [141, 170] xx => I, Pos: [150, 167, 171] ccc => cc, Pos: [159, 164] cc => I, Pos: [159, 164] cc => I, Pos: [167, 171, 178] ccc => cc, Pos: [182, 194] xx => I, Pos: [182, 194] xx => I, Pos: [185, 191] xx => I, Pos: [185, 191] xx => I, Pos: [188, 197] cc => I, Pos: [188, 197] cc => I, Pos: [190, 195] cc => I, Pos: [190, 195] cc => I, Pos: [193, 199, 205] xcx => c, Pos: [194, 207] xx => I, Pos: [194, 207] xx => I, Pos: [203, 210, 213] ccc => cc, Pos: [205, 211, 215] xcx => c, Pos: [215, 220] xx => I, Pos: [215, 220] xx => I, Pos: [216, 225] xx => I, Pos: [216, 225] xx => I, Pos: [229, 238] xx => I, Pos: [229, 238] xx => I, Pos: [236, 242] cc => I, Pos: [236, 242] cc => I, Pos: [238, 246, 250] xcx => c, Pos: [239, 264] xx => I, Pos: [239, 264] xx => I, Pos: [241, 254] cc => I, Pos: [241, 254] cc => I, Pos: [243, 252] cc => I, Pos: [243, 252] cc => I, Pos: [244, 255] cc => I, Pos: [244, 255] cc => I, Pos: [248, 253] cc => I, Pos: [248, 253] cc => I, Pos: [254, 261] cc => I, Pos: [254, 261] cc => I]

--------End Timer [Generate Plans]:  0.10937786102294922

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 6] xx => I,
 Pos: [2, 8] cc => I,
 Pos: [17, 23] cc => I,
 Pos: [35, 44] cc => I,
 Pos: [33, 57] cc => I,
 Pos: [34, 42] xx => I,
 Pos: [39, 50] cc => I,
 Pos: [41, 52] xx => I,
 Pos: [45, 59] cc => I,
 Pos: [46, 54] cc => I,
 Pos: [47, 75] xx => I,
 Pos: [51, 58] xx => I,
 Pos: [55, 62] cc => I,
 Pos: [56, 61] cc => I,
 Pos: [74, 79] cc => I,
 Pos: [81, 87] cc => I,
 Pos: [97, 104] xx => I,
 Pos: [102, 108] cc => I,
 Pos: [107, 114, 120] ccc => cc,
 Pos: [123, 130] xx => I,
 Pos: [115, 121] cc => I,
 Pos: [122, 129] cc => I,
 Pos: [126, 153] xx => I,
 Pos: [127, 136] cc => I,
 Pos: [131, 158] xx => I,
 Pos: [135, 144, 154] ccc => cc,
 Pos: [141, 170] xx => I,
 Pos: [167, 171, 178] ccc => cc,
 Pos: [159, 164] cc => I,
 Pos: [194, 207] xx => I,
 Pos: [185, 191] xx => I,
 Pos: [188, 197] cc => I,
 Pos: [190, 195] cc => I,
 Pos: [193, 199, 205] xcx => c,
 Pos: [203, 210, 213] ccc => cc,
 Pos: [215, 220] xx => I,
 Pos: [216, 225] xx => I,
 Pos: [229, 238] xx => I,
 Pos: [236, 242] cc => I,
 Pos: [239, 264] xx => I,
 Pos: [241, 254] cc => I,
 Pos: [243, 252] cc => I,
 Pos: [244, 255] cc => I,
 Pos: [248, 253] cc => I]
Change: 44, Saving: 45

Circuit before: xxccccxxccccccxxcccxxxcccxxcccccccxcccccxxxxcccxcccxxxccccxccccxxxcccccxcccxccccccccccccccccxccccxxxccccxxcccccxxccccxcccccxxxxcccxxxxxccccxxxxcccxxxccxxxccccxccccccccccxxcccccxccccxxccxxccccxxxxccccccccccxxxxccccccxxxccxccccxxccxxxxxccccxxcccccxccccxxcccccxxccccxxccccc
---------------
Apply:  Pos: [0, 6] xx => I
Apply:  Pos: [2, 8] cc => I
Apply:  Pos: [17, 23] cc => I
Apply:  Pos: [35, 44] cc => I
Apply:  Pos: [33, 57] cc => I
Apply:  Pos: [34, 42] xx => I
Apply:  Pos: [39, 50] cc => I
Apply:  Pos: [41, 52] xx => I
Apply:  Pos: [45, 59] cc => I
Apply:  Pos: [46, 54] cc => I
Apply:  Pos: [47, 75] xx => I
Apply:  Pos: [51, 58] xx => I
Apply:  Pos: [55, 62] cc => I
Apply:  Pos: [56, 61] cc => I
Apply:  Pos: [74, 79] cc => I
Apply:  Pos: [81, 87] cc => I
Apply:  Pos: [97, 104] xx => I
Apply:  Pos: [102, 108] cc => I
Apply:  Pos: [107, 114, 120] ccc => cc
Apply:  Pos: [123, 130] xx => I
Apply:  Pos: [115, 121] cc => I
Apply:  Pos: [122, 129] cc => I
Apply:  Pos: [126, 153] xx => I
Apply:  Pos: [127, 136] cc => I
Apply:  Pos: [131, 158] xx => I
Apply:  Pos: [135, 144, 154] ccc => cc
Apply:  Pos: [141, 170] xx => I
Apply:  Pos: [167, 171, 178] ccc => cc
Apply:  Pos: [159, 164] cc => I
Apply:  Pos: [194, 207] xx => I
Apply:  Pos: [185, 191] xx => I
Apply:  Pos: [188, 197] cc => I
Apply:  Pos: [190, 195] cc => I
Apply:  Pos: [193, 199, 205] xcx => c
Apply:  Pos: [203, 210, 213] ccc => cc
Apply:  Pos: [215, 220] xx => I
Apply:  Pos: [216, 225] xx => I
Apply:  Pos: [229, 238] xx => I
Apply:  Pos: [236, 242] cc => I
Apply:  Pos: [239, 264] xx => I
Apply:  Pos: [241, 254] cc => I
Apply:  Pos: [243, 252] cc => I
Apply:  Pos: [244, 255] cc => I
Apply:  Pos: [248, 253] cc => I
---------------
Circuit after: xcccxcccccxxccxxxccxxcccccccccxxccxcxxxcccccxcccccccccccccccxccccxxcccxccccxxcccxccxxcxxxcccxxxcccxxxccxxcccccccccccxcccccxcccxxccxccxccccccccxxcccccxccccccxccxxxxccccxcccxxcxxccccxccccc

--------End Timer [apply mapping plan]:  0.0

[15], [10, 11], [1, 3], [4, 18], [4], [3, 8], [14, 12], [15, 17], [9, 6], [18, 10], [10], [5], [19, 14], [18, 15], [14], [11], [6], [10, 9], [5, 18], [10], [15], [14, 8], [4, 2], [13, 5], [3, 8], [17, 11], [7, 1], [9, 14], [2, 7], [4, 16], [1], [18], [14, 8], [18, 16], [5], [4, 18], [10], [19], [17], [8, 0], [4, 16], [13, 5], [7, 3], [9, 14], [8], [16, 9], [18, 10], [8, 0], [15, 10], [18, 16], [1, 3], [4, 2], [18, 10], [7, 3], [17, 11], [14, 12], [15, 17], [2, 7], [1, 3], [5, 10], [0], [4, 2], [11, 6], [9, 14], [16, 19], [2], [7], [18, 10], [17, 11], [16, 9], [13], [2, 16], [13, 4], [10, 9], [7, 3], [0], [1], [15, 17], [4, 18], [19, 9], [19], [14, 0], [15, 10], [8], [16], [5, 15], [15], [14], [12], [10, 11], [13, 5], [7, 1], [0], [13], [18], [16, 19], [9, 11], [5, 15], [19], [16], [15], [14, 0], [5, 18], [14], [6], [16, 19], [8, 0], [2, 7], [7, 19], [10, 11], [9, 6], [2, 16], [16, 19], [7, 3], [13, 18], [11, 6], [14], [5, 18], [6, 12], [10, 11], [19, 3], [13, 4], [8], [19, 14], [1, 3], [10, 9], [10], [5], [7, 19], [4, 16], [16], [17, 11], [18, 15], [18], [19, 14], [2, 16], [10, 11], [16, 9], [4, 2], [3, 8], [18, 15], [6, 12], [0], [12], [9, 11], [15, 10], [16, 14], [8, 0], [10, 11], [2], [8, 12], [16, 9], [9, 11], [4, 18], [16, 19], [15, 10], [19], [14, 12], [10, 9], [18], [8], [15], [0], [10, 6], [2, 16], [13, 5], [13, 4], [6], [19, 14], [16, 9], [1, 3], [14], [1], [16, 19], [19], [18], [14, 8], [10, 9], [17, 11], [4, 16], [16], [8, 12], [19, 14], [5, 10], [1, 3], [18, 15], ----End Timer [Execute Mapping]:  1.796895980834961

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[118, 141]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[19, 36]
[60, 75]
[103, 116]
[159, 175]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[123, 128, 134]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[19, 36]
[60, 75]
[103, 116]
[159, 175]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[118, 141]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.2655460834503174

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [19, 36] xx => I, Pos: [19, 36] xx => I, Pos: [60, 75] xx => I, Pos: [60, 75] xx => I, Pos: [103, 116] xx => I, Pos: [103, 116] xx => I, Pos: [118, 141] cc => I, Pos: [118, 141] cc => I, Pos: [123, 128, 134] ccc => cc, Pos: [159, 175] xx => I, Pos: [159, 175] xx => I]

--------End Timer [Generate Plans]:  0.01562356948852539

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [19, 36] xx => I,
 Pos: [60, 75] xx => I,
 Pos: [103, 116] xx => I,
 Pos: [118, 141] cc => I,
 Pos: [123, 128, 134] ccc => cc,
 Pos: [159, 175] xx => I]
Change: 6, Saving: 6

Circuit before: xcccxcccccxxccxxxccxxcccccccccxxccxcxxxcccccxcccccccccccccccxccccxxcccxccccxxcccxccxxcxxxcccxxxcccxxxccxxcccccccccccxcccccxcccxxccxccxccccccccxxcccccxccccccxccxxxxccccxcccxxcxxccccxccccc
---------------
Apply:  Pos: [19, 36] xx => I
Apply:  Pos: [60, 75] xx => I
Apply:  Pos: [103, 116] xx => I
Apply:  Pos: [118, 141] cc => I
Apply:  Pos: [123, 128, 134] ccc => cc
Apply:  Pos: [159, 175] xx => I
---------------
Circuit after: xcccxcccccxxccxxxccxcccccccccxxccxcxxcccccxcccccccccccccccccccxxcccxccccxcccxccxxcxxxcccxxxcccxxxccxcccccccccccccccxcccxxccxccxccccccxxcccccxccccccxccxxxccccxcccxxcxccccxccccc

--------End Timer [apply mapping plan]:  0.0

[15], [10, 11], [1, 3], [4, 18], [4], [3, 8], [14, 12], [15, 17], [9, 6], [18, 10], [10], [5], [19, 14], [18, 15], [14], [11], [6], [10, 9], [5, 18], [15], [14, 8], [4, 2], [13, 5], [3, 8], [17, 11], [7, 1], [9, 14], [2, 7], [4, 16], [1], [18], [14, 8], [18, 16], [5], [4, 18], [19], [17], [8, 0], [4, 16], [13, 5], [7, 3], [9, 14], [8], [16, 9], [18, 10], [8, 0], [15, 10], [18, 16], [1, 3], [4, 2], [18, 10], [7, 3], [17, 11], [14, 12], [15, 17], [2, 7], [1, 3], [5, 10], [4, 2], [11, 6], [9, 14], [16, 19], [2], [7], [18, 10], [17, 11], [16, 9], [13], [2, 16], [13, 4], [10, 9], [7, 3], [1], [15, 17], [4, 18], [19, 9], [19], [14, 0], [15, 10], [8], [16], [5, 15], [15], [14], [12], [10, 11], [13, 5], [7, 1], [0], [13], [18], [16, 19], [9, 11], [5, 15], [19], [16], [15], [14, 0], [5, 18], [6], [16, 19], [8, 0], [2, 7], [7, 19], [10, 11], [9, 6], [2, 16], [16, 19], [7, 3], [13, 18], [11, 6], [5, 18], [10, 11], [19, 3], [13, 4], [8], [7, 19], [1, 3], [10, 9], [10], [5], [19, 14], [4, 16], [16], [17, 11], [18, 15], [18], [2, 16], [10, 11], [16, 9], [4, 2], [3, 8], [18, 15], [0], [12], [9, 11], [15, 10], [16, 14], [8, 0], [10, 11], [2], [8, 12], [16, 9], [9, 11], [4, 18], [16, 19], [15, 10], [19], [14, 12], [10, 9], [8], [15], [0], [10, 6], [2, 16], [13, 4], [13, 5], [6], [19, 14], [16, 9], [1, 3], [14], [1], [16, 19], [19], [14, 8], [10, 9], [17, 11], [4, 16], [16], [8, 12], [19, 14], [5, 10], [1, 3], [18, 15], ----End Timer [Execute Mapping]:  1.2811696529388428

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[84, 134]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[84, 134]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.265355110168457

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [84, 134] xx => I, Pos: [84, 134] xx => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [84, 134] xx => I]
Change: 1, Saving: 1

Circuit before: xcccxcccccxxccxxxccxcccccccccxxccxcxxcccccxcccccccccccccccccccxxcccxccccxcccxccxxcxxxcccxxxcccxxxccxcccccccccccccccxcccxxccxccxccccccxxcccccxccccccxccxxxccccxcccxxcxccccxccccc
---------------
Apply:  Pos: [84, 134] xx => I
---------------
Circuit after: xcccxcccccxxccxxxccxcccccccccxxccxcxxcccccxcccccccccccccccccccxxcccxccccxcccxccxxcxxcccxxxcccxxxccxcccccccccccccccxcccxxccxccxccccccxcccccxccccccxccxxxccccxcccxxcxccccxccccc

--------End Timer [apply mapping plan]:  0.0

[15], [10, 11], [1, 3], [4, 18], [4], [3, 8], [14, 12], [15, 17], [9, 6], [18, 10], [10], [5], [19, 14], [18, 15], [14], [11], [6], [10, 9], [5, 18], [15], [14, 8], [4, 2], [13, 5], [3, 8], [17, 11], [7, 1], [9, 14], [2, 7], [4, 16], [1], [18], [14, 8], [18, 16], [5], [4, 18], [19], [17], [8, 0], [4, 16], [13, 5], [7, 3], [9, 14], [8], [16, 9], [18, 10], [8, 0], [15, 10], [18, 16], [1, 3], [4, 2], [18, 10], [7, 3], [17, 11], [14, 12], [15, 17], [2, 7], [1, 3], [5, 10], [4, 2], [11, 6], [9, 14], [16, 19], [2], [7], [18, 10], [17, 11], [16, 9], [13], [2, 16], [13, 4], [10, 9], [7, 3], [1], [15, 17], [4, 18], [19, 9], [19], [14, 0], [15, 10], [8], [16], [5, 15], [15], [14], [10, 11], [13, 5], [7, 1], [0], [13], [18], [16, 19], [9, 11], [5, 15], [19], [16], [15], [14, 0], [5, 18], [6], [16, 19], [8, 0], [2, 7], [7, 19], [10, 11], [9, 6], [2, 16], [16, 19], [7, 3], [13, 18], [11, 6], [5, 18], [10, 11], [19, 3], [13, 4], [8], [7, 19], [1, 3], [10, 9], [10], [5], [19, 14], [4, 16], [16], [17, 11], [18, 15], [18], [2, 16], [10, 11], [16, 9], [4, 2], [3, 8], [18, 15], [0], [9, 11], [15, 10], [16, 14], [8, 0], [10, 11], [2], [8, 12], [16, 9], [9, 11], [4, 18], [16, 19], [15, 10], [19], [14, 12], [10, 9], [8], [15], [0], [10, 6], [2, 16], [13, 5], [13, 4], [6], [19, 14], [16, 9], [1, 3], [14], [1], [16, 19], [19], [14, 8], [10, 9], [17, 11], [4, 16], [16], [8, 12], [19, 14], [5, 10], [1, 3], [18, 15], ----End Timer [Execute Mapping]:  1.265355110168457

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.2812411785125732

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: xcccxcccccxxccxxxccxcccccccccxxccxcxxcccccxcccccccccccccccccccxxcccxccccxcccxccxxcxxcccxxxcccxxxccxcccccccccccccccxcccxxccxccxccccccxcccccxccccccxccxxxccccxcccxxcxccccxccccc
---------------
---------------
Circuit after: xcccxcccccxxccxxxccxcccccccccxxccxcxxcccccxcccccccccccccccccccxxcccxccccxcccxccxxcxxcccxxxcccxxxccxcccccccccccccccxcccxxccxccxccccccxcccccxccccccxccxxxccccxcccxxcxccccxccccc

--------End Timer [apply mapping plan]:  0.0

[15], [10, 11], [1, 3], [4, 18], [4], [3, 8], [14, 12], [15, 17], [9, 6], [18, 10], [10], [5], [19, 14], [18, 15], [14], [11], [6], [10, 9], [5, 18], [15], [14, 8], [4, 2], [13, 5], [3, 8], [17, 11], [7, 1], [9, 14], [2, 7], [4, 16], [1], [18], [14, 8], [18, 16], [5], [4, 18], [19], [17], [8, 0], [4, 16], [13, 5], [7, 3], [9, 14], [8], [16, 9], [18, 10], [8, 0], [15, 10], [18, 16], [1, 3], [4, 2], [18, 10], [7, 3], [17, 11], [14, 12], [15, 17], [2, 7], [1, 3], [5, 10], [4, 2], [11, 6], [9, 14], [16, 19], [2], [7], [18, 10], [17, 11], [16, 9], [13], [2, 16], [13, 4], [10, 9], [7, 3], [1], [15, 17], [4, 18], [19, 9], [19], [14, 0], [15, 10], [8], [16], [5, 15], [15], [14], [10, 11], [13, 5], [7, 1], [0], [13], [18], [16, 19], [9, 11], [5, 15], [19], [16], [15], [14, 0], [5, 18], [6], [16, 19], [8, 0], [2, 7], [7, 19], [10, 11], [9, 6], [2, 16], [16, 19], [7, 3], [13, 18], [11, 6], [5, 18], [10, 11], [19, 3], [13, 4], [8], [7, 19], [1, 3], [10, 9], [10], [5], [19, 14], [4, 16], [16], [17, 11], [18, 15], [18], [2, 16], [10, 11], [16, 9], [4, 2], [3, 8], [18, 15], [0], [9, 11], [15, 10], [16, 14], [8, 0], [10, 11], [2], [8, 12], [16, 9], [9, 11], [4, 18], [16, 19], [15, 10], [19], [14, 12], [10, 9], [8], [15], [0], [10, 6], [2, 16], [13, 4], [13, 5], [6], [19, 14], [16, 9], [1, 3], [14], [1], [16, 19], [19], [14, 8], [10, 9], [17, 11], [4, 16], [16], [8, 12], [19, 14], [5, 10], [1, 3], [18, 15], ----End Timer [Execute Mapping]:  1.2812411785125732

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-x-x-x-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-x-cx-cx-cx-x-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-x-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-x-x-x-x-x-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-x-x-x-cx-cx-x-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-cx-cx-x-x-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-x-cx-cx-cx-cx-x-x-cx-cx-x-x-x-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx 
     => total size: [270] (IBM)
 --------------------
 - qubits_num: 20, using gates: [x,cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 450


>> Solved circuit: 
Circuit Info: 
 - circuit: x-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-cx-cx-x-x-x-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-x-cx-x-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-x-cx-cx-cx-cx-x-cx-cx-cx-x-cx-cx-x-x-cx-x-x-cx-cx-cx-x-x-x-cx-cx-cx-x-x-x-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-x-x-cx-cx-x-cx-cx-x-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-cx-cx-x-x-x-cx-cx-cx-cx-x-cx-cx-cx-x-x-cx-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx 
     => total size: [173] (IBM)
 --------------------
 - qubits_num: 20, using gates: [x,cx]
 - circuit depth: 33 - (small)
 - circuit cycle: 300

Reduced: 
 - size: 97 (35.93%)
 - depth: 12 (26.67%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.10968184471130371

[0], [15], [7, 19], [10, 11], [1, 3], [4, 18], [0], [4], [7, 19], [3, 8], [14, 12], [15, 17], [9, 6], [18, 10], [10], [5], [19, 14], [7, 3], [18, 15], [14], [11], [6], [10, 9], [7, 3], [5, 18], [10], [15], [14, 8], [4, 2], [13, 5], [3, 8], [17, 11], [7, 1], [9, 6], [19], [3, 8], [9, 14], [2, 7], [4, 16], [15, 17], [1], [7], [19], [18], [3, 8], [10, 11], [14, 0], [12], [14, 8], [18, 16], [15, 17], [8], [7], [5], [14, 0], [16, 19], [1, 3], [9, 6], [8], [10, 11], [4, 18], [1, 3], [16, 19], [10], [19], [17], [8, 0], [4, 16], [13, 5], [7, 3], [9, 14], [8], [16, 9], [18, 10], [4, 2], [12], [8, 0], [15, 10], [18, 16], [4, 2], [1, 3], [8, 0], [4, 2], [18, 10], [7, 3], [17, 11], [14, 12], [8, 0], [15, 17], [2, 7], [1, 3], [5, 10], [0], [4, 2], [11, 6], [9, 14], [16, 19], [0], [2], [7], [18, 10], [17, 11], [8, 12], [16, 9], [0], [13], [2, 16], [4, 18], [8, 12], [10, 9], [7, 3], [0], [1], [15, 17], [13, 4], [2, 7], [19, 9], [19], [14, 0], [15, 10], [4, 18], [2, 7], [11, 6], [0], [8], [16], [17], [19, 3], [5, 15], [11, 6], [0], [4], [15], [14], [12], [10, 9], [19, 3], [13, 5], [7, 1], [0], [13], [1], [18], [16, 19], [9, 11], [5, 15], [19], [16], [15], [14, 0], [5, 18], [14], [6], [17], [10, 9], [16, 19], [8, 0], [2, 7], [4], [14, 0], [7, 19], [10, 11], [9, 6], [2, 16], [14, 0], [16, 19], [7, 3], [13, 5], [11, 6], [14], [1], [5, 18], [6, 12], [10, 11], [19, 3], [13, 4], [8], [19, 14], [13, 5], [1, 3], [10, 9], [10], [5], [7, 19], [4, 16], [19], [16], [17, 11], [12, 0], [18, 15], [7, 1], [19], [18], [14], [5], [7, 1], [2, 16], [12, 0], [10, 11], [19, 14], [16, 9], [4, 2], [3, 8], [15, 10], [6, 12], [14], [0], [5], [12], [9, 11], [18, 10], [16, 14], [8, 0], [18, 15], [10, 11], [14], [6], [2], [8, 12], [16, 9], [14], [9, 11], [4, 18], [16, 19], [15, 10], [6], [19], [14, 12], [10, 9], [14], [18], [8], [15], [0], [10, 6], [2, 16], [19, 9], [13, 5], [14], [2], [13, 4], [17, 11], [19, 9], [18, 10], [5, 15], [6], [19, 14], [16, 9], [12, 0], [1, 3], [14], [1], [18, 10], [12, 0], [17, 11], [5, 15], [16, 19], [19], [18], [14, 8], [10, 9], [17, 11], [4, 16], [16], [2], [8, 12], [19, 14], [5, 10], [1, 3], [18, 15], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[2, 8]
[17, 23]
[30, 35]
[35, 44]
[39, 50]
[46, 54]
[33, 57]
[45, 59]
[56, 61]
[55, 62]
[74, 79]
[76, 81]
[79, 82]
[81, 87]
[102, 108]
[115, 121]
[122, 129]
[127, 136]
[159, 164]
[190, 195]
[188, 197]
[236, 242]
[243, 252]
[248, 253]
[241, 254]
[244, 255]
[254, 261]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[0, 6]
[34, 42]
[41, 52]
[51, 58]
[47, 75]
[92, 97]
[97, 104]
[104, 111]
[123, 130]
[130, 139]
[126, 153]
[131, 158]
[141, 170]
[185, 191]
[182, 194]
[194, 207]
[215, 220]
[216, 225]
[229, 238]
[239, 264]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[135, 144, 154]
[167, 171, 178]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 

[111, 118, 123]
[193, 199, 205]
[205, 211, 215]
[238, 246, 250]

------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[107, 114, 120]
[150, 167, 171]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[203, 210, 213]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[0, 6]
[34, 42]
[41, 52]
[51, 58]
[47, 75]
[92, 97]
[97, 104]
[104, 111]
[123, 130]
[130, 139]
[126, 153]
[131, 158]
[141, 170]
[185, 191]
[182, 194]
[194, 207]
[215, 220]
[216, 225]
[229, 238]
[239, 264]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[2, 8]
[17, 23]
[30, 35]
[35, 44]
[39, 50]
[46, 54]
[33, 57]
[45, 59]
[56, 61]
[55, 62]
[74, 79]
[76, 81]
[79, 82]
[81, 87]
[102, 108]
[115, 121]
[122, 129]
[127, 136]
[159, 164]
[190, 195]
[188, 197]
[236, 242]
[243, 252]
[248, 253]
[241, 254]
[244, 255]
[254, 261]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.6874096393585205

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 6] xx => I, Pos: [0, 6] xx => I, Pos: [2, 8] cc => I, Pos: [2, 8] cc => I, Pos: [17, 23] cc => I, Pos: [17, 23] cc => I, Pos: [30, 35] cc => I, Pos: [30, 35] cc => I, Pos: [33, 57] cc => I, Pos: [33, 57] cc => I, Pos: [34, 42] xx => I, Pos: [34, 42] xx => I, Pos: [35, 44] cc => I, Pos: [35, 44] cc => I, Pos: [39, 50] cc => I, Pos: [39, 50] cc => I, Pos: [41, 52] xx => I, Pos: [41, 52] xx => I, Pos: [45, 59] cc => I, Pos: [45, 59] cc => I, Pos: [46, 54] cc => I, Pos: [46, 54] cc => I, Pos: [47, 75] xx => I, Pos: [47, 75] xx => I, Pos: [51, 58] xx => I, Pos: [51, 58] xx => I, Pos: [55, 62] cc => I, Pos: [55, 62] cc => I, Pos: [56, 61] cc => I, Pos: [56, 61] cc => I, Pos: [74, 79] cc => I, Pos: [74, 79] cc => I, Pos: [76, 81] cc => I, Pos: [76, 81] cc => I, Pos: [79, 82] cc => I, Pos: [79, 82] cc => I, Pos: [81, 87] cc => I, Pos: [81, 87] cc => I, Pos: [92, 97] xx => I, Pos: [92, 97] xx => I, Pos: [97, 104] xx => I, Pos: [97, 104] xx => I, Pos: [102, 108] cc => I, Pos: [102, 108] cc => I, Pos: [104, 111] xx => I, Pos: [104, 111] xx => I, Pos: [107, 114, 120] ccc => cc, Pos: [111, 118, 123] xcx => c, Pos: [115, 121] cc => I, Pos: [115, 121] cc => I, Pos: [122, 129] cc => I, Pos: [122, 129] cc => I, Pos: [123, 130] xx => I, Pos: [123, 130] xx => I, Pos: [126, 153] xx => I, Pos: [126, 153] xx => I, Pos: [127, 136] cc => I, Pos: [127, 136] cc => I, Pos: [130, 139] xx => I, Pos: [130, 139] xx => I, Pos: [131, 158] xx => I, Pos: [131, 158] xx => I, Pos: [135, 144, 154] ccc => cc, Pos: [141, 170] xx => I, Pos: [141, 170] xx => I, Pos: [150, 167, 171] ccc => cc, Pos: [159, 164] cc => I, Pos: [159, 164] cc => I, Pos: [167, 171, 178] ccc => cc, Pos: [182, 194] xx => I, Pos: [182, 194] xx => I, Pos: [185, 191] xx => I, Pos: [185, 191] xx => I, Pos: [188, 197] cc => I, Pos: [188, 197] cc => I, Pos: [190, 195] cc => I, Pos: [190, 195] cc => I, Pos: [193, 199, 205] xcx => c, Pos: [194, 207] xx => I, Pos: [194, 207] xx => I, Pos: [203, 210, 213] ccc => cc, Pos: [205, 211, 215] xcx => c, Pos: [215, 220] xx => I, Pos: [215, 220] xx => I, Pos: [216, 225] xx => I, Pos: [216, 225] xx => I, Pos: [229, 238] xx => I, Pos: [229, 238] xx => I, Pos: [236, 242] cc => I, Pos: [236, 242] cc => I, Pos: [238, 246, 250] xcx => c, Pos: [239, 264] xx => I, Pos: [239, 264] xx => I, Pos: [241, 254] cc => I, Pos: [241, 254] cc => I, Pos: [243, 252] cc => I, Pos: [243, 252] cc => I, Pos: [244, 255] cc => I, Pos: [244, 255] cc => I, Pos: [248, 253] cc => I, Pos: [248, 253] cc => I, Pos: [254, 261] cc => I, Pos: [254, 261] cc => I]

--------End Timer [Generate Plans]:  0.10927677154541016

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 6] xx => I,
 Pos: [2, 8] cc => I,
 Pos: [17, 23] cc => I,
 Pos: [30, 35] cc => I,
 Pos: [33, 57] cc => I,
 Pos: [34, 42] xx => I,
 Pos: [39, 50] cc => I,
 Pos: [41, 52] xx => I,
 Pos: [45, 59] cc => I,
 Pos: [46, 54] cc => I,
 Pos: [47, 75] xx => I,
 Pos: [51, 58] xx => I,
 Pos: [55, 62] cc => I,
 Pos: [56, 61] cc => I,
 Pos: [79, 82] cc => I,
 Pos: [76, 81] cc => I,
 Pos: [97, 104] xx => I,
 Pos: [102, 108] cc => I,
 Pos: [107, 114, 120] ccc => cc,
 Pos: [111, 118, 123] xcx => c,
 Pos: [115, 121] cc => I,
 Pos: [122, 129] cc => I,
 Pos: [126, 153] xx => I,
 Pos: [127, 136] cc => I,
 Pos: [130, 139] xx => I,
 Pos: [131, 158] xx => I,
 Pos: [135, 144, 154] ccc => cc,
 Pos: [141, 170] xx => I,
 Pos: [150, 167, 171] ccc => cc,
 Pos: [159, 164] cc => I,
 Pos: [194, 207] xx => I,
 Pos: [185, 191] xx => I,
 Pos: [188, 197] cc => I,
 Pos: [190, 195] cc => I,
 Pos: [193, 199, 205] xcx => c,
 Pos: [203, 210, 213] ccc => cc,
 Pos: [215, 220] xx => I,
 Pos: [216, 225] xx => I,
 Pos: [238, 246, 250] xcx => c,
 Pos: [236, 242] cc => I,
 Pos: [239, 264] xx => I,
 Pos: [241, 254] cc => I,
 Pos: [243, 252] cc => I,
 Pos: [244, 255] cc => I,
 Pos: [248, 253] cc => I]
Change: 45, Saving: 47

Circuit before: xxccccxxccccccxxcccxxxcccxxcccccccxcccccxxxxcccxcccxxxccccxccccxxxcccccxcccxccccccccccccccccxccccxxxccccxxcccccxxccccxcccccxxxxcccxxxxxccccxxxxcccxxxccxxxccccxccccccccccxxcccccxccccxxccxxccccxxxxccccccccccxxxxccccccxxxccxccccxxccxxxxxccccxxcccccxccccxxcccccxxccccxxccccc
---------------
Apply:  Pos: [0, 6] xx => I
Apply:  Pos: [2, 8] cc => I
Apply:  Pos: [17, 23] cc => I
Apply:  Pos: [30, 35] cc => I
Apply:  Pos: [33, 57] cc => I
Apply:  Pos: [34, 42] xx => I
Apply:  Pos: [39, 50] cc => I
Apply:  Pos: [41, 52] xx => I
Apply:  Pos: [45, 59] cc => I
Apply:  Pos: [46, 54] cc => I
Apply:  Pos: [47, 75] xx => I
Apply:  Pos: [51, 58] xx => I
Apply:  Pos: [55, 62] cc => I
Apply:  Pos: [56, 61] cc => I
Apply:  Pos: [79, 82] cc => I
Apply:  Pos: [76, 81] cc => I
Apply:  Pos: [97, 104] xx => I
Apply:  Pos: [102, 108] cc => I
Apply:  Pos: [107, 114, 120] ccc => cc
Apply:  Pos: [111, 118, 123] xcx => c
Apply:  Pos: [115, 121] cc => I
Apply:  Pos: [122, 129] cc => I
Apply:  Pos: [126, 153] xx => I
Apply:  Pos: [127, 136] cc => I
Apply:  Pos: [130, 139] xx => I
Apply:  Pos: [131, 158] xx => I
Apply:  Pos: [135, 144, 154] ccc => cc
Apply:  Pos: [141, 170] xx => I
Apply:  Pos: [150, 167, 171] ccc => cc
Apply:  Pos: [159, 164] cc => I
Apply:  Pos: [194, 207] xx => I
Apply:  Pos: [185, 191] xx => I
Apply:  Pos: [188, 197] cc => I
Apply:  Pos: [190, 195] cc => I
Apply:  Pos: [193, 199, 205] xcx => c
Apply:  Pos: [203, 210, 213] ccc => cc
Apply:  Pos: [215, 220] xx => I
Apply:  Pos: [216, 225] xx => I
Apply:  Pos: [238, 246, 250] xcx => c
Apply:  Pos: [236, 242] cc => I
Apply:  Pos: [239, 264] xx => I
Apply:  Pos: [241, 254] cc => I
Apply:  Pos: [243, 252] cc => I
Apply:  Pos: [244, 255] cc => I
Apply:  Pos: [248, 253] cc => I
---------------
Circuit after: xcccxcccccxxccxxxccxxccccccccxxcccxcxxxcccccxcccccccccccccccxccccxxcccxcccccxcccxcxxcxxxcccxxcccxxxccxxcccccccccccxccccxccccxxccxccxccccccccxxcccccxccccccxccxxxxxcccccxccxcxxccccxccccc

--------End Timer [apply mapping plan]:  0.015606164932250977

[15], [10, 11], [1, 3], [4, 18], [4], [3, 8], [14, 12], [15, 17], [9, 6], [18, 10], [10], [5], [19, 14], [18, 15], [14], [11], [6], [10, 9], [5, 18], [10], [15], [14, 8], [4, 2], [13, 5], [17, 11], [7, 1], [9, 14], [2, 7], [4, 16], [1], [18], [3, 8], [14, 8], [18, 16], [5], [4, 18], [10], [19], [17], [8, 0], [4, 16], [13, 5], [7, 3], [9, 14], [8], [16, 9], [18, 10], [4, 2], [15, 10], [18, 16], [1, 3], [18, 10], [7, 3], [17, 11], [14, 12], [8, 0], [15, 17], [2, 7], [1, 3], [5, 10], [0], [4, 2], [11, 6], [9, 14], [16, 19], [2], [7], [18, 10], [17, 11], [16, 9], [13], [2, 16], [13, 4], [10, 9], [7, 3], [14, 0], [1], [15, 17], [4, 18], [19, 9], [19], [15, 10], [8], [16], [5, 15], [15], [14], [12], [10, 11], [13, 5], [7, 1], [13], [18], [16, 19], [9, 11], [5, 15], [19], [16], [15], [14, 0], [13, 5], [14], [6], [16, 19], [8, 0], [2, 7], [7, 19], [10, 11], [9, 6], [2, 16], [16, 19], [7, 3], [5, 18], [11, 6], [14], [6, 12], [10, 11], [19, 3], [13, 4], [8], [19, 14], [13, 5], [1, 3], [10, 9], [10], [5], [7, 19], [4, 16], [16], [17, 11], [18, 15], [18], [19, 14], [2, 16], [10, 11], [16, 9], [4, 2], [3, 8], [18, 15], [6, 12], [0], [12], [9, 11], [15, 10], [16, 14], [8, 0], [10, 11], [2], [8, 12], [16, 9], [9, 11], [4, 18], [16, 19], [15, 10], [19], [14, 12], [10, 9], [14], [18], [8], [15], [0], [10, 6], [2, 16], [13, 5], [19, 14], [13, 4], [6], [16, 9], [1, 3], [1], [16, 19], [19], [18], [14, 8], [10, 9], [17, 11], [4, 16], [16], [8, 12], [19, 14], [5, 10], [1, 3], [18, 15], ----End Timer [Execute Mapping]:  1.8122925758361816

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[115, 139]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[19, 36]
[101, 114]
[158, 173]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[100, 112, 121]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[21, 26, 31]
[120, 126, 132]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[19, 36]
[101, 114]
[158, 173]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[115, 139]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.2657430171966553

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [19, 36] xx => I, Pos: [19, 36] xx => I, Pos: [21, 26, 31] ccc => cc, Pos: [100, 112, 121] ccc => cc, Pos: [101, 114] xx => I, Pos: [101, 114] xx => I, Pos: [115, 139] cc => I, Pos: [115, 139] cc => I, Pos: [120, 126, 132] ccc => cc, Pos: [158, 173] xx => I, Pos: [158, 173] xx => I]

--------End Timer [Generate Plans]:  0.01564168930053711

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [19, 36] xx => I,
 Pos: [21, 26, 31] ccc => cc,
 Pos: [100, 112, 121] ccc => cc,
 Pos: [101, 114] xx => I,
 Pos: [115, 139] cc => I,
 Pos: [120, 126, 132] ccc => cc,
 Pos: [158, 173] xx => I]
Change: 7, Saving: 7

Circuit before: xcccxcccccxxccxxxccxxccccccccxxcccxcxxxcccccxcccccccccccccccxccccxxcccxcccccxcccxcxxcxxxcccxxcccxxxccxxcccccccccccxccccxccccxxccxccxccccccccxxcccccxccccccxccxxxxxcccccxccxcxxccccxccccc
---------------
Apply:  Pos: [19, 36] xx => I
Apply:  Pos: [21, 26, 31] ccc => cc
Apply:  Pos: [100, 112, 121] ccc => cc
Apply:  Pos: [101, 114] xx => I
Apply:  Pos: [115, 139] cc => I
Apply:  Pos: [120, 126, 132] ccc => cc
Apply:  Pos: [158, 173] xx => I
---------------
Circuit after: xcccxcccccxxccxxxccxccccccccxxccxcxxcccccxcccccccccccccccxccccxxcccxcccccxcccxcxxcxxxcccxxcccxxxccxccccccccccccccxcccxxccxccxccccccxxcccccxccccccxccxxxxcccccxccxcxccccxccccc

--------End Timer [apply mapping plan]:  0.0

[15], [10, 11], [1, 3], [4, 18], [4], [3, 8], [14, 12], [15, 17], [9, 6], [18, 10], [10], [5], [19, 14], [18, 15], [14], [11], [6], [10, 9], [5, 18], [15], [9, 14], [4, 2], [13, 5], [17, 11], [7, 1], [14, 8], [2, 7], [4, 16], [1], [18], [3, 8], [18, 16], [5], [4, 18], [19], [17], [8, 0], [4, 16], [13, 5], [7, 3], [9, 14], [8], [16, 9], [18, 10], [4, 2], [15, 10], [18, 16], [1, 3], [18, 10], [7, 3], [17, 11], [14, 12], [8, 0], [15, 17], [2, 7], [1, 3], [5, 10], [0], [4, 2], [11, 6], [9, 14], [16, 19], [2], [7], [18, 10], [17, 11], [16, 9], [13], [2, 16], [13, 4], [10, 9], [7, 3], [14, 0], [1], [15, 17], [4, 18], [19, 9], [19], [15, 10], [8], [16], [5, 15], [15], [14], [12], [10, 11], [13, 5], [7, 1], [13], [18], [16, 19], [9, 11], [5, 15], [19], [16], [15], [14, 0], [13, 18], [6], [16, 19], [8, 0], [2, 7], [7, 19], [10, 11], [9, 6], [2, 16], [16, 19], [7, 3], [5, 18], [11, 6], [10, 11], [19, 3], [13, 4], [8], [7, 19], [1, 3], [10, 9], [10], [5], [19, 14], [4, 16], [16], [17, 11], [18, 15], [18], [2, 16], [10, 11], [16, 9], [4, 2], [3, 8], [18, 15], [0], [12], [9, 11], [15, 10], [16, 14], [8, 0], [10, 11], [2], [8, 12], [16, 9], [9, 11], [4, 18], [16, 19], [15, 10], [19], [14, 12], [10, 9], [14], [8], [15], [0], [10, 6], [2, 16], [13, 5], [19, 14], [13, 4], [6], [16, 9], [1, 3], [1], [16, 19], [19], [14, 8], [10, 9], [17, 11], [4, 16], [16], [8, 12], [19, 14], [5, 10], [1, 3], [18, 15], ----End Timer [Execute Mapping]:  1.2813847064971924

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[84, 132]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[84, 132]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.218637228012085

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [84, 132] xx => I, Pos: [84, 132] xx => I]

--------End Timer [Generate Plans]:  0.01564192771911621

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [84, 132] xx => I]
Change: 1, Saving: 1

Circuit before: xcccxcccccxxccxxxccxccccccccxxccxcxxcccccxcccccccccccccccxccccxxcccxcccccxcccxcxxcxxxcccxxcccxxxccxccccccccccccccxcccxxccxccxccccccxxcccccxccccccxccxxxxcccccxccxcxccccxccccc
---------------
Apply:  Pos: [84, 132] xx => I
---------------
Circuit after: xcccxcccccxxccxxxccxccccccccxxccxcxxcccccxcccccccccccccccxccccxxcccxcccccxcccxcxxcxxcccxxcccxxxccxccccccccccccccxcccxxccxccxccccccxcccccxccccccxccxxxxcccccxccxcxccccxccccc

--------End Timer [apply mapping plan]:  0.0

[15], [10, 11], [1, 3], [4, 18], [4], [3, 8], [14, 12], [15, 17], [9, 6], [18, 10], [10], [5], [19, 14], [18, 15], [14], [11], [6], [10, 9], [5, 18], [15], [9, 14], [4, 2], [13, 5], [17, 11], [7, 1], [14, 8], [2, 7], [4, 16], [1], [18], [3, 8], [18, 16], [5], [4, 18], [19], [17], [8, 0], [4, 16], [13, 5], [7, 3], [9, 14], [8], [16, 9], [18, 10], [4, 2], [15, 10], [18, 16], [1, 3], [18, 10], [7, 3], [17, 11], [14, 12], [8, 0], [15, 17], [2, 7], [1, 3], [5, 10], [0], [4, 2], [11, 6], [9, 14], [16, 19], [2], [7], [18, 10], [17, 11], [16, 9], [13], [2, 16], [13, 4], [10, 9], [7, 3], [14, 0], [1], [15, 17], [4, 18], [19, 9], [19], [15, 10], [8], [16], [5, 15], [15], [14], [10, 11], [13, 5], [7, 1], [13], [18], [16, 19], [9, 11], [5, 15], [19], [16], [15], [14, 0], [13, 18], [6], [16, 19], [8, 0], [2, 7], [7, 19], [10, 11], [9, 6], [2, 16], [16, 19], [7, 3], [5, 18], [11, 6], [10, 11], [19, 3], [13, 4], [8], [7, 19], [1, 3], [10, 9], [10], [5], [19, 14], [4, 16], [16], [17, 11], [18, 15], [18], [2, 16], [10, 11], [16, 9], [4, 2], [3, 8], [18, 15], [0], [9, 11], [15, 10], [16, 14], [8, 0], [10, 11], [2], [8, 12], [16, 9], [9, 11], [4, 18], [16, 19], [15, 10], [19], [14, 12], [10, 9], [14], [8], [15], [0], [10, 6], [2, 16], [13, 5], [19, 14], [13, 4], [6], [16, 9], [1, 3], [1], [16, 19], [19], [14, 8], [10, 9], [17, 11], [4, 16], [16], [8, 12], [19, 14], [5, 10], [1, 3], [18, 15], ----End Timer [Execute Mapping]:  1.2342791557312012

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.250030279159546

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: xcccxcccccxxccxxxccxccccccccxxccxcxxcccccxcccccccccccccccxccccxxcccxcccccxcccxcxxcxxcccxxcccxxxccxccccccccccccccxcccxxccxccxccccccxcccccxccccccxccxxxxcccccxccxcxccccxccccc
---------------
---------------
Circuit after: xcccxcccccxxccxxxccxccccccccxxccxcxxcccccxcccccccccccccccxccccxxcccxcccccxcccxcxxcxxcccxxcccxxxccxccccccccccccccxcccxxccxccxccccccxcccccxccccccxccxxxxcccccxccxcxccccxccccc

--------End Timer [apply mapping plan]:  0.0

[15], [10, 11], [1, 3], [4, 18], [4], [3, 8], [14, 12], [15, 17], [9, 6], [18, 10], [10], [5], [19, 14], [18, 15], [14], [11], [6], [10, 9], [5, 18], [15], [9, 14], [4, 2], [13, 5], [17, 11], [7, 1], [14, 8], [2, 7], [4, 16], [1], [18], [3, 8], [18, 16], [5], [4, 18], [19], [17], [8, 0], [4, 16], [13, 5], [7, 3], [9, 14], [8], [16, 9], [18, 10], [4, 2], [15, 10], [18, 16], [1, 3], [18, 10], [7, 3], [17, 11], [14, 12], [8, 0], [15, 17], [2, 7], [1, 3], [5, 10], [0], [4, 2], [11, 6], [9, 14], [16, 19], [2], [7], [18, 10], [17, 11], [16, 9], [13], [2, 16], [13, 4], [10, 9], [7, 3], [14, 0], [1], [15, 17], [4, 18], [19, 9], [19], [15, 10], [8], [16], [5, 15], [15], [14], [10, 11], [13, 5], [7, 1], [13], [18], [16, 19], [9, 11], [5, 15], [19], [16], [15], [14, 0], [13, 18], [6], [16, 19], [8, 0], [2, 7], [7, 19], [10, 11], [9, 6], [2, 16], [16, 19], [7, 3], [5, 18], [11, 6], [10, 11], [19, 3], [13, 4], [8], [7, 19], [1, 3], [10, 9], [10], [5], [19, 14], [4, 16], [16], [17, 11], [18, 15], [18], [2, 16], [10, 11], [16, 9], [4, 2], [3, 8], [18, 15], [0], [9, 11], [15, 10], [16, 14], [8, 0], [10, 11], [2], [8, 12], [16, 9], [9, 11], [4, 18], [16, 19], [15, 10], [19], [14, 12], [10, 9], [14], [8], [15], [0], [10, 6], [2, 16], [13, 5], [19, 14], [13, 4], [6], [16, 9], [1, 3], [1], [16, 19], [19], [14, 8], [10, 9], [17, 11], [4, 16], [16], [8, 12], [19, 14], [5, 10], [1, 3], [18, 15], ----End Timer [Execute Mapping]:  1.250030279159546

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-x-x-x-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-x-cx-cx-cx-x-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-x-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-x-x-x-x-x-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-x-x-x-cx-cx-x-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-cx-cx-x-x-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-x-cx-cx-cx-cx-x-x-cx-cx-x-x-x-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx 
     => total size: [270] (IBM)
 --------------------
 - qubits_num: 20, using gates: [x,cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 450


>> Solved circuit: 
Circuit Info: 
 - circuit: x-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-cx-cx-x-x-x-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-x-cx-x-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-cx-cx-cx-x-cx-cx-cx-cx-cx-x-cx-cx-cx-x-cx-x-x-cx-x-x-cx-cx-cx-x-x-cx-cx-cx-x-x-x-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-x-x-cx-cx-x-cx-cx-x-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-x-cx-cx-x-cx-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx 
     => total size: [171] (IBM)
 --------------------
 - qubits_num: 20, using gates: [x,cx]
 - circuit depth: 33 - (small)
 - circuit cycle: 296

Reduced: 
 - size: 99 (36.67%)
 - depth: 12 (26.67%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.10936808586120605

[0], [15], [7, 19], [10, 11], [1, 3], [4, 18], [0], [4], [7, 19], [3, 8], [14, 12], [15, 17], [9, 6], [18, 10], [10], [5], [19, 14], [7, 3], [18, 15], [14], [11], [6], [10, 9], [7, 3], [5, 18], [10], [15], [14, 8], [4, 2], [13, 5], [3, 8], [17, 11], [7, 1], [9, 6], [19], [3, 8], [9, 14], [2, 7], [4, 16], [15, 17], [1], [7], [19], [18], [3, 8], [10, 11], [14, 0], [12], [14, 8], [18, 16], [15, 17], [8], [7], [5], [14, 0], [16, 19], [1, 3], [9, 6], [8], [10, 11], [4, 18], [1, 3], [16, 19], [10], [19], [17], [8, 0], [4, 16], [13, 5], [7, 3], [9, 14], [8], [16, 9], [18, 10], [4, 2], [12], [8, 0], [15, 10], [18, 16], [4, 2], [1, 3], [8, 0], [4, 2], [18, 10], [7, 3], [17, 11], [14, 12], [8, 0], [15, 17], [2, 7], [1, 3], [5, 10], [0], [4, 2], [11, 6], [9, 14], [16, 19], [0], [2], [7], [18, 10], [17, 11], [8, 12], [16, 9], [0], [13], [2, 16], [4, 18], [8, 12], [10, 9], [7, 3], [0], [1], [15, 17], [13, 4], [2, 7], [19, 9], [19], [14, 0], [15, 10], [4, 18], [2, 7], [11, 6], [0], [8], [16], [17], [19, 3], [5, 15], [11, 6], [0], [4], [15], [14], [12], [10, 9], [19, 3], [13, 5], [7, 1], [0], [13], [1], [18], [16, 19], [9, 11], [5, 15], [19], [16], [15], [14, 0], [5, 18], [14], [6], [17], [10, 9], [16, 19], [8, 0], [2, 7], [4], [14, 0], [7, 19], [10, 11], [9, 6], [2, 16], [14, 0], [16, 19], [7, 3], [13, 5], [11, 6], [14], [1], [5, 18], [6, 12], [10, 11], [19, 3], [13, 4], [8], [19, 14], [13, 5], [1, 3], [10, 9], [10], [5], [7, 19], [4, 16], [19], [16], [17, 11], [12, 0], [18, 15], [7, 1], [19], [18], [14], [5], [7, 1], [2, 16], [12, 0], [10, 11], [19, 14], [16, 9], [4, 2], [3, 8], [15, 10], [6, 12], [14], [0], [5], [12], [9, 11], [18, 10], [16, 14], [8, 0], [18, 15], [10, 11], [14], [6], [2], [8, 12], [16, 9], [14], [9, 11], [4, 18], [16, 19], [15, 10], [6], [19], [14, 12], [10, 9], [14], [18], [8], [15], [0], [10, 6], [2, 16], [19, 9], [13, 5], [14], [2], [13, 4], [17, 11], [19, 9], [18, 10], [5, 15], [6], [19, 14], [16, 9], [12, 0], [1, 3], [14], [1], [18, 10], [12, 0], [17, 11], [5, 15], [16, 19], [19], [18], [14, 8], [10, 9], [17, 11], [4, 16], [16], [2], [8, 12], [19, 14], [5, 10], [1, 3], [18, 15], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[2, 8]
[17, 23]
[30, 35]
[35, 44]
[39, 50]
[46, 54]
[33, 57]
[45, 59]
[56, 61]
[55, 62]
[74, 79]
[76, 81]
[79, 82]
[81, 87]
[102, 108]
[115, 121]
[122, 129]
[127, 136]
[159, 164]
[190, 195]
[188, 197]
[236, 242]
[243, 252]
[248, 253]
[241, 254]
[244, 255]
[254, 261]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[0, 6]
[34, 42]
[41, 52]
[51, 58]
[47, 75]
[92, 97]
[97, 104]
[104, 111]
[123, 130]
[130, 139]
[126, 153]
[131, 158]
[141, 170]
[185, 191]
[182, 194]
[194, 207]
[215, 220]
[216, 225]
[229, 238]
[239, 264]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[135, 144, 154]
[167, 171, 178]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 

[111, 118, 123]
[193, 199, 205]
[205, 211, 215]
[238, 246, 250]

------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[107, 114, 120]
[150, 167, 171]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[203, 210, 213]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[0, 6]
[34, 42]
[41, 52]
[51, 58]
[47, 75]
[92, 97]
[97, 104]
[104, 111]
[123, 130]
[130, 139]
[126, 153]
[131, 158]
[141, 170]
[185, 191]
[182, 194]
[194, 207]
[215, 220]
[216, 225]
[229, 238]
[239, 264]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[2, 8]
[17, 23]
[30, 35]
[35, 44]
[39, 50]
[46, 54]
[33, 57]
[45, 59]
[56, 61]
[55, 62]
[74, 79]
[76, 81]
[79, 82]
[81, 87]
[102, 108]
[115, 121]
[122, 129]
[127, 136]
[159, 164]
[190, 195]
[188, 197]
[236, 242]
[243, 252]
[248, 253]
[241, 254]
[244, 255]
[254, 261]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.6718394756317139

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 6] xx => I, Pos: [0, 6] xx => I, Pos: [2, 8] cc => I, Pos: [2, 8] cc => I, Pos: [17, 23] cc => I, Pos: [17, 23] cc => I, Pos: [30, 35] cc => I, Pos: [30, 35] cc => I, Pos: [33, 57] cc => I, Pos: [33, 57] cc => I, Pos: [34, 42] xx => I, Pos: [34, 42] xx => I, Pos: [35, 44] cc => I, Pos: [35, 44] cc => I, Pos: [39, 50] cc => I, Pos: [39, 50] cc => I, Pos: [41, 52] xx => I, Pos: [41, 52] xx => I, Pos: [45, 59] cc => I, Pos: [45, 59] cc => I, Pos: [46, 54] cc => I, Pos: [46, 54] cc => I, Pos: [47, 75] xx => I, Pos: [47, 75] xx => I, Pos: [51, 58] xx => I, Pos: [51, 58] xx => I, Pos: [55, 62] cc => I, Pos: [55, 62] cc => I, Pos: [56, 61] cc => I, Pos: [56, 61] cc => I, Pos: [74, 79] cc => I, Pos: [74, 79] cc => I, Pos: [76, 81] cc => I, Pos: [76, 81] cc => I, Pos: [79, 82] cc => I, Pos: [79, 82] cc => I, Pos: [81, 87] cc => I, Pos: [81, 87] cc => I, Pos: [92, 97] xx => I, Pos: [92, 97] xx => I, Pos: [97, 104] xx => I, Pos: [97, 104] xx => I, Pos: [102, 108] cc => I, Pos: [102, 108] cc => I, Pos: [104, 111] xx => I, Pos: [104, 111] xx => I, Pos: [107, 114, 120] ccc => cc, Pos: [111, 118, 123] xcx => c, Pos: [115, 121] cc => I, Pos: [115, 121] cc => I, Pos: [122, 129] cc => I, Pos: [122, 129] cc => I, Pos: [123, 130] xx => I, Pos: [123, 130] xx => I, Pos: [126, 153] xx => I, Pos: [126, 153] xx => I, Pos: [127, 136] cc => I, Pos: [127, 136] cc => I, Pos: [130, 139] xx => I, Pos: [130, 139] xx => I, Pos: [131, 158] xx => I, Pos: [131, 158] xx => I, Pos: [135, 144, 154] ccc => cc, Pos: [141, 170] xx => I, Pos: [141, 170] xx => I, Pos: [150, 167, 171] ccc => cc, Pos: [159, 164] cc => I, Pos: [159, 164] cc => I, Pos: [167, 171, 178] ccc => cc, Pos: [182, 194] xx => I, Pos: [182, 194] xx => I, Pos: [185, 191] xx => I, Pos: [185, 191] xx => I, Pos: [188, 197] cc => I, Pos: [188, 197] cc => I, Pos: [190, 195] cc => I, Pos: [190, 195] cc => I, Pos: [193, 199, 205] xcx => c, Pos: [194, 207] xx => I, Pos: [194, 207] xx => I, Pos: [203, 210, 213] ccc => cc, Pos: [205, 211, 215] xcx => c, Pos: [215, 220] xx => I, Pos: [215, 220] xx => I, Pos: [216, 225] xx => I, Pos: [216, 225] xx => I, Pos: [229, 238] xx => I, Pos: [229, 238] xx => I, Pos: [236, 242] cc => I, Pos: [236, 242] cc => I, Pos: [238, 246, 250] xcx => c, Pos: [239, 264] xx => I, Pos: [239, 264] xx => I, Pos: [241, 254] cc => I, Pos: [241, 254] cc => I, Pos: [243, 252] cc => I, Pos: [243, 252] cc => I, Pos: [244, 255] cc => I, Pos: [244, 255] cc => I, Pos: [248, 253] cc => I, Pos: [248, 253] cc => I, Pos: [254, 261] cc => I, Pos: [254, 261] cc => I]

Plan: 1
[Pos: [0, 6] xx => I,
 Pos: [2, 8] cc => I,
 Pos: [17, 23] cc => I,
 Pos: [30, 35] cc => I,
 Pos: [33, 57] cc => I,
 Pos: [34, 42] xx => I,
 Pos: [39, 50] cc => I,
 Pos: [41, 52] xx => I,
 Pos: [45, 59] cc => I,
 Pos: [46, 54] cc => I,
 Pos: [47, 75] xx => I,
 Pos: [51, 58] xx => I,
 Pos: [55, 62] cc => I,
 Pos: [56, 61] cc => I,
 Pos: [74, 79] cc => I,
 Pos: [76, 81] cc => I,
 Pos: [92, 97] xx => I,
 Pos: [102, 108] cc => I,
 Pos: [104, 111] xx => I,
 Pos: [107, 114, 120] ccc => cc,
 Pos: [115, 121] cc => I,
 Pos: [122, 129] cc => I,
 Pos: [123, 130] xx => I,
 Pos: [126, 153] xx => I,
 Pos: [127, 136] cc => I,
 Pos: [131, 158] xx => I,
 Pos: [135, 144, 154] ccc => cc,
 Pos: [141, 170] xx => I,
 Pos: [150, 167, 171] ccc => cc,
 Pos: [159, 164] cc => I,
 Pos: [182, 194] xx => I,
 Pos: [185, 191] xx => I,
 Pos: [188, 197] cc => I,
 Pos: [190, 195] cc => I,
 Pos: [193, 199, 205] xcx => c,
 Pos: [203, 210, 213] ccc => cc,
 Pos: [215, 220] xx => I,
 Pos: [216, 225] xx => I,
 Pos: [229, 238] xx => I,
 Pos: [236, 242] cc => I,
 Pos: [239, 264] xx => I,
 Pos: [241, 254] cc => I,
 Pos: [243, 252] cc => I,
 Pos: [244, 255] cc => I,
 Pos: [248, 253] cc => I]
Change: 45, Saving: 46

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.10962367057800293

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 6] xx => I,
 Pos: [2, 8] cc => I,
 Pos: [17, 23] cc => I,
 Pos: [30, 35] cc => I,
 Pos: [33, 57] cc => I,
 Pos: [34, 42] xx => I,
 Pos: [39, 50] cc => I,
 Pos: [41, 52] xx => I,
 Pos: [45, 59] cc => I,
 Pos: [46, 54] cc => I,
 Pos: [47, 75] xx => I,
 Pos: [51, 58] xx => I,
 Pos: [55, 62] cc => I,
 Pos: [56, 61] cc => I,
 Pos: [74, 79] cc => I,
 Pos: [76, 81] cc => I,
 Pos: [92, 97] xx => I,
 Pos: [102, 108] cc => I,
 Pos: [104, 111] xx => I,
 Pos: [107, 114, 120] ccc => cc,
 Pos: [115, 121] cc => I,
 Pos: [122, 129] cc => I,
 Pos: [123, 130] xx => I,
 Pos: [126, 153] xx => I,
 Pos: [127, 136] cc => I,
 Pos: [131, 158] xx => I,
 Pos: [135, 144, 154] ccc => cc,
 Pos: [141, 170] xx => I,
 Pos: [150, 167, 171] ccc => cc,
 Pos: [159, 164] cc => I,
 Pos: [182, 194] xx => I,
 Pos: [185, 191] xx => I,
 Pos: [188, 197] cc => I,
 Pos: [190, 195] cc => I,
 Pos: [193, 199, 205] xcx => c,
 Pos: [203, 210, 213] ccc => cc,
 Pos: [215, 220] xx => I,
 Pos: [216, 225] xx => I,
 Pos: [229, 238] xx => I,
 Pos: [236, 242] cc => I,
 Pos: [239, 264] xx => I,
 Pos: [241, 254] cc => I,
 Pos: [243, 252] cc => I,
 Pos: [244, 255] cc => I,
 Pos: [248, 253] cc => I]
Change: 45, Saving: 46

Circuit before: xxccccxxccccccxxcccxxxcccxxcccccccxcccccxxxxcccxcccxxxccccxccccxxxcccccxcccxccccccccccccccccxccccxxxccccxxcccccxxccccxcccccxxxxcccxxxxxccccxxxxcccxxxccxxxccccxccccccccccxxcccccxccccxxccxxccccxxxxccccccccccxxxxccccccxxxccxccccxxccxxxxxccccxxcccccxccccxxcccccxxccccxxccccc
---------------
Apply:  Pos: [0, 6] xx => I
Apply:  Pos: [2, 8] cc => I
Apply:  Pos: [17, 23] cc => I
Apply:  Pos: [30, 35] cc => I
Apply:  Pos: [33, 57] cc => I
Apply:  Pos: [34, 42] xx => I
Apply:  Pos: [39, 50] cc => I
Apply:  Pos: [41, 52] xx => I
Apply:  Pos: [45, 59] cc => I
Apply:  Pos: [46, 54] cc => I
Apply:  Pos: [47, 75] xx => I
Apply:  Pos: [51, 58] xx => I
Apply:  Pos: [55, 62] cc => I
Apply:  Pos: [56, 61] cc => I
Apply:  Pos: [74, 79] cc => I
Apply:  Pos: [76, 81] cc => I
Apply:  Pos: [92, 97] xx => I
Apply:  Pos: [102, 108] cc => I
Apply:  Pos: [104, 111] xx => I
Apply:  Pos: [107, 114, 120] ccc => cc
Apply:  Pos: [115, 121] cc => I
Apply:  Pos: [122, 129] cc => I
Apply:  Pos: [123, 130] xx => I
Apply:  Pos: [126, 153] xx => I
Apply:  Pos: [127, 136] cc => I
Apply:  Pos: [131, 158] xx => I
Apply:  Pos: [135, 144, 154] ccc => cc
Apply:  Pos: [141, 170] xx => I
Apply:  Pos: [150, 167, 171] ccc => cc
Apply:  Pos: [159, 164] cc => I
Apply:  Pos: [182, 194] xx => I
Apply:  Pos: [185, 191] xx => I
Apply:  Pos: [188, 197] cc => I
Apply:  Pos: [190, 195] cc => I
Apply:  Pos: [193, 199, 205] xcx => c
Apply:  Pos: [203, 210, 213] ccc => cc
Apply:  Pos: [215, 220] xx => I
Apply:  Pos: [216, 225] xx => I
Apply:  Pos: [229, 238] xx => I
Apply:  Pos: [236, 242] cc => I
Apply:  Pos: [239, 264] xx => I
Apply:  Pos: [241, 254] cc => I
Apply:  Pos: [243, 252] cc => I
Apply:  Pos: [244, 255] cc => I
Apply:  Pos: [248, 253] cc => I
---------------
Circuit after: xcccxcccccxxccxxxccxxccccccccxxcccxcxxxcccccxcccccccccccccccccccxxcccxccccxcccxccxxcxxxcccxxxcccxxxccxxcccccccccccxccccxccccxccxccxccccccccxxxcccccxccccccxccxxxxccccxcccxxcxxccccxccccc

--------End Timer [apply mapping plan]:  0.0

[15], [10, 11], [1, 3], [4, 18], [4], [3, 8], [14, 12], [15, 17], [9, 6], [18, 10], [10], [5], [19, 14], [18, 15], [14], [11], [6], [10, 9], [5, 18], [10], [15], [14, 8], [4, 2], [13, 5], [17, 11], [7, 1], [9, 14], [2, 7], [4, 16], [1], [18], [3, 8], [14, 8], [18, 16], [5], [4, 18], [10], [19], [17], [8, 0], [4, 16], [13, 5], [7, 3], [9, 14], [8], [16, 9], [18, 10], [15, 10], [18, 16], [1, 3], [4, 2], [18, 10], [7, 3], [17, 11], [14, 12], [8, 0], [15, 17], [2, 7], [1, 3], [5, 10], [4, 2], [11, 6], [9, 14], [16, 19], [2], [7], [18, 10], [17, 11], [16, 9], [13], [2, 16], [13, 4], [10, 9], [7, 3], [1], [15, 17], [4, 18], [19, 9], [19], [14, 0], [15, 10], [8], [16], [5, 15], [15], [14], [12], [10, 11], [13, 5], [7, 1], [0], [13], [18], [16, 19], [9, 11], [5, 15], [19], [16], [15], [14, 0], [13, 5], [14], [6], [16, 19], [8, 0], [2, 7], [7, 19], [10, 11], [9, 6], [2, 16], [16, 19], [7, 3], [5, 18], [11, 6], [14], [6, 12], [10, 11], [19, 3], [13, 4], [8], [19, 14], [13, 5], [1, 3], [10, 9], [10], [7, 19], [4, 16], [16], [17, 11], [18, 15], [18], [19, 14], [2, 16], [10, 11], [16, 9], [4, 2], [3, 8], [18, 15], [6, 12], [0], [5], [12], [9, 11], [15, 10], [16, 14], [8, 0], [10, 11], [2], [8, 12], [16, 9], [9, 11], [4, 18], [16, 19], [15, 10], [19], [14, 12], [10, 9], [18], [8], [15], [0], [10, 6], [2, 16], [13, 5], [13, 4], [6], [19, 14], [16, 9], [1, 3], [14], [1], [16, 19], [19], [18], [14, 8], [10, 9], [17, 11], [4, 16], [16], [8, 12], [19, 14], [5, 10], [1, 3], [18, 15], ----End Timer [Execute Mapping]:  1.7814631462097168

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[48, 51]
[115, 138]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[19, 36]
[101, 114]
[157, 173]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[100, 112, 121]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[21, 26, 31]
[120, 125, 131]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[19, 36]
[101, 114]
[157, 173]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[48, 51]
[115, 138]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.2498764991760254

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [19, 36] xx => I, Pos: [19, 36] xx => I, Pos: [21, 26, 31] ccc => cc, Pos: [48, 51] cc => I, Pos: [48, 51] cc => I, Pos: [100, 112, 121] ccc => cc, Pos: [101, 114] xx => I, Pos: [101, 114] xx => I, Pos: [115, 138] cc => I, Pos: [115, 138] cc => I, Pos: [120, 125, 131] ccc => cc, Pos: [157, 173] xx => I, Pos: [157, 173] xx => I]

Plan: 1
[Pos: [19, 36] xx => I,
 Pos: [21, 26, 31] ccc => cc,
 Pos: [48, 51] cc => I,
 Pos: [100, 112, 121] ccc => cc,
 Pos: [101, 114] xx => I,
 Pos: [115, 138] cc => I,
 Pos: [120, 125, 131] ccc => cc,
 Pos: [157, 173] xx => I]
Change: 8, Saving: 8

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.01562356948852539

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [19, 36] xx => I,
 Pos: [21, 26, 31] ccc => cc,
 Pos: [48, 51] cc => I,
 Pos: [100, 112, 121] ccc => cc,
 Pos: [101, 114] xx => I,
 Pos: [115, 138] cc => I,
 Pos: [120, 125, 131] ccc => cc,
 Pos: [157, 173] xx => I]
Change: 8, Saving: 8

Circuit before: xcccxcccccxxccxxxccxxccccccccxxcccxcxxxcccccxcccccccccccccccccccxxcccxccccxcccxccxxcxxxcccxxxcccxxxccxxcccccccccccxccccxccccxccxccxccccccccxxxcccccxccccccxccxxxxccccxcccxxcxxccccxccccc
---------------
Apply:  Pos: [19, 36] xx => I
Apply:  Pos: [21, 26, 31] ccc => cc
Apply:  Pos: [48, 51] cc => I
Apply:  Pos: [100, 112, 121] ccc => cc
Apply:  Pos: [101, 114] xx => I
Apply:  Pos: [115, 138] cc => I
Apply:  Pos: [120, 125, 131] ccc => cc
Apply:  Pos: [157, 173] xx => I
---------------
Circuit after: xcccxcccccxxccxxxccxccccccccxxccxcxxcccccxcccccccccccccccccxxcccxccccxcccxccxxcxxxcccxxxcccxxxccxccccccccccccccxcccxccxccxccccccxxxcccccxccccccxccxxxccccxcccxxcxccccxccccc

--------End Timer [apply mapping plan]:  0.0

[15], [10, 11], [1, 3], [4, 18], [4], [3, 8], [14, 12], [15, 17], [9, 6], [18, 10], [10], [5], [19, 14], [18, 15], [14], [11], [6], [10, 9], [5, 18], [15], [9, 14], [4, 2], [13, 5], [17, 11], [7, 1], [14, 8], [2, 7], [4, 16], [1], [18], [3, 8], [18, 16], [5], [4, 18], [19], [17], [8, 0], [4, 16], [13, 5], [7, 3], [9, 14], [8], [16, 9], [15, 10], [18, 16], [1, 3], [4, 2], [7, 3], [17, 11], [14, 12], [8, 0], [15, 17], [2, 7], [1, 3], [5, 10], [4, 2], [11, 6], [9, 14], [16, 19], [2], [7], [18, 10], [17, 11], [16, 9], [13], [2, 16], [13, 4], [10, 9], [7, 3], [1], [15, 17], [4, 18], [19, 9], [19], [14, 0], [15, 10], [8], [16], [5, 15], [15], [14], [12], [10, 11], [13, 5], [7, 1], [0], [13], [18], [16, 19], [9, 11], [5, 15], [19], [16], [15], [14, 0], [13, 18], [6], [16, 19], [8, 0], [2, 7], [7, 19], [10, 11], [9, 6], [2, 16], [16, 19], [7, 3], [5, 18], [11, 6], [10, 11], [19, 3], [13, 4], [8], [7, 19], [1, 3], [10, 9], [10], [19, 14], [4, 16], [16], [17, 11], [18, 15], [18], [2, 16], [10, 11], [16, 9], [4, 2], [3, 8], [18, 15], [0], [5], [12], [9, 11], [15, 10], [16, 14], [8, 0], [10, 11], [2], [8, 12], [16, 9], [9, 11], [4, 18], [16, 19], [15, 10], [19], [14, 12], [10, 9], [8], [15], [0], [10, 6], [2, 16], [13, 4], [13, 5], [6], [19, 14], [16, 9], [1, 3], [14], [1], [16, 19], [19], [14, 8], [10, 9], [17, 11], [4, 16], [16], [8, 12], [19, 14], [5, 10], [1, 3], [18, 15], ----End Timer [Execute Mapping]:  1.2655000686645508

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[81, 130]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[81, 130]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.1874842643737793

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [81, 130] xx => I, Pos: [81, 130] xx => I]

Plan: 1
[Pos: [81, 130] xx => I]
Change: 1, Saving: 1

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [81, 130] xx => I]
Change: 1, Saving: 1

Circuit before: xcccxcccccxxccxxxccxccccccccxxccxcxxcccccxcccccccccccccccccxxcccxccccxcccxccxxcxxxcccxxxcccxxxccxccccccccccccccxcccxccxccxccccccxxxcccccxccccccxccxxxccccxcccxxcxccccxccccc
---------------
Apply:  Pos: [81, 130] xx => I
---------------
Circuit after: xcccxcccccxxccxxxccxccccccccxxccxcxxcccccxcccccccccccccccccxxcccxccccxcccxccxxcxxcccxxxcccxxxccxccccccccccccccxcccxccxccxccccccxxcccccxccccccxccxxxccccxcccxxcxccccxccccc

--------End Timer [apply mapping plan]:  0.0

[15], [10, 11], [1, 3], [4, 18], [4], [3, 8], [14, 12], [15, 17], [9, 6], [18, 10], [10], [5], [19, 14], [18, 15], [14], [11], [6], [10, 9], [5, 18], [15], [9, 14], [4, 2], [13, 5], [17, 11], [7, 1], [14, 8], [2, 7], [4, 16], [1], [18], [3, 8], [18, 16], [5], [4, 18], [19], [17], [8, 0], [4, 16], [13, 5], [7, 3], [9, 14], [8], [16, 9], [15, 10], [18, 16], [1, 3], [4, 2], [7, 3], [17, 11], [14, 12], [8, 0], [15, 17], [2, 7], [1, 3], [5, 10], [4, 2], [11, 6], [9, 14], [16, 19], [2], [7], [18, 10], [17, 11], [16, 9], [13], [2, 16], [13, 4], [10, 9], [7, 3], [1], [15, 17], [4, 18], [19, 9], [19], [14, 0], [15, 10], [8], [16], [5, 15], [15], [14], [10, 11], [13, 5], [7, 1], [0], [13], [18], [16, 19], [9, 11], [5, 15], [19], [16], [15], [14, 0], [13, 18], [6], [16, 19], [8, 0], [2, 7], [7, 19], [10, 11], [9, 6], [2, 16], [16, 19], [7, 3], [5, 18], [11, 6], [10, 11], [19, 3], [13, 4], [8], [7, 19], [1, 3], [10, 9], [10], [19, 14], [4, 16], [16], [17, 11], [18, 15], [18], [2, 16], [10, 11], [16, 9], [4, 2], [3, 8], [18, 15], [0], [5], [9, 11], [15, 10], [16, 14], [8, 0], [10, 11], [2], [8, 12], [16, 9], [9, 11], [4, 18], [16, 19], [15, 10], [19], [14, 12], [10, 9], [8], [15], [0], [10, 6], [2, 16], [13, 5], [13, 4], [6], [19, 14], [16, 9], [1, 3], [14], [1], [16, 19], [19], [14, 8], [10, 9], [17, 11], [4, 16], [16], [8, 12], [19, 14], [5, 10], [1, 3], [18, 15], ----End Timer [Execute Mapping]:  1.1874842643737793

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.218785047531128

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

..........

Total Plans: 0

--------End Timer [Generate Plans]:  0.0

There's no mapping plan.
[15], [10, 11], [1, 3], [4, 18], [4], [3, 8], [14, 12], [15, 17], [9, 6], [18, 10], [10], [5], [19, 14], [18, 15], [14], [11], [6], [10, 9], [5, 18], [15], [9, 14], [4, 2], [13, 5], [17, 11], [7, 1], [14, 8], [2, 7], [4, 16], [1], [18], [3, 8], [18, 16], [5], [4, 18], [19], [17], [8, 0], [4, 16], [13, 5], [7, 3], [9, 14], [8], [16, 9], [15, 10], [18, 16], [1, 3], [4, 2], [7, 3], [17, 11], [14, 12], [8, 0], [15, 17], [2, 7], [1, 3], [5, 10], [4, 2], [11, 6], [9, 14], [16, 19], [2], [7], [18, 10], [17, 11], [16, 9], [13], [2, 16], [13, 4], [10, 9], [7, 3], [1], [15, 17], [4, 18], [19, 9], [19], [14, 0], [15, 10], [8], [16], [5, 15], [15], [14], [10, 11], [13, 5], [7, 1], [0], [13], [18], [16, 19], [9, 11], [5, 15], [19], [16], [15], [14, 0], [13, 18], [6], [16, 19], [8, 0], [2, 7], [7, 19], [10, 11], [9, 6], [2, 16], [16, 19], [7, 3], [5, 18], [11, 6], [10, 11], [19, 3], [13, 4], [8], [7, 19], [1, 3], [10, 9], [10], [19, 14], [4, 16], [16], [17, 11], [18, 15], [18], [2, 16], [10, 11], [16, 9], [4, 2], [3, 8], [18, 15], [0], [5], [9, 11], [15, 10], [16, 14], [8, 0], [10, 11], [2], [8, 12], [16, 9], [9, 11], [4, 18], [16, 19], [15, 10], [19], [14, 12], [10, 9], [8], [15], [0], [10, 6], [2, 16], [13, 4], [13, 5], [6], [19, 14], [16, 9], [1, 3], [14], [1], [16, 19], [19], [14, 8], [10, 9], [17, 11], [4, 16], [16], [8, 12], [19, 14], [5, 10], [1, 3], [18, 15], ----End Timer [Execute Mapping]:  1.218785047531128

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-x-x-x-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-x-cx-cx-cx-x-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-x-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-x-x-x-x-x-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-x-x-x-cx-cx-x-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-cx-cx-x-x-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-x-cx-cx-cx-cx-x-x-cx-cx-x-x-x-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx 
     => total size: [270] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx,x]
 - circuit depth: 45 - (small)
 - circuit cycle: 450


>> Solved circuit: 
Circuit Info: 
 - circuit: x-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-cx-cx-x-x-x-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-x-cx-x-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-x-cx-cx-cx-cx-x-cx-cx-cx-x-cx-cx-x-x-cx-x-x-cx-cx-cx-x-x-x-cx-cx-cx-x-x-x-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-x-cx-cx-x-cx-cx-x-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-cx-cx-x-x-x-cx-cx-cx-cx-x-cx-cx-cx-x-x-cx-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx 
     => total size: [169] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx,x]
 - circuit depth: 32 - (small)
 - circuit cycle: 292

Reduced: 
 - size: 101 (37.41%)
 - depth: 13 (28.89%)

