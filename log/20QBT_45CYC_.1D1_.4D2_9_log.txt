----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.12478041648864746

[19], [16, 14], [15, 0], [5, 11], [6, 8], [8], [16, 14], [12, 7], [19, 18], [4, 13], [0, 9], [16], [17], [4], [1], [10, 2], [13, 5], [0], [12], [16, 14], [6, 9], [19, 18], [5, 15], [7, 8], [16], [12, 11], [7, 9], [3, 13], [4, 1], [2], [11], [16, 3], [5, 0], [14, 17], [7, 9], [1, 18], [3], [9], [6], [13, 17], [12, 18], [3], [10], [16], [5], [6, 8], [3], [2], [12, 18], [7, 6], [11, 0], [4, 13], [6], [3, 5], [16, 14], [9, 8], [17, 11], [19, 18], [12, 7], [3], [2], [7, 8], [13, 10], [1, 18], [5, 15], [12, 11], [5], [0], [18], [3, 10], [1, 12], [16, 14], [6, 9], [4, 17], [10], [19], [4], [1, 12], [0, 9], [18, 6], [3, 13], [16, 14], [10, 2], [6, 9], [1, 19], [4, 17], [7, 8], [7], [10, 2], [14, 4], [3, 5], [13, 10], [1, 19], [16, 3], [11, 15], [4, 17], [6, 9], [7, 8], [17], [3, 13], [9, 8], [3], [4], [14], [15], [17, 12], [6, 8], [11, 0], [3], [11, 0], [10, 2], [14, 17], [1, 19], [7, 9], [3], [15], [11, 7], [19, 12], [14, 17], [9, 8], [10, 5], [3], [13], [4, 17], [10, 2], [15, 0], [7, 9], [1, 19], [3], [14], [1], [11, 7], [6, 9], [4, 13], [2, 15], [17, 12], [3], [18], [15], [4], [0, 9], [7, 8], [3], [17, 12], [13, 10], [14, 4], [3], [6], [8], [14, 17], [4, 1], [2, 15], [15], [1], [10], [0], [3, 5], [12, 7], [14, 4], [3, 10], [5, 0], [11, 7], [16, 14], [6, 9], [3], [0], [6], [12, 7], [4, 1], [3], [9], [6], [0], [1, 18], [5, 15], [4, 17], [10, 2], [3, 13], [5, 15], [16, 14], [4, 1], [12, 18], [7, 6], [0], [16, 3], [7, 6], [17, 12], [10, 2], [3, 10], [13, 5], [12, 11], [1, 18], [19], [16, 3], [9, 8], [7, 6], [5, 11], [16], [7], [13, 5], [16], [9], [12, 11], [1, 19], [7, 6], [4, 17], [16], [19], [10], [5, 11], [12, 18], [4, 13], [7, 6], [2, 15], [16], [3], [19, 18], [0, 9], [4, 17], [11, 7], [5], [16, 3], [11, 15], [1, 12], [14, 13], [10, 2], [6, 8], [4, 17], [16], [1], [8], [13], [11, 15], [19, 12], [10, 2], [4, 17], [6, 9], [16], [8], [6, 9], [3, 10], [14, 17], [16], [0], [4, 1], [2, 15], [11, 7], [3, 5], [14, 17], [16], [0], [5, 15], [12, 18], [13, 10], [1, 19], [16], [9], [19], [7], [6, 8], [13, 5], [4, 17], [16], [4, 17], [10, 2], [18, 6], [11, 7], [0, 9], [11], [16, 3], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[1, 6]
[8, 21]
[26, 34]
[40, 48]
[54, 71]
[70, 77]
[71, 81]
[61, 86]
[82, 88]
[84, 92]
[83, 96]
[107, 109]
[92, 112]
[111, 118]
[110, 124]
[135, 143]
[174, 178]
[162, 179]
[182, 185]
[176, 187]
[185, 195]
[204, 212]
[205, 218]
[218, 227]
[222, 232]
[225, 234]
[227, 235]
[236, 239]
[219, 246]
[241, 248]
[261, 263]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[36, 41]
[41, 46]
[29, 47]
[47, 60]
[101, 108]
[108, 114]
[104, 115]
[114, 121]
[121, 128]
[128, 136]
[136, 142]
[142, 146]
[164, 169]
[166, 171]
[165, 172]
[172, 183]
[197, 200]
[200, 206]
[206, 214]
[228, 237]
[230, 238]
[237, 242]
[242, 249]
[243, 250]
[249, 255]
[255, 262]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[112, 117, 127]
[168, 173, 180]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 

[138, 151, 152]
[192, 203, 207]

------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[85, 89, 95]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[36, 41]
[41, 46]
[29, 47]
[47, 60]
[101, 108]
[108, 114]
[104, 115]
[114, 121]
[121, 128]
[128, 136]
[136, 142]
[142, 146]
[164, 169]
[166, 171]
[165, 172]
[172, 183]
[197, 200]
[200, 206]
[206, 214]
[228, 237]
[230, 238]
[237, 242]
[242, 249]
[243, 250]
[249, 255]
[255, 262]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[1, 6]
[8, 21]
[26, 34]
[40, 48]
[54, 71]
[70, 77]
[71, 81]
[61, 86]
[82, 88]
[84, 92]
[83, 96]
[107, 109]
[92, 112]
[111, 118]
[110, 124]
[135, 143]
[174, 178]
[162, 179]
[182, 185]
[176, 187]
[185, 195]
[204, 212]
[205, 218]
[218, 227]
[222, 232]
[225, 234]
[227, 235]
[236, 239]
[219, 246]
[241, 248]
[261, 263]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.703117847442627

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [1, 6] cc => I, Pos: [1, 6] cc => I, Pos: [8, 21] cc => I, Pos: [8, 21] cc => I, Pos: [26, 34] cc => I, Pos: [26, 34] cc => I, Pos: [29, 47] xx => I, Pos: [29, 47] xx => I, Pos: [36, 41] xx => I, Pos: [36, 41] xx => I, Pos: [40, 48] cc => I, Pos: [40, 48] cc => I, Pos: [41, 46] xx => I, Pos: [41, 46] xx => I, Pos: [47, 60] xx => I, Pos: [47, 60] xx => I, Pos: [54, 71] cc => I, Pos: [54, 71] cc => I, Pos: [61, 86] cc => I, Pos: [61, 86] cc => I, Pos: [70, 77] cc => I, Pos: [70, 77] cc => I, Pos: [71, 81] cc => I, Pos: [71, 81] cc => I, Pos: [82, 88] cc => I, Pos: [82, 88] cc => I, Pos: [83, 96] cc => I, Pos: [83, 96] cc => I, Pos: [84, 92] cc => I, Pos: [84, 92] cc => I, Pos: [85, 89, 95] ccc => cc, Pos: [92, 112] cc => I, Pos: [92, 112] cc => I, Pos: [101, 108] xx => I, Pos: [101, 108] xx => I, Pos: [104, 115] xx => I, Pos: [104, 115] xx => I, Pos: [107, 109] cc => I, Pos: [107, 109] cc => I, Pos: [108, 114] xx => I, Pos: [108, 114] xx => I, Pos: [110, 124] cc => I, Pos: [110, 124] cc => I, Pos: [111, 118] cc => I, Pos: [111, 118] cc => I, Pos: [112, 117, 127] ccc => cc, Pos: [114, 121] xx => I, Pos: [114, 121] xx => I, Pos: [121, 128] xx => I, Pos: [121, 128] xx => I, Pos: [128, 136] xx => I, Pos: [128, 136] xx => I, Pos: [135, 143] cc => I, Pos: [135, 143] cc => I, Pos: [136, 142] xx => I, Pos: [136, 142] xx => I, Pos: [138, 151, 152] xcx => c, Pos: [142, 146] xx => I, Pos: [142, 146] xx => I, Pos: [162, 179] cc => I, Pos: [162, 179] cc => I, Pos: [164, 169] xx => I, Pos: [164, 169] xx => I, Pos: [165, 172] xx => I, Pos: [165, 172] xx => I, Pos: [166, 171] xx => I, Pos: [166, 171] xx => I, Pos: [168, 173, 180] ccc => cc, Pos: [172, 183] xx => I, Pos: [172, 183] xx => I, Pos: [174, 178] cc => I, Pos: [174, 178] cc => I, Pos: [176, 187] cc => I, Pos: [176, 187] cc => I, Pos: [182, 185] cc => I, Pos: [182, 185] cc => I, Pos: [185, 195] cc => I, Pos: [185, 195] cc => I, Pos: [192, 203, 207] xcx => c, Pos: [197, 200] xx => I, Pos: [197, 200] xx => I, Pos: [200, 206] xx => I, Pos: [200, 206] xx => I, Pos: [204, 212] cc => I, Pos: [204, 212] cc => I, Pos: [205, 218] cc => I, Pos: [205, 218] cc => I, Pos: [206, 214] xx => I, Pos: [206, 214] xx => I, Pos: [218, 227] cc => I, Pos: [218, 227] cc => I, Pos: [219, 246] cc => I, Pos: [219, 246] cc => I, Pos: [222, 232] cc => I, Pos: [222, 232] cc => I, Pos: [225, 234] cc => I, Pos: [225, 234] cc => I, Pos: [227, 235] cc => I, Pos: [227, 235] cc => I, Pos: [228, 237] xx => I, Pos: [228, 237] xx => I, Pos: [230, 238] xx => I, Pos: [230, 238] xx => I, Pos: [236, 239] cc => I, Pos: [236, 239] cc => I, Pos: [237, 242] xx => I, Pos: [237, 242] xx => I, Pos: [241, 248] cc => I, Pos: [241, 248] cc => I, Pos: [242, 249] xx => I, Pos: [242, 249] xx => I, Pos: [243, 250] xx => I, Pos: [243, 250] xx => I, Pos: [249, 255] xx => I, Pos: [249, 255] xx => I, Pos: [255, 262] xx => I, Pos: [255, 262] xx => I, Pos: [261, 263] cc => I, Pos: [261, 263] cc => I]

Plan: 1
[Pos: [1, 6] cc => I,
 Pos: [8, 21] cc => I,
 Pos: [26, 34] cc => I,
 Pos: [29, 47] xx => I,
 Pos: [36, 41] xx => I,
 Pos: [40, 48] cc => I,
 Pos: [54, 71] cc => I,
 Pos: [61, 86] cc => I,
 Pos: [70, 77] cc => I,
 Pos: [82, 88] cc => I,
 Pos: [83, 96] cc => I,
 Pos: [84, 92] cc => I,
 Pos: [85, 89, 95] ccc => cc,
 Pos: [101, 108] xx => I,
 Pos: [104, 115] xx => I,
 Pos: [107, 109] cc => I,
 Pos: [110, 124] cc => I,
 Pos: [111, 118] cc => I,
 Pos: [112, 117, 127] ccc => cc,
 Pos: [114, 121] xx => I,
 Pos: [128, 136] xx => I,
 Pos: [135, 143] cc => I,
 Pos: [138, 151, 152] xcx => c,
 Pos: [142, 146] xx => I,
 Pos: [162, 179] cc => I,
 Pos: [164, 169] xx => I,
 Pos: [165, 172] xx => I,
 Pos: [166, 171] xx => I,
 Pos: [168, 173, 180] ccc => cc,
 Pos: [174, 178] cc => I,
 Pos: [176, 187] cc => I,
 Pos: [182, 185] cc => I,
 Pos: [192, 203, 207] xcx => c,
 Pos: [197, 200] xx => I,
 Pos: [204, 212] cc => I,
 Pos: [205, 218] cc => I,
 Pos: [206, 214] xx => I,
 Pos: [219, 246] cc => I,
 Pos: [222, 232] cc => I,
 Pos: [225, 234] cc => I,
 Pos: [227, 235] cc => I,
 Pos: [228, 237] xx => I,
 Pos: [230, 238] xx => I,
 Pos: [236, 239] cc => I,
 Pos: [241, 248] cc => I,
 Pos: [242, 249] xx => I,
 Pos: [243, 250] xx => I,
 Pos: [255, 262] xx => I,
 Pos: [261, 263] cc => I]
Change: 49, Saving: 152

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [1, 6] cc => I,
 Pos: [8, 21] cc => I,
 Pos: [26, 34] cc => I,
 Pos: [29, 47] xx => I,
 Pos: [36, 41] xx => I,
 Pos: [40, 48] cc => I,
 Pos: [54, 71] cc => I,
 Pos: [61, 86] cc => I,
 Pos: [70, 77] cc => I,
 Pos: [82, 88] cc => I,
 Pos: [83, 96] cc => I,
 Pos: [84, 92] cc => I,
 Pos: [85, 89, 95] ccc => cc,
 Pos: [101, 108] xx => I,
 Pos: [104, 115] xx => I,
 Pos: [107, 109] cc => I,
 Pos: [110, 124] cc => I,
 Pos: [111, 118] cc => I,
 Pos: [112, 117, 127] ccc => cc,
 Pos: [114, 121] xx => I,
 Pos: [128, 136] xx => I,
 Pos: [135, 143] cc => I,
 Pos: [138, 151, 152] xcx => c,
 Pos: [142, 146] xx => I,
 Pos: [162, 179] cc => I,
 Pos: [164, 169] xx => I,
 Pos: [165, 172] xx => I,
 Pos: [166, 171] xx => I,
 Pos: [168, 173, 180] ccc => cc,
 Pos: [174, 178] cc => I,
 Pos: [176, 187] cc => I,
 Pos: [182, 185] cc => I,
 Pos: [192, 203, 207] xcx => c,
 Pos: [197, 200] xx => I,
 Pos: [204, 212] cc => I,
 Pos: [205, 218] cc => I,
 Pos: [206, 214] xx => I,
 Pos: [219, 246] cc => I,
 Pos: [222, 232] cc => I,
 Pos: [225, 234] cc => I,
 Pos: [227, 235] cc => I,
 Pos: [228, 237] xx => I,
 Pos: [230, 238] xx => I,
 Pos: [236, 239] cc => I,
 Pos: [241, 248] cc => I,
 Pos: [242, 249] xx => I,
 Pos: [243, 250] xx => I,
 Pos: [255, 262] xx => I,
 Pos: [261, 263] cc => I]
Change: 49, Saving: 152

Circuit before: xccccxcccccxxxxccxxcccccxccccxxcccccxxxccxxxxcxxccccxccccccxxcccccxxxcccccxxxccccccccccxccccccccccxccxxxxcccxcccccxxcccccxxcccccxxxcccccxxxxccxcccxxxcccxxxxccccccccxxxccxxxxccccccccccxccccccccxccccxxcxxccccxxxcccccxxccccxcccccccxxxxcccccxxcccxxcccccxxccccxxxxcccxcccccxc
---------------
Apply:  Pos: [1, 6] cc => I
Apply:  Pos: [8, 21] cc => I
Apply:  Pos: [26, 34] cc => I
Apply:  Pos: [29, 47] xx => I
Apply:  Pos: [36, 41] xx => I
Apply:  Pos: [40, 48] cc => I
Apply:  Pos: [54, 71] cc => I
Apply:  Pos: [61, 86] cc => I
Apply:  Pos: [70, 77] cc => I
Apply:  Pos: [82, 88] cc => I
Apply:  Pos: [83, 96] cc => I
Apply:  Pos: [84, 92] cc => I
Apply:  Pos: [85, 89, 95] ccc => cc
Apply:  Pos: [101, 108] xx => I
Apply:  Pos: [104, 115] xx => I
Apply:  Pos: [107, 109] cc => I
Apply:  Pos: [110, 124] cc => I
Apply:  Pos: [111, 118] cc => I
Apply:  Pos: [112, 117, 127] ccc => cc
Apply:  Pos: [114, 121] xx => I
Apply:  Pos: [128, 136] xx => I
Apply:  Pos: [135, 143] cc => I
Apply:  Pos: [138, 151, 152] xcx => c
Apply:  Pos: [142, 146] xx => I
Apply:  Pos: [162, 179] cc => I
Apply:  Pos: [164, 169] xx => I
Apply:  Pos: [165, 172] xx => I
Apply:  Pos: [166, 171] xx => I
Apply:  Pos: [168, 173, 180] ccc => cc
Apply:  Pos: [174, 178] cc => I
Apply:  Pos: [176, 187] cc => I
Apply:  Pos: [182, 185] cc => I
Apply:  Pos: [192, 203, 207] xcx => c
Apply:  Pos: [197, 200] xx => I
Apply:  Pos: [204, 212] cc => I
Apply:  Pos: [205, 218] cc => I
Apply:  Pos: [206, 214] xx => I
Apply:  Pos: [219, 246] cc => I
Apply:  Pos: [222, 232] cc => I
Apply:  Pos: [225, 234] cc => I
Apply:  Pos: [227, 235] cc => I
Apply:  Pos: [228, 237] xx => I
Apply:  Pos: [230, 238] xx => I
Apply:  Pos: [236, 239] cc => I
Apply:  Pos: [241, 248] cc => I
Apply:  Pos: [242, 249] xx => I
Apply:  Pos: [243, 250] xx => I
Apply:  Pos: [255, 262] xx => I
Apply:  Pos: [261, 263] cc => I
---------------
Circuit after: xcccxcccxxxxccxxccccxcccxccccxxcxxxcxcccxcccccxxccccxxxcccxxxcccccxccccccxccxxccccccccxcccxxccccxcxccccxxccxxxcccccccccxccccxcccccccccccxcxcxccccxccxccccxxcccccccccxxxccccccxc

--------End Timer [apply mapping plan]:  0.0

[19], [15, 0], [5, 11], [6, 8], [8], [12, 7], [4, 13], [0, 9], [16], [17], [4], [1], [10, 2], [13, 5], [0], [12], [16, 14], [6, 9], [5, 15], [7, 8], [16], [12, 11], [3, 13], [4, 1], [11], [16, 3], [5, 0], [14, 17], [1, 18], [9], [6], [13, 17], [10], [16], [5], [6, 8], [3], [7, 6], [11, 0], [4, 13], [6], [3, 5], [9, 8], [17, 11], [19, 18], [12, 7], [3], [2], [13, 10], [1, 18], [5, 15], [12, 11], [5], [0], [18], [3, 10], [6, 9], [4, 17], [10], [19], [4], [0, 9], [18, 6], [3, 13], [16, 14], [14, 4], [7], [4, 17], [3, 5], [13, 10], [16, 3], [11, 15], [7, 8], [17], [3, 13], [9, 8], [4], [14], [17, 12], [6, 8], [1, 12], [7, 9], [11, 7], [19, 12], [9, 8], [10, 5], [13], [4, 17], [15, 0], [7, 9], [14], [1], [11, 7], [6, 9], [4, 13], [2, 15], [18], [2, 15], [4], [0, 9], [7, 8], [13, 10], [14, 4], [6], [8], [14, 17], [4, 1], [1], [10], [0], [3, 5], [12, 7], [14, 4], [3, 10], [5, 0], [11, 7], [6, 9], [12, 7], [4, 18], [9], [1, 18], [4, 17], [3, 13], [12, 18], [0], [16, 3], [17, 12], [3, 10], [13, 5], [12, 11], [1, 18], [1, 19], [16, 3], [9, 8], [7, 6], [5, 11], [7], [13, 5], [9], [12, 11], [10], [5, 11], [12, 18], [4, 13], [2, 15], [3], [19, 18], [0, 9], [5], [16, 3], [1, 12], [14, 13], [6, 8], [1], [13], [19, 12], [3, 10], [4, 1], [2, 15], [3, 5], [5, 15], [12, 18], [13, 10], [1, 19], [9], [19], [7], [6, 8], [13, 5], [10, 2], [18, 6], [11, 7], [0, 9], [11], [16, 3], ----End Timer [Execute Mapping]:  1.703117847442627

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[95, 97]
[97, 144]
[144, 158]
[152, 167]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[77, 90]
[136, 166]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[125, 127, 132]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 

[138, 147, 164]

------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[77, 90]
[136, 166]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[95, 97]
[97, 144]
[144, 158]
[152, 167]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.218926191329956

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [77, 90] xx => I, Pos: [77, 90] xx => I, Pos: [95, 97] cc => I, Pos: [95, 97] cc => I, Pos: [97, 144] cc => I, Pos: [97, 144] cc => I, Pos: [125, 127, 132] ccc => cc, Pos: [136, 166] xx => I, Pos: [136, 166] xx => I, Pos: [138, 147, 164] xcx => c, Pos: [144, 158] cc => I, Pos: [144, 158] cc => I, Pos: [152, 167] cc => I, Pos: [152, 167] cc => I]

Plan: 1
[Pos: [77, 90] xx => I,
 Pos: [95, 97] cc => I,
 Pos: [125, 127, 132] ccc => cc,
 Pos: [136, 166] xx => I,
 Pos: [138, 147, 164] xcx => c,
 Pos: [144, 158] cc => I,
 Pos: [152, 167] cc => I]
Change: 7, Saving: 20

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [77, 90] xx => I,
 Pos: [95, 97] cc => I,
 Pos: [125, 127, 132] ccc => cc,
 Pos: [136, 166] xx => I,
 Pos: [138, 147, 164] xcx => c,
 Pos: [144, 158] cc => I,
 Pos: [152, 167] cc => I]
Change: 7, Saving: 20

Circuit before: xcccxcccxxxxccxxccccxcccxccccxxcxxxcxcccxcccccxxccccxxxcccxxxcccccxccccccxccxxccccccccxcccxxccccxcxccccxxccxxxcccccccccxccccxcccccccccccxcxcxccccxccxccccxxcccccccccxxxccccccxc
---------------
Apply:  Pos: [77, 90] xx => I
Apply:  Pos: [95, 97] cc => I
Apply:  Pos: [125, 127, 132] ccc => cc
Apply:  Pos: [136, 166] xx => I
Apply:  Pos: [138, 147, 164] xcx => c
Apply:  Pos: [144, 158] cc => I
Apply:  Pos: [152, 167] cc => I
---------------
Circuit after: xcccxcccxxxxccxxccccxcccxccccxxcxxxcxcccxcccccxxccccxxxcccxxxcccccxccccccxccxccccccccxcccxcccxxccccxxccxxxcccccccccxccccxcccccccccccccxcccxcxcccxxccccccccxcccccxc

--------End Timer [apply mapping plan]:  0.0

[19], [15, 0], [5, 11], [6, 8], [8], [12, 7], [4, 13], [0, 9], [16], [17], [4], [1], [10, 2], [13, 5], [0], [12], [16, 14], [6, 9], [5, 15], [7, 8], [16], [12, 11], [3, 13], [4, 1], [11], [16, 3], [5, 0], [14, 17], [1, 18], [9], [6], [13, 17], [10], [16], [5], [6, 8], [3], [7, 6], [11, 0], [4, 13], [6], [3, 5], [9, 8], [17, 11], [19, 18], [12, 7], [3], [2], [13, 10], [1, 18], [5, 15], [12, 11], [5], [0], [18], [3, 10], [6, 9], [4, 17], [10], [19], [4], [0, 9], [18, 6], [3, 13], [16, 14], [14, 4], [7], [4, 17], [3, 5], [13, 10], [16, 3], [11, 15], [7, 8], [17], [3, 13], [9, 8], [4], [17, 12], [6, 8], [1, 12], [7, 9], [11, 7], [19, 12], [9, 8], [10, 5], [13], [4, 17], [15, 0], [7, 9], [1], [11, 7], [6, 9], [4, 13], [18], [4], [0, 9], [7, 8], [13, 10], [14, 4], [6], [8], [14, 17], [4, 1], [1], [10], [0], [3, 5], [12, 7], [14, 4], [3, 10], [5, 0], [11, 7], [6, 9], [12, 7], [4, 18], [9], [1, 18], [4, 17], [3, 13], [12, 18], [0], [16, 10], [17, 12], [3, 10], [13, 5], [12, 11], [1, 19], [1, 18], [9, 8], [7, 6], [5, 11], [13, 5], [0, 9], [12, 11], [10], [5, 11], [12, 18], [4, 13], [3], [19, 18], [5], [16, 3], [1, 12], [14, 13], [1], [13], [19, 12], [3, 10], [4, 1], [3, 5], [5, 15], [12, 18], [13, 10], [1, 19], [19], [13, 5], [10, 2], [18, 6], [11, 7], [0, 9], [11], [16, 3], ----End Timer [Execute Mapping]:  1.218926191329956

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[132, 159]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[132, 159]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.1318151950836182

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [132, 159] cc => I, Pos: [132, 159] cc => I]

Plan: 1
[Pos: [132, 159] cc => I]
Change: 1, Saving: 4

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [132, 159] cc => I]
Change: 1, Saving: 4

Circuit before: xcccxcccxxxxccxxccccxcccxccccxxcxxxcxcccxcccccxxccccxxxcccxxxcccccxccccccxccxccccccccxcccxcccxxccccxxccxxxcccccccccxccccxcccccccccccccxcccxcxcccxxccccccccxcccccxc
---------------
Apply:  Pos: [132, 159] cc => I
---------------
Circuit after: xcccxcccxxxxccxxccccxcccxccccxxcxxxcxcccxcccccxxccccxxxcccxxxcccccxccccccxccxccccccccxcccxcccxxccccxxccxxxcccccccccxccccxccccccccccccxcccxcxcccxxccccccccxccccxc

--------End Timer [apply mapping plan]:  0.0

[19], [15, 0], [5, 11], [6, 8], [8], [12, 7], [4, 13], [0, 9], [16], [17], [4], [1], [10, 2], [13, 5], [0], [12], [16, 14], [6, 9], [5, 15], [7, 8], [16], [12, 11], [3, 13], [4, 1], [11], [16, 3], [5, 0], [14, 17], [1, 18], [9], [6], [13, 17], [10], [16], [5], [6, 8], [3], [7, 6], [11, 0], [4, 13], [6], [3, 5], [9, 8], [17, 11], [19, 18], [12, 7], [3], [2], [13, 10], [1, 18], [5, 15], [12, 11], [5], [0], [18], [3, 10], [6, 9], [4, 17], [10], [19], [4], [0, 9], [18, 6], [3, 13], [16, 14], [14, 4], [7], [4, 17], [3, 5], [13, 10], [16, 3], [11, 15], [7, 8], [17], [3, 13], [9, 8], [4], [17, 12], [6, 8], [1, 12], [7, 9], [11, 7], [19, 12], [9, 8], [10, 5], [13], [4, 17], [15, 0], [7, 9], [1], [11, 7], [6, 9], [4, 13], [18], [4], [0, 9], [7, 8], [13, 10], [14, 4], [6], [8], [14, 17], [4, 1], [1], [10], [0], [3, 5], [12, 7], [14, 4], [3, 10], [5, 0], [11, 7], [6, 9], [12, 7], [4, 18], [9], [1, 18], [4, 17], [3, 13], [12, 18], [0], [16, 10], [17, 12], [3, 10], [13, 5], [12, 11], [1, 18], [1, 19], [9, 8], [7, 6], [5, 11], [13, 5], [12, 11], [10], [5, 11], [12, 18], [4, 13], [3], [19, 18], [5], [16, 3], [1, 12], [14, 13], [1], [13], [19, 12], [3, 10], [4, 1], [3, 5], [5, 15], [12, 18], [13, 10], [1, 19], [19], [13, 5], [10, 2], [18, 6], [11, 7], [11], [16, 3], ----End Timer [Execute Mapping]:  1.1318151950836182

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.0938193798065186

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

..........

Total Plans: 0

--------End Timer [Generate Plans]:  0.0

There's no mapping plan.
[19], [15, 0], [5, 11], [6, 8], [8], [12, 7], [4, 13], [0, 9], [16], [17], [4], [1], [10, 2], [13, 5], [0], [12], [16, 14], [6, 9], [5, 15], [7, 8], [16], [12, 11], [3, 13], [4, 1], [11], [16, 3], [5, 0], [14, 17], [1, 18], [9], [6], [13, 17], [10], [16], [5], [6, 8], [3], [7, 6], [11, 0], [4, 13], [6], [3, 5], [9, 8], [17, 11], [19, 18], [12, 7], [3], [2], [13, 10], [1, 18], [5, 15], [12, 11], [5], [0], [18], [3, 10], [6, 9], [4, 17], [10], [19], [4], [0, 9], [18, 6], [3, 13], [16, 14], [14, 4], [7], [4, 17], [3, 5], [13, 10], [16, 3], [11, 15], [7, 8], [17], [3, 13], [9, 8], [4], [17, 12], [6, 8], [1, 12], [7, 9], [11, 7], [19, 12], [9, 8], [10, 5], [13], [4, 17], [15, 0], [7, 9], [1], [11, 7], [6, 9], [4, 13], [18], [4], [0, 9], [7, 8], [13, 10], [14, 4], [6], [8], [14, 17], [4, 1], [1], [10], [0], [3, 5], [12, 7], [14, 4], [3, 10], [5, 0], [11, 7], [6, 9], [12, 7], [4, 18], [9], [1, 18], [4, 17], [3, 13], [12, 18], [0], [16, 10], [17, 12], [3, 10], [13, 5], [12, 11], [1, 19], [1, 18], [9, 8], [7, 6], [5, 11], [13, 5], [12, 11], [10], [5, 11], [12, 18], [4, 13], [3], [19, 18], [5], [16, 3], [1, 12], [14, 13], [1], [13], [19, 12], [3, 10], [4, 1], [3, 5], [5, 15], [12, 18], [13, 10], [1, 19], [19], [13, 5], [10, 2], [18, 6], [11, 7], [11], [16, 3], ----End Timer [Execute Mapping]:  1.0938193798065186

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-x-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-x-x-cx-cx-x-x-x-x-cx-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-x-x-x-x-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-x-cx-cx-cx-x-x-x-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-cx-x-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-x-cx-cx-cx-cx-cx-x-cx 
     => total size: [270] (IBM)
 --------------------
 - qubits_num: 20, using gates: [x,cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 450


>> Solved circuit: 
Circuit Info: 
 - circuit: x-cx-cx-cx-x-cx-cx-cx-x-x-x-x-cx-cx-x-x-cx-cx-cx-cx-x-cx-cx-cx-x-cx-cx-cx-cx-x-x-cx-x-x-x-cx-x-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-x-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-cx-cx-x-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-x-cx-x-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-cx 
     => total size: [160] (IBM)
 --------------------
 - qubits_num: 20, using gates: [x,cx]
 - circuit depth: 31 - (small)
 - circuit cycle: 274

Reduced: 
 - size: 110 (40.74%)
 - cycle: 176 (39.11%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.1250309944152832

[19], [16, 14], [15, 0], [5, 11], [6, 8], [8], [16, 14], [12, 7], [19, 18], [4, 13], [0, 9], [16], [17], [4], [1], [10, 2], [13, 5], [0], [12], [16, 14], [6, 9], [19, 18], [5, 15], [7, 8], [16], [12, 11], [7, 9], [3, 13], [4, 1], [2], [11], [16, 3], [5, 0], [14, 17], [7, 9], [1, 18], [3], [9], [6], [13, 17], [12, 18], [3], [10], [16], [5], [6, 8], [3], [2], [12, 18], [7, 6], [11, 0], [4, 13], [6], [3, 5], [16, 14], [9, 8], [17, 11], [19, 18], [12, 7], [3], [2], [7, 8], [13, 10], [1, 18], [5, 15], [12, 11], [5], [0], [18], [3, 10], [1, 12], [16, 14], [6, 9], [4, 17], [10], [19], [4], [1, 12], [0, 9], [18, 6], [3, 13], [16, 14], [10, 2], [6, 9], [1, 19], [4, 17], [7, 8], [7], [10, 2], [14, 4], [3, 5], [13, 10], [1, 19], [16, 3], [11, 15], [4, 17], [6, 9], [7, 8], [17], [3, 13], [9, 8], [3], [4], [14], [15], [17, 12], [6, 8], [11, 0], [3], [11, 0], [10, 2], [14, 17], [1, 19], [7, 9], [3], [15], [11, 7], [19, 12], [14, 17], [9, 8], [10, 5], [3], [13], [4, 17], [10, 2], [15, 0], [7, 9], [1, 19], [3], [14], [1], [11, 7], [6, 9], [4, 13], [2, 15], [17, 12], [3], [18], [15], [4], [0, 9], [7, 8], [3], [17, 12], [13, 10], [14, 4], [3], [6], [8], [14, 17], [4, 1], [2, 15], [15], [1], [10], [0], [3, 5], [12, 7], [14, 4], [3, 10], [5, 0], [11, 7], [16, 14], [6, 9], [3], [0], [6], [12, 7], [4, 1], [3], [9], [6], [0], [1, 18], [5, 15], [4, 17], [10, 2], [3, 13], [5, 15], [16, 14], [4, 1], [12, 18], [7, 6], [0], [16, 3], [7, 6], [17, 12], [10, 2], [3, 10], [13, 5], [12, 11], [1, 18], [19], [16, 3], [9, 8], [7, 6], [5, 11], [16], [7], [13, 5], [16], [9], [12, 11], [1, 19], [7, 6], [4, 17], [16], [19], [10], [5, 11], [12, 18], [4, 13], [7, 6], [2, 15], [16], [3], [19, 18], [0, 9], [4, 17], [11, 7], [5], [16, 3], [11, 15], [1, 12], [14, 13], [10, 2], [6, 8], [4, 17], [16], [1], [8], [13], [11, 15], [19, 12], [10, 2], [4, 17], [6, 9], [16], [8], [6, 9], [3, 10], [14, 17], [16], [0], [4, 1], [2, 15], [11, 7], [3, 5], [14, 17], [16], [0], [5, 15], [12, 18], [13, 10], [1, 19], [16], [9], [19], [7], [6, 8], [13, 5], [4, 17], [16], [4, 17], [10, 2], [18, 6], [11, 7], [0, 9], [11], [16, 3], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[1, 6]
[8, 21]
[26, 34]
[40, 48]
[54, 71]
[70, 77]
[71, 81]
[61, 86]
[82, 88]
[84, 92]
[83, 96]
[107, 109]
[92, 112]
[111, 118]
[110, 124]
[135, 143]
[174, 178]
[162, 179]
[182, 185]
[176, 187]
[185, 195]
[204, 212]
[205, 218]
[218, 227]
[222, 232]
[225, 234]
[227, 235]
[236, 239]
[219, 246]
[241, 248]
[261, 263]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[36, 41]
[41, 46]
[29, 47]
[47, 60]
[101, 108]
[108, 114]
[104, 115]
[114, 121]
[121, 128]
[128, 136]
[136, 142]
[142, 146]
[164, 169]
[166, 171]
[165, 172]
[172, 183]
[197, 200]
[200, 206]
[206, 214]
[228, 237]
[230, 238]
[237, 242]
[242, 249]
[243, 250]
[249, 255]
[255, 262]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[112, 117, 127]
[168, 173, 180]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 

[138, 151, 152]
[192, 203, 207]

------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[85, 89, 95]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[36, 41]
[41, 46]
[29, 47]
[47, 60]
[101, 108]
[108, 114]
[104, 115]
[114, 121]
[121, 128]
[128, 136]
[136, 142]
[142, 146]
[164, 169]
[166, 171]
[165, 172]
[172, 183]
[197, 200]
[200, 206]
[206, 214]
[228, 237]
[230, 238]
[237, 242]
[242, 249]
[243, 250]
[249, 255]
[255, 262]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[1, 6]
[8, 21]
[26, 34]
[40, 48]
[54, 71]
[70, 77]
[71, 81]
[61, 86]
[82, 88]
[84, 92]
[83, 96]
[107, 109]
[92, 112]
[111, 118]
[110, 124]
[135, 143]
[174, 178]
[162, 179]
[182, 185]
[176, 187]
[185, 195]
[204, 212]
[205, 218]
[218, 227]
[222, 232]
[225, 234]
[227, 235]
[236, 239]
[219, 246]
[241, 248]
[261, 263]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.687509298324585

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [1, 6] cc => I, Pos: [1, 6] cc => I, Pos: [8, 21] cc => I, Pos: [8, 21] cc => I, Pos: [26, 34] cc => I, Pos: [26, 34] cc => I, Pos: [29, 47] xx => I, Pos: [29, 47] xx => I, Pos: [36, 41] xx => I, Pos: [36, 41] xx => I, Pos: [40, 48] cc => I, Pos: [40, 48] cc => I, Pos: [41, 46] xx => I, Pos: [41, 46] xx => I, Pos: [47, 60] xx => I, Pos: [47, 60] xx => I, Pos: [54, 71] cc => I, Pos: [54, 71] cc => I, Pos: [61, 86] cc => I, Pos: [61, 86] cc => I, Pos: [70, 77] cc => I, Pos: [70, 77] cc => I, Pos: [71, 81] cc => I, Pos: [71, 81] cc => I, Pos: [82, 88] cc => I, Pos: [82, 88] cc => I, Pos: [83, 96] cc => I, Pos: [83, 96] cc => I, Pos: [84, 92] cc => I, Pos: [84, 92] cc => I, Pos: [85, 89, 95] ccc => cc, Pos: [92, 112] cc => I, Pos: [92, 112] cc => I, Pos: [101, 108] xx => I, Pos: [101, 108] xx => I, Pos: [104, 115] xx => I, Pos: [104, 115] xx => I, Pos: [107, 109] cc => I, Pos: [107, 109] cc => I, Pos: [108, 114] xx => I, Pos: [108, 114] xx => I, Pos: [110, 124] cc => I, Pos: [110, 124] cc => I, Pos: [111, 118] cc => I, Pos: [111, 118] cc => I, Pos: [112, 117, 127] ccc => cc, Pos: [114, 121] xx => I, Pos: [114, 121] xx => I, Pos: [121, 128] xx => I, Pos: [121, 128] xx => I, Pos: [128, 136] xx => I, Pos: [128, 136] xx => I, Pos: [135, 143] cc => I, Pos: [135, 143] cc => I, Pos: [136, 142] xx => I, Pos: [136, 142] xx => I, Pos: [138, 151, 152] xcx => c, Pos: [142, 146] xx => I, Pos: [142, 146] xx => I, Pos: [162, 179] cc => I, Pos: [162, 179] cc => I, Pos: [164, 169] xx => I, Pos: [164, 169] xx => I, Pos: [165, 172] xx => I, Pos: [165, 172] xx => I, Pos: [166, 171] xx => I, Pos: [166, 171] xx => I, Pos: [168, 173, 180] ccc => cc, Pos: [172, 183] xx => I, Pos: [172, 183] xx => I, Pos: [174, 178] cc => I, Pos: [174, 178] cc => I, Pos: [176, 187] cc => I, Pos: [176, 187] cc => I, Pos: [182, 185] cc => I, Pos: [182, 185] cc => I, Pos: [185, 195] cc => I, Pos: [185, 195] cc => I, Pos: [192, 203, 207] xcx => c, Pos: [197, 200] xx => I, Pos: [197, 200] xx => I, Pos: [200, 206] xx => I, Pos: [200, 206] xx => I, Pos: [204, 212] cc => I, Pos: [204, 212] cc => I, Pos: [205, 218] cc => I, Pos: [205, 218] cc => I, Pos: [206, 214] xx => I, Pos: [206, 214] xx => I, Pos: [218, 227] cc => I, Pos: [218, 227] cc => I, Pos: [219, 246] cc => I, Pos: [219, 246] cc => I, Pos: [222, 232] cc => I, Pos: [222, 232] cc => I, Pos: [225, 234] cc => I, Pos: [225, 234] cc => I, Pos: [227, 235] cc => I, Pos: [227, 235] cc => I, Pos: [228, 237] xx => I, Pos: [228, 237] xx => I, Pos: [230, 238] xx => I, Pos: [230, 238] xx => I, Pos: [236, 239] cc => I, Pos: [236, 239] cc => I, Pos: [237, 242] xx => I, Pos: [237, 242] xx => I, Pos: [241, 248] cc => I, Pos: [241, 248] cc => I, Pos: [242, 249] xx => I, Pos: [242, 249] xx => I, Pos: [243, 250] xx => I, Pos: [243, 250] xx => I, Pos: [249, 255] xx => I, Pos: [249, 255] xx => I, Pos: [255, 262] xx => I, Pos: [255, 262] xx => I, Pos: [261, 263] cc => I, Pos: [261, 263] cc => I]

Plan: 1
[Pos: [1, 6] cc => I,
 Pos: [8, 21] cc => I,
 Pos: [26, 34] cc => I,
 Pos: [29, 47] xx => I,
 Pos: [36, 41] xx => I,
 Pos: [40, 48] cc => I,
 Pos: [54, 71] cc => I,
 Pos: [61, 86] cc => I,
 Pos: [70, 77] cc => I,
 Pos: [82, 88] cc => I,
 Pos: [83, 96] cc => I,
 Pos: [84, 92] cc => I,
 Pos: [85, 89, 95] ccc => cc,
 Pos: [101, 108] xx => I,
 Pos: [104, 115] xx => I,
 Pos: [107, 109] cc => I,
 Pos: [110, 124] cc => I,
 Pos: [111, 118] cc => I,
 Pos: [112, 117, 127] ccc => cc,
 Pos: [114, 121] xx => I,
 Pos: [128, 136] xx => I,
 Pos: [135, 143] cc => I,
 Pos: [138, 151, 152] xcx => c,
 Pos: [142, 146] xx => I,
 Pos: [162, 179] cc => I,
 Pos: [164, 169] xx => I,
 Pos: [165, 172] xx => I,
 Pos: [166, 171] xx => I,
 Pos: [168, 173, 180] ccc => cc,
 Pos: [174, 178] cc => I,
 Pos: [176, 187] cc => I,
 Pos: [182, 185] cc => I,
 Pos: [192, 203, 207] xcx => c,
 Pos: [197, 200] xx => I,
 Pos: [204, 212] cc => I,
 Pos: [205, 218] cc => I,
 Pos: [206, 214] xx => I,
 Pos: [219, 246] cc => I,
 Pos: [222, 232] cc => I,
 Pos: [225, 234] cc => I,
 Pos: [227, 235] cc => I,
 Pos: [228, 237] xx => I,
 Pos: [230, 238] xx => I,
 Pos: [236, 239] cc => I,
 Pos: [241, 248] cc => I,
 Pos: [242, 249] xx => I,
 Pos: [243, 250] xx => I,
 Pos: [255, 262] xx => I,
 Pos: [261, 263] cc => I]
Change: 49, Saving: 49

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.1251680850982666

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [1, 6] cc => I,
 Pos: [8, 21] cc => I,
 Pos: [26, 34] cc => I,
 Pos: [29, 47] xx => I,
 Pos: [36, 41] xx => I,
 Pos: [40, 48] cc => I,
 Pos: [54, 71] cc => I,
 Pos: [61, 86] cc => I,
 Pos: [70, 77] cc => I,
 Pos: [82, 88] cc => I,
 Pos: [83, 96] cc => I,
 Pos: [84, 92] cc => I,
 Pos: [85, 89, 95] ccc => cc,
 Pos: [101, 108] xx => I,
 Pos: [104, 115] xx => I,
 Pos: [107, 109] cc => I,
 Pos: [110, 124] cc => I,
 Pos: [111, 118] cc => I,
 Pos: [112, 117, 127] ccc => cc,
 Pos: [114, 121] xx => I,
 Pos: [128, 136] xx => I,
 Pos: [135, 143] cc => I,
 Pos: [138, 151, 152] xcx => c,
 Pos: [142, 146] xx => I,
 Pos: [162, 179] cc => I,
 Pos: [164, 169] xx => I,
 Pos: [165, 172] xx => I,
 Pos: [166, 171] xx => I,
 Pos: [168, 173, 180] ccc => cc,
 Pos: [174, 178] cc => I,
 Pos: [176, 187] cc => I,
 Pos: [182, 185] cc => I,
 Pos: [192, 203, 207] xcx => c,
 Pos: [197, 200] xx => I,
 Pos: [204, 212] cc => I,
 Pos: [205, 218] cc => I,
 Pos: [206, 214] xx => I,
 Pos: [219, 246] cc => I,
 Pos: [222, 232] cc => I,
 Pos: [225, 234] cc => I,
 Pos: [227, 235] cc => I,
 Pos: [228, 237] xx => I,
 Pos: [230, 238] xx => I,
 Pos: [236, 239] cc => I,
 Pos: [241, 248] cc => I,
 Pos: [242, 249] xx => I,
 Pos: [243, 250] xx => I,
 Pos: [255, 262] xx => I,
 Pos: [261, 263] cc => I]
Change: 49, Saving: 49

Circuit before: xccccxcccccxxxxccxxcccccxccccxxcccccxxxccxxxxcxxccccxccccccxxcccccxxxcccccxxxccccccccccxccccccccccxccxxxxcccxcccccxxcccccxxcccccxxxcccccxxxxccxcccxxxcccxxxxccccccccxxxccxxxxccccccccccxccccccccxccccxxcxxccccxxxcccccxxccccxcccccccxxxxcccccxxcccxxcccccxxccccxxxxcccxcccccxc
---------------
Apply:  Pos: [1, 6] cc => I
Apply:  Pos: [8, 21] cc => I
Apply:  Pos: [26, 34] cc => I
Apply:  Pos: [29, 47] xx => I
Apply:  Pos: [36, 41] xx => I
Apply:  Pos: [40, 48] cc => I
Apply:  Pos: [54, 71] cc => I
Apply:  Pos: [61, 86] cc => I
Apply:  Pos: [70, 77] cc => I
Apply:  Pos: [82, 88] cc => I
Apply:  Pos: [83, 96] cc => I
Apply:  Pos: [84, 92] cc => I
Apply:  Pos: [85, 89, 95] ccc => cc
Apply:  Pos: [101, 108] xx => I
Apply:  Pos: [104, 115] xx => I
Apply:  Pos: [107, 109] cc => I
Apply:  Pos: [110, 124] cc => I
Apply:  Pos: [111, 118] cc => I
Apply:  Pos: [112, 117, 127] ccc => cc
Apply:  Pos: [114, 121] xx => I
Apply:  Pos: [128, 136] xx => I
Apply:  Pos: [135, 143] cc => I
Apply:  Pos: [138, 151, 152] xcx => c
Apply:  Pos: [142, 146] xx => I
Apply:  Pos: [162, 179] cc => I
Apply:  Pos: [164, 169] xx => I
Apply:  Pos: [165, 172] xx => I
Apply:  Pos: [166, 171] xx => I
Apply:  Pos: [168, 173, 180] ccc => cc
Apply:  Pos: [174, 178] cc => I
Apply:  Pos: [176, 187] cc => I
Apply:  Pos: [182, 185] cc => I
Apply:  Pos: [192, 203, 207] xcx => c
Apply:  Pos: [197, 200] xx => I
Apply:  Pos: [204, 212] cc => I
Apply:  Pos: [205, 218] cc => I
Apply:  Pos: [206, 214] xx => I
Apply:  Pos: [219, 246] cc => I
Apply:  Pos: [222, 232] cc => I
Apply:  Pos: [225, 234] cc => I
Apply:  Pos: [227, 235] cc => I
Apply:  Pos: [228, 237] xx => I
Apply:  Pos: [230, 238] xx => I
Apply:  Pos: [236, 239] cc => I
Apply:  Pos: [241, 248] cc => I
Apply:  Pos: [242, 249] xx => I
Apply:  Pos: [243, 250] xx => I
Apply:  Pos: [255, 262] xx => I
Apply:  Pos: [261, 263] cc => I
---------------
Circuit after: xcccxcccxxxxccxxccccxcccxccccxxcxxxcxcccxcccccxxccccxxxcccxxxcccccxccccccxccxxccccccccxcccxxccccxcxccccxxccxxxcccccccccxccccxcccccccccccxcxcxccccxccxccccxxcccccccccxxxccccccxc

--------End Timer [apply mapping plan]:  0.0

[19], [15, 0], [5, 11], [6, 8], [8], [12, 7], [4, 13], [0, 9], [16], [17], [4], [1], [10, 2], [13, 5], [0], [12], [16, 14], [6, 9], [5, 15], [7, 8], [16], [12, 11], [3, 13], [4, 1], [11], [16, 3], [5, 0], [14, 17], [1, 18], [9], [6], [13, 17], [10], [16], [5], [6, 8], [3], [7, 6], [11, 0], [4, 13], [6], [3, 5], [9, 8], [17, 11], [19, 18], [12, 7], [3], [2], [13, 10], [1, 18], [5, 15], [12, 11], [5], [0], [18], [3, 10], [6, 9], [4, 17], [10], [19], [4], [0, 9], [18, 6], [3, 13], [16, 14], [14, 4], [7], [4, 17], [3, 5], [13, 10], [16, 3], [11, 15], [7, 8], [17], [3, 13], [9, 8], [4], [14], [17, 12], [6, 8], [1, 12], [7, 9], [11, 7], [19, 12], [9, 8], [10, 5], [13], [4, 17], [15, 0], [7, 9], [14], [1], [11, 7], [6, 9], [4, 13], [2, 15], [18], [2, 15], [4], [0, 9], [7, 8], [13, 10], [14, 4], [6], [8], [14, 17], [4, 1], [1], [10], [0], [3, 5], [12, 7], [14, 4], [3, 10], [5, 0], [11, 7], [6, 9], [12, 7], [4, 18], [9], [1, 18], [4, 17], [3, 13], [12, 18], [0], [16, 3], [17, 12], [3, 10], [13, 5], [12, 11], [1, 18], [1, 19], [16, 3], [9, 8], [7, 6], [5, 11], [7], [13, 5], [9], [12, 11], [10], [5, 11], [12, 18], [4, 13], [2, 15], [3], [19, 18], [0, 9], [5], [16, 3], [1, 12], [14, 13], [6, 8], [1], [13], [19, 12], [3, 10], [4, 1], [2, 15], [3, 5], [5, 15], [12, 18], [13, 10], [1, 19], [9], [19], [7], [6, 8], [13, 5], [10, 2], [18, 6], [11, 7], [0, 9], [11], [16, 3], ----End Timer [Execute Mapping]:  1.8126773834228516

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[95, 97]
[97, 144]
[144, 158]
[152, 167]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[77, 90]
[136, 166]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[125, 127, 132]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 

[138, 147, 164]

------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[77, 90]
[136, 166]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[95, 97]
[97, 144]
[144, 158]
[152, 167]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.2030816078186035

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [77, 90] xx => I, Pos: [77, 90] xx => I, Pos: [95, 97] cc => I, Pos: [95, 97] cc => I, Pos: [97, 144] cc => I, Pos: [97, 144] cc => I, Pos: [125, 127, 132] ccc => cc, Pos: [136, 166] xx => I, Pos: [136, 166] xx => I, Pos: [138, 147, 164] xcx => c, Pos: [144, 158] cc => I, Pos: [144, 158] cc => I, Pos: [152, 167] cc => I, Pos: [152, 167] cc => I]

Plan: 1
[Pos: [77, 90] xx => I,
 Pos: [95, 97] cc => I,
 Pos: [125, 127, 132] ccc => cc,
 Pos: [136, 166] xx => I,
 Pos: [138, 147, 164] xcx => c,
 Pos: [144, 158] cc => I,
 Pos: [152, 167] cc => I]
Change: 7, Saving: 7

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.015624761581420898

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [77, 90] xx => I,
 Pos: [95, 97] cc => I,
 Pos: [125, 127, 132] ccc => cc,
 Pos: [136, 166] xx => I,
 Pos: [138, 147, 164] xcx => c,
 Pos: [144, 158] cc => I,
 Pos: [152, 167] cc => I]
Change: 7, Saving: 7

Circuit before: xcccxcccxxxxccxxccccxcccxccccxxcxxxcxcccxcccccxxccccxxxcccxxxcccccxccccccxccxxccccccccxcccxxccccxcxccccxxccxxxcccccccccxccccxcccccccccccxcxcxccccxccxccccxxcccccccccxxxccccccxc
---------------
Apply:  Pos: [77, 90] xx => I
Apply:  Pos: [95, 97] cc => I
Apply:  Pos: [125, 127, 132] ccc => cc
Apply:  Pos: [136, 166] xx => I
Apply:  Pos: [138, 147, 164] xcx => c
Apply:  Pos: [144, 158] cc => I
Apply:  Pos: [152, 167] cc => I
---------------
Circuit after: xcccxcccxxxxccxxccccxcccxccccxxcxxxcxcccxcccccxxccccxxxcccxxxcccccxccccccxccxccccccccxcccxcccxxccccxxccxxxcccccccccxccccxcccccccccccccxcccxcxcccxxccccccccxcccccxc

--------End Timer [apply mapping plan]:  0.0

[19], [15, 0], [5, 11], [6, 8], [8], [12, 7], [4, 13], [0, 9], [16], [17], [4], [1], [10, 2], [13, 5], [0], [12], [16, 14], [6, 9], [5, 15], [7, 8], [16], [12, 11], [3, 13], [4, 1], [11], [16, 3], [5, 0], [14, 17], [1, 18], [9], [6], [13, 17], [10], [16], [5], [6, 8], [3], [7, 6], [11, 0], [4, 13], [6], [3, 5], [9, 8], [17, 11], [19, 18], [12, 7], [3], [2], [13, 10], [1, 18], [5, 15], [12, 11], [5], [0], [18], [3, 10], [6, 9], [4, 17], [10], [19], [4], [0, 9], [18, 6], [3, 13], [16, 14], [14, 4], [7], [4, 17], [3, 5], [13, 10], [16, 3], [11, 15], [7, 8], [17], [3, 13], [9, 8], [4], [17, 12], [6, 8], [1, 12], [7, 9], [11, 7], [19, 12], [9, 8], [10, 5], [13], [4, 17], [15, 0], [7, 9], [1], [11, 7], [6, 9], [4, 13], [18], [4], [0, 9], [7, 8], [13, 10], [14, 4], [6], [8], [14, 17], [4, 1], [1], [10], [0], [3, 5], [12, 7], [14, 4], [3, 10], [5, 0], [11, 7], [6, 9], [12, 7], [4, 18], [9], [1, 18], [4, 17], [3, 13], [12, 18], [0], [16, 10], [17, 12], [3, 10], [13, 5], [12, 11], [1, 19], [1, 18], [9, 8], [7, 6], [5, 11], [13, 5], [0, 9], [12, 11], [10], [5, 11], [12, 18], [4, 13], [3], [19, 18], [5], [16, 3], [1, 12], [14, 13], [1], [13], [19, 12], [3, 10], [4, 1], [3, 5], [5, 15], [12, 18], [13, 10], [1, 19], [19], [13, 5], [10, 2], [18, 6], [11, 7], [0, 9], [11], [16, 3], ----End Timer [Execute Mapping]:  1.2187063694000244

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[132, 159]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[132, 159]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.1410894393920898

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [132, 159] cc => I, Pos: [132, 159] cc => I]

Plan: 1
[Pos: [132, 159] cc => I]
Change: 1, Saving: 1

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [132, 159] cc => I]
Change: 1, Saving: 1

Circuit before: xcccxcccxxxxccxxccccxcccxccccxxcxxxcxcccxcccccxxccccxxxcccxxxcccccxccccccxccxccccccccxcccxcccxxccccxxccxxxcccccccccxccccxcccccccccccccxcccxcxcccxxccccccccxcccccxc
---------------
Apply:  Pos: [132, 159] cc => I
---------------
Circuit after: xcccxcccxxxxccxxccccxcccxccccxxcxxxcxcccxcccccxxccccxxxcccxxxcccccxccccccxccxccccccccxcccxcccxxccccxxccxxxcccccccccxccccxccccccccccccxcccxcxcccxxccccccccxccccxc

--------End Timer [apply mapping plan]:  0.0

[19], [15, 0], [5, 11], [6, 8], [8], [12, 7], [4, 13], [0, 9], [16], [17], [4], [1], [10, 2], [13, 5], [0], [12], [16, 14], [6, 9], [5, 15], [7, 8], [16], [12, 11], [3, 13], [4, 1], [11], [16, 3], [5, 0], [14, 17], [1, 18], [9], [6], [13, 17], [10], [16], [5], [6, 8], [3], [7, 6], [11, 0], [4, 13], [6], [3, 5], [9, 8], [17, 11], [19, 18], [12, 7], [3], [2], [13, 10], [1, 18], [5, 15], [12, 11], [5], [0], [18], [3, 10], [6, 9], [4, 17], [10], [19], [4], [0, 9], [18, 6], [3, 13], [16, 14], [14, 4], [7], [4, 17], [3, 5], [13, 10], [16, 3], [11, 15], [7, 8], [17], [3, 13], [9, 8], [4], [17, 12], [6, 8], [1, 12], [7, 9], [11, 7], [19, 12], [9, 8], [10, 5], [13], [4, 17], [15, 0], [7, 9], [1], [11, 7], [6, 9], [4, 13], [18], [4], [0, 9], [7, 8], [13, 10], [14, 4], [6], [8], [14, 17], [4, 1], [1], [10], [0], [3, 5], [12, 7], [14, 4], [3, 10], [5, 0], [11, 7], [6, 9], [12, 7], [4, 18], [9], [1, 18], [4, 17], [3, 13], [12, 18], [0], [16, 10], [17, 12], [3, 10], [13, 5], [12, 11], [1, 18], [1, 19], [9, 8], [7, 6], [5, 11], [13, 5], [12, 11], [10], [5, 11], [12, 18], [4, 13], [3], [19, 18], [5], [16, 3], [1, 12], [14, 13], [1], [13], [19, 12], [3, 10], [4, 1], [3, 5], [5, 15], [12, 18], [13, 10], [1, 19], [19], [13, 5], [10, 2], [18, 6], [11, 7], [11], [16, 3], ----End Timer [Execute Mapping]:  1.1410894393920898

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.0926296710968018

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

..........

Total Plans: 0

--------End Timer [Generate Plans]:  0.0

There's no mapping plan.
[19], [15, 0], [5, 11], [6, 8], [8], [12, 7], [4, 13], [0, 9], [16], [17], [4], [1], [10, 2], [13, 5], [0], [12], [16, 14], [6, 9], [5, 15], [7, 8], [16], [12, 11], [3, 13], [4, 1], [11], [16, 3], [5, 0], [14, 17], [1, 18], [9], [6], [13, 17], [10], [16], [5], [6, 8], [3], [7, 6], [11, 0], [4, 13], [6], [3, 5], [9, 8], [17, 11], [19, 18], [12, 7], [3], [2], [13, 10], [1, 18], [5, 15], [12, 11], [5], [0], [18], [3, 10], [6, 9], [4, 17], [10], [19], [4], [0, 9], [18, 6], [3, 13], [16, 14], [14, 4], [7], [4, 17], [3, 5], [13, 10], [16, 3], [11, 15], [7, 8], [17], [3, 13], [9, 8], [4], [17, 12], [6, 8], [1, 12], [7, 9], [11, 7], [19, 12], [9, 8], [10, 5], [13], [4, 17], [15, 0], [7, 9], [1], [11, 7], [6, 9], [4, 13], [18], [4], [0, 9], [7, 8], [13, 10], [14, 4], [6], [8], [14, 17], [4, 1], [1], [10], [0], [3, 5], [12, 7], [14, 4], [3, 10], [5, 0], [11, 7], [6, 9], [12, 7], [4, 18], [9], [1, 18], [4, 17], [3, 13], [12, 18], [0], [16, 10], [17, 12], [3, 10], [13, 5], [12, 11], [1, 19], [1, 18], [9, 8], [7, 6], [5, 11], [13, 5], [12, 11], [10], [5, 11], [12, 18], [4, 13], [3], [19, 18], [5], [16, 3], [1, 12], [14, 13], [1], [13], [19, 12], [3, 10], [4, 1], [3, 5], [5, 15], [12, 18], [13, 10], [1, 19], [19], [13, 5], [10, 2], [18, 6], [11, 7], [11], [16, 3], ----End Timer [Execute Mapping]:  1.0926296710968018

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-x-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-x-x-cx-cx-x-x-x-x-cx-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-x-x-x-x-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-x-cx-cx-cx-x-x-x-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-cx-x-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-x-cx-cx-cx-cx-cx-x-cx 
     => total size: [270] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx,x]
 - circuit depth: 45 - (small)
 - circuit cycle: 450


>> Solved circuit: 
Circuit Info: 
 - circuit: x-cx-cx-cx-x-cx-cx-cx-x-x-x-x-cx-cx-x-x-cx-cx-cx-cx-x-cx-cx-cx-x-cx-cx-cx-cx-x-x-cx-x-x-x-cx-x-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-x-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-cx-cx-x-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-x-cx-x-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-cx 
     => total size: [160] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx,x]
 - circuit depth: 31 - (small)
 - circuit cycle: 274

Reduced: 
 - size: 110 (40.74%)
 - depth: 14 (31.11%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.10936689376831055

[19], [16, 14], [15, 0], [5, 11], [6, 8], [8], [16, 14], [12, 7], [19, 18], [4, 13], [0, 9], [16], [17], [4], [1], [10, 2], [13, 5], [0], [12], [16, 14], [6, 9], [19, 18], [5, 15], [7, 8], [16], [12, 11], [7, 9], [3, 13], [4, 1], [2], [11], [16, 3], [5, 0], [14, 17], [7, 9], [1, 18], [3], [9], [6], [13, 17], [12, 18], [3], [10], [16], [5], [6, 8], [3], [2], [12, 18], [7, 6], [11, 0], [4, 13], [6], [3, 5], [16, 14], [9, 8], [17, 11], [19, 18], [12, 7], [3], [2], [7, 8], [13, 10], [1, 18], [5, 15], [12, 11], [5], [0], [18], [3, 10], [1, 12], [16, 14], [6, 9], [4, 17], [10], [19], [4], [1, 12], [0, 9], [18, 6], [3, 13], [16, 14], [10, 2], [6, 9], [1, 19], [4, 17], [7, 8], [7], [10, 2], [14, 4], [3, 5], [13, 10], [1, 19], [16, 3], [11, 15], [4, 17], [6, 9], [7, 8], [17], [3, 13], [9, 8], [3], [4], [14], [15], [17, 12], [6, 8], [11, 0], [3], [11, 0], [10, 2], [14, 17], [1, 19], [7, 9], [3], [15], [11, 7], [19, 12], [14, 17], [9, 8], [10, 5], [3], [13], [4, 17], [10, 2], [15, 0], [7, 9], [1, 19], [3], [14], [1], [11, 7], [6, 9], [4, 13], [2, 15], [17, 12], [3], [18], [15], [4], [0, 9], [7, 8], [3], [17, 12], [13, 10], [14, 4], [3], [6], [8], [14, 17], [4, 1], [2, 15], [15], [1], [10], [0], [3, 5], [12, 7], [14, 4], [3, 10], [5, 0], [11, 7], [16, 14], [6, 9], [3], [0], [6], [12, 7], [4, 1], [3], [9], [6], [0], [1, 18], [5, 15], [4, 17], [10, 2], [3, 13], [5, 15], [16, 14], [4, 1], [12, 18], [7, 6], [0], [16, 3], [7, 6], [17, 12], [10, 2], [3, 10], [13, 5], [12, 11], [1, 18], [19], [16, 3], [9, 8], [7, 6], [5, 11], [16], [7], [13, 5], [16], [9], [12, 11], [1, 19], [7, 6], [4, 17], [16], [19], [10], [5, 11], [12, 18], [4, 13], [7, 6], [2, 15], [16], [3], [19, 18], [0, 9], [4, 17], [11, 7], [5], [16, 3], [11, 15], [1, 12], [14, 13], [10, 2], [6, 8], [4, 17], [16], [1], [8], [13], [11, 15], [19, 12], [10, 2], [4, 17], [6, 9], [16], [8], [6, 9], [3, 10], [14, 17], [16], [0], [4, 1], [2, 15], [11, 7], [3, 5], [14, 17], [16], [0], [5, 15], [12, 18], [13, 10], [1, 19], [16], [9], [19], [7], [6, 8], [13, 5], [4, 17], [16], [4, 17], [10, 2], [18, 6], [11, 7], [0, 9], [11], [16, 3], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[1, 6]
[8, 21]
[26, 34]
[40, 48]
[54, 71]
[70, 77]
[71, 81]
[61, 86]
[82, 88]
[84, 92]
[83, 96]
[107, 109]
[92, 112]
[111, 118]
[110, 124]
[135, 143]
[174, 178]
[162, 179]
[182, 185]
[176, 187]
[185, 195]
[204, 212]
[205, 218]
[218, 227]
[222, 232]
[225, 234]
[227, 235]
[236, 239]
[219, 246]
[241, 248]
[261, 263]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[36, 41]
[41, 46]
[29, 47]
[47, 60]
[101, 108]
[108, 114]
[104, 115]
[114, 121]
[121, 128]
[128, 136]
[136, 142]
[142, 146]
[164, 169]
[166, 171]
[165, 172]
[172, 183]
[197, 200]
[200, 206]
[206, 214]
[228, 237]
[230, 238]
[237, 242]
[242, 249]
[243, 250]
[249, 255]
[255, 262]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[112, 117, 127]
[168, 173, 180]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 

[138, 151, 152]
[192, 203, 207]

------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[85, 89, 95]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[36, 41]
[41, 46]
[29, 47]
[47, 60]
[101, 108]
[108, 114]
[104, 115]
[114, 121]
[121, 128]
[128, 136]
[136, 142]
[142, 146]
[164, 169]
[166, 171]
[165, 172]
[172, 183]
[197, 200]
[200, 206]
[206, 214]
[228, 237]
[230, 238]
[237, 242]
[242, 249]
[243, 250]
[249, 255]
[255, 262]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[1, 6]
[8, 21]
[26, 34]
[40, 48]
[54, 71]
[70, 77]
[71, 81]
[61, 86]
[82, 88]
[84, 92]
[83, 96]
[107, 109]
[92, 112]
[111, 118]
[110, 124]
[135, 143]
[174, 178]
[162, 179]
[182, 185]
[176, 187]
[185, 195]
[204, 212]
[205, 218]
[218, 227]
[222, 232]
[225, 234]
[227, 235]
[236, 239]
[219, 246]
[241, 248]
[261, 263]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.6866745948791504

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [1, 6] cc => I, Pos: [1, 6] cc => I, Pos: [8, 21] cc => I, Pos: [8, 21] cc => I, Pos: [26, 34] cc => I, Pos: [26, 34] cc => I, Pos: [29, 47] xx => I, Pos: [29, 47] xx => I, Pos: [36, 41] xx => I, Pos: [36, 41] xx => I, Pos: [40, 48] cc => I, Pos: [40, 48] cc => I, Pos: [41, 46] xx => I, Pos: [41, 46] xx => I, Pos: [47, 60] xx => I, Pos: [47, 60] xx => I, Pos: [54, 71] cc => I, Pos: [54, 71] cc => I, Pos: [61, 86] cc => I, Pos: [61, 86] cc => I, Pos: [70, 77] cc => I, Pos: [70, 77] cc => I, Pos: [71, 81] cc => I, Pos: [71, 81] cc => I, Pos: [82, 88] cc => I, Pos: [82, 88] cc => I, Pos: [83, 96] cc => I, Pos: [83, 96] cc => I, Pos: [84, 92] cc => I, Pos: [84, 92] cc => I, Pos: [85, 89, 95] ccc => cc, Pos: [92, 112] cc => I, Pos: [92, 112] cc => I, Pos: [101, 108] xx => I, Pos: [101, 108] xx => I, Pos: [104, 115] xx => I, Pos: [104, 115] xx => I, Pos: [107, 109] cc => I, Pos: [107, 109] cc => I, Pos: [108, 114] xx => I, Pos: [108, 114] xx => I, Pos: [110, 124] cc => I, Pos: [110, 124] cc => I, Pos: [111, 118] cc => I, Pos: [111, 118] cc => I, Pos: [112, 117, 127] ccc => cc, Pos: [114, 121] xx => I, Pos: [114, 121] xx => I, Pos: [121, 128] xx => I, Pos: [121, 128] xx => I, Pos: [128, 136] xx => I, Pos: [128, 136] xx => I, Pos: [135, 143] cc => I, Pos: [135, 143] cc => I, Pos: [136, 142] xx => I, Pos: [136, 142] xx => I, Pos: [138, 151, 152] xcx => c, Pos: [142, 146] xx => I, Pos: [142, 146] xx => I, Pos: [162, 179] cc => I, Pos: [162, 179] cc => I, Pos: [164, 169] xx => I, Pos: [164, 169] xx => I, Pos: [165, 172] xx => I, Pos: [165, 172] xx => I, Pos: [166, 171] xx => I, Pos: [166, 171] xx => I, Pos: [168, 173, 180] ccc => cc, Pos: [172, 183] xx => I, Pos: [172, 183] xx => I, Pos: [174, 178] cc => I, Pos: [174, 178] cc => I, Pos: [176, 187] cc => I, Pos: [176, 187] cc => I, Pos: [182, 185] cc => I, Pos: [182, 185] cc => I, Pos: [185, 195] cc => I, Pos: [185, 195] cc => I, Pos: [192, 203, 207] xcx => c, Pos: [197, 200] xx => I, Pos: [197, 200] xx => I, Pos: [200, 206] xx => I, Pos: [200, 206] xx => I, Pos: [204, 212] cc => I, Pos: [204, 212] cc => I, Pos: [205, 218] cc => I, Pos: [205, 218] cc => I, Pos: [206, 214] xx => I, Pos: [206, 214] xx => I, Pos: [218, 227] cc => I, Pos: [218, 227] cc => I, Pos: [219, 246] cc => I, Pos: [219, 246] cc => I, Pos: [222, 232] cc => I, Pos: [222, 232] cc => I, Pos: [225, 234] cc => I, Pos: [225, 234] cc => I, Pos: [227, 235] cc => I, Pos: [227, 235] cc => I, Pos: [228, 237] xx => I, Pos: [228, 237] xx => I, Pos: [230, 238] xx => I, Pos: [230, 238] xx => I, Pos: [236, 239] cc => I, Pos: [236, 239] cc => I, Pos: [237, 242] xx => I, Pos: [237, 242] xx => I, Pos: [241, 248] cc => I, Pos: [241, 248] cc => I, Pos: [242, 249] xx => I, Pos: [242, 249] xx => I, Pos: [243, 250] xx => I, Pos: [243, 250] xx => I, Pos: [249, 255] xx => I, Pos: [249, 255] xx => I, Pos: [255, 262] xx => I, Pos: [255, 262] xx => I, Pos: [261, 263] cc => I, Pos: [261, 263] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [1, 6] cc => I,
 Pos: [8, 21] cc => I,
 Pos: [26, 34] cc => I,
 Pos: [29, 47] xx => I,
 Pos: [36, 41] xx => I,
 Pos: [40, 48] cc => I,
 Pos: [54, 71] cc => I,
 Pos: [61, 86] cc => I,
 Pos: [70, 77] cc => I,
 Pos: [82, 88] cc => I,
 Pos: [83, 96] cc => I,
 Pos: [84, 92] cc => I,
 Pos: [85, 89, 95] ccc => cc,
 Pos: [101, 108] xx => I,
 Pos: [104, 115] xx => I,
 Pos: [107, 109] cc => I,
 Pos: [110, 124] cc => I,
 Pos: [111, 118] cc => I,
 Pos: [112, 117, 127] ccc => cc,
 Pos: [121, 128] xx => I,
 Pos: [135, 143] cc => I,
 Pos: [136, 142] xx => I,
 Pos: [138, 151, 152] xcx => c,
 Pos: [162, 179] cc => I,
 Pos: [164, 169] xx => I,
 Pos: [165, 172] xx => I,
 Pos: [166, 171] xx => I,
 Pos: [168, 173, 180] ccc => cc,
 Pos: [174, 178] cc => I,
 Pos: [176, 187] cc => I,
 Pos: [182, 185] cc => I,
 Pos: [192, 203, 207] xcx => c,
 Pos: [197, 200] xx => I,
 Pos: [204, 212] cc => I,
 Pos: [218, 227] cc => I,
 Pos: [206, 214] xx => I,
 Pos: [219, 246] cc => I,
 Pos: [222, 232] cc => I,
 Pos: [225, 234] cc => I,
 Pos: [228, 237] xx => I,
 Pos: [230, 238] xx => I,
 Pos: [236, 239] cc => I,
 Pos: [241, 248] cc => I,
 Pos: [242, 249] xx => I,
 Pos: [243, 250] xx => I,
 Pos: [255, 262] xx => I,
 Pos: [261, 263] cc => I]
Change: 47, Saving: 146

Circuit before: xccccxcccccxxxxccxxcccccxccccxxcccccxxxccxxxxcxxccccxccccccxxcccccxxxcccccxxxccccccccccxccccccccccxccxxxxcccxcccccxxcccccxxcccccxxxcccccxxxxccxcccxxxcccxxxxccccccccxxxccxxxxccccccccccxccccccccxccccxxcxxccccxxxcccccxxccccxcccccccxxxxcccccxxcccxxcccccxxccccxxxxcccxcccccxc
---------------
Apply:  Pos: [1, 6] cc => I
Apply:  Pos: [8, 21] cc => I
Apply:  Pos: [26, 34] cc => I
Apply:  Pos: [29, 47] xx => I
Apply:  Pos: [36, 41] xx => I
Apply:  Pos: [40, 48] cc => I
Apply:  Pos: [54, 71] cc => I
Apply:  Pos: [61, 86] cc => I
Apply:  Pos: [70, 77] cc => I
Apply:  Pos: [82, 88] cc => I
Apply:  Pos: [83, 96] cc => I
Apply:  Pos: [84, 92] cc => I
Apply:  Pos: [85, 89, 95] ccc => cc
Apply:  Pos: [101, 108] xx => I
Apply:  Pos: [104, 115] xx => I
Apply:  Pos: [107, 109] cc => I
Apply:  Pos: [110, 124] cc => I
Apply:  Pos: [111, 118] cc => I
Apply:  Pos: [112, 117, 127] ccc => cc
Apply:  Pos: [121, 128] xx => I
Apply:  Pos: [135, 143] cc => I
Apply:  Pos: [136, 142] xx => I
Apply:  Pos: [138, 151, 152] xcx => c
Apply:  Pos: [162, 179] cc => I
Apply:  Pos: [164, 169] xx => I
Apply:  Pos: [165, 172] xx => I
Apply:  Pos: [166, 171] xx => I
Apply:  Pos: [168, 173, 180] ccc => cc
Apply:  Pos: [174, 178] cc => I
Apply:  Pos: [176, 187] cc => I
Apply:  Pos: [182, 185] cc => I
Apply:  Pos: [192, 203, 207] xcx => c
Apply:  Pos: [197, 200] xx => I
Apply:  Pos: [204, 212] cc => I
Apply:  Pos: [218, 227] cc => I
Apply:  Pos: [206, 214] xx => I
Apply:  Pos: [219, 246] cc => I
Apply:  Pos: [222, 232] cc => I
Apply:  Pos: [225, 234] cc => I
Apply:  Pos: [228, 237] xx => I
Apply:  Pos: [230, 238] xx => I
Apply:  Pos: [236, 239] cc => I
Apply:  Pos: [241, 248] cc => I
Apply:  Pos: [242, 249] xx => I
Apply:  Pos: [243, 250] xx => I
Apply:  Pos: [255, 262] xx => I
Apply:  Pos: [261, 263] cc => I
---------------
Circuit after: xcccxcccxxxxccxxccccxcccxccccxxcxxxcxcccxcccccxxccccxxxcccxxxcccccxccccccxccxxccccxccccxcccxxccccxcxccccxxxccxxxcccccccccxccccxcccccccccccxcxccxccccxccxccccxxccccccccccxxxccccccxc

--------End Timer [apply mapping plan]:  0.0

[19], [15, 0], [5, 11], [6, 8], [8], [12, 7], [4, 13], [0, 9], [16], [17], [4], [1], [10, 2], [13, 5], [0], [12], [16, 14], [6, 9], [5, 15], [7, 8], [16], [12, 11], [3, 13], [4, 1], [11], [16, 3], [5, 0], [14, 17], [1, 18], [9], [6], [13, 17], [10], [16], [5], [6, 8], [3], [7, 6], [11, 0], [4, 13], [6], [3, 5], [9, 8], [17, 11], [19, 18], [12, 7], [3], [2], [13, 10], [1, 18], [5, 15], [12, 11], [5], [0], [18], [3, 10], [6, 9], [4, 17], [10], [19], [4], [0, 9], [18, 6], [3, 13], [16, 14], [14, 4], [7], [4, 17], [3, 5], [13, 10], [16, 3], [11, 15], [7, 8], [17], [3, 13], [9, 8], [4], [14], [17, 12], [6, 8], [1, 12], [7, 9], [3], [11, 7], [19, 12], [9, 8], [10, 5], [13], [4, 17], [15, 0], [7, 9], [14], [1], [11, 7], [6, 9], [4, 13], [2, 15], [18], [2, 15], [4], [0, 9], [7, 8], [13, 10], [14, 4], [3], [6], [8], [14, 17], [4, 1], [1], [10], [0], [3, 5], [12, 7], [14, 4], [3, 10], [5, 0], [11, 7], [6, 9], [12, 7], [4, 18], [9], [1, 18], [4, 17], [3, 13], [12, 18], [0], [16, 3], [17, 12], [3, 10], [13, 5], [12, 11], [1, 18], [1, 19], [16, 3], [9, 8], [7, 6], [5, 11], [7], [13, 5], [9], [12, 11], [4, 17], [10], [5, 11], [12, 18], [4, 13], [2, 15], [3], [19, 18], [0, 9], [5], [16, 3], [1, 12], [14, 13], [6, 8], [1], [13], [19, 12], [4, 17], [3, 10], [4, 1], [2, 15], [3, 5], [5, 15], [12, 18], [13, 10], [1, 19], [9], [19], [7], [6, 8], [13, 5], [10, 2], [18, 6], [11, 7], [0, 9], [11], [16, 3], ----End Timer [Execute Mapping]:  1.6866745948791504

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[96, 98]
[98, 147]
[142, 159]
[147, 162]
[155, 171]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[77, 91]
[82, 104]
[138, 170]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[127, 129, 134]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 

[140, 150, 168]

------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[77, 91]
[82, 104]
[138, 170]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[96, 98]
[98, 147]
[142, 159]
[147, 162]
[155, 171]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.2035658359527588

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [77, 91] xx => I, Pos: [77, 91] xx => I, Pos: [82, 104] xx => I, Pos: [82, 104] xx => I, Pos: [96, 98] cc => I, Pos: [96, 98] cc => I, Pos: [98, 147] cc => I, Pos: [98, 147] cc => I, Pos: [127, 129, 134] ccc => cc, Pos: [138, 170] xx => I, Pos: [138, 170] xx => I, Pos: [140, 150, 168] xcx => c, Pos: [142, 159] cc => I, Pos: [142, 159] cc => I, Pos: [147, 162] cc => I, Pos: [147, 162] cc => I, Pos: [155, 171] cc => I, Pos: [155, 171] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [77, 91] xx => I,
 Pos: [82, 104] xx => I,
 Pos: [96, 98] cc => I,
 Pos: [127, 129, 134] ccc => cc,
 Pos: [138, 170] xx => I,
 Pos: [140, 150, 168] xcx => c,
 Pos: [142, 159] cc => I,
 Pos: [147, 162] cc => I,
 Pos: [155, 171] cc => I]
Change: 9, Saving: 26

Circuit before: xcccxcccxxxxccxxccccxcccxccccxxcxxxcxcccxcccccxxccccxxxcccxxxcccccxccccccxccxxccccxccccxcccxxccccxcxccccxxxccxxxcccccccccxccccxcccccccccccxcxccxccccxccxccccxxccccccccccxxxccccccxc
---------------
Apply:  Pos: [77, 91] xx => I
Apply:  Pos: [82, 104] xx => I
Apply:  Pos: [96, 98] cc => I
Apply:  Pos: [127, 129, 134] ccc => cc
Apply:  Pos: [138, 170] xx => I
Apply:  Pos: [140, 150, 168] xcx => c
Apply:  Pos: [142, 159] cc => I
Apply:  Pos: [147, 162] cc => I
Apply:  Pos: [155, 171] cc => I
---------------
Circuit after: xcccxcccxxxxccxxccccxcccxccccxxcxxxcxcccxcccccxxccccxxxcccxxxcccccxccccccxccxccccccccxcccxcccxxccccxxccxxxcccccccccxccccxcccccccccccccxcccxcxcccxxccccccccxcccccxc

--------End Timer [apply mapping plan]:  0.0

[19], [15, 0], [5, 11], [6, 8], [8], [12, 7], [4, 13], [0, 9], [16], [17], [4], [1], [10, 2], [13, 5], [0], [12], [16, 14], [6, 9], [5, 15], [7, 8], [16], [12, 11], [3, 13], [4, 1], [11], [16, 3], [5, 0], [14, 17], [1, 18], [9], [6], [13, 17], [10], [16], [5], [6, 8], [3], [7, 6], [11, 0], [4, 13], [6], [3, 5], [9, 8], [17, 11], [19, 18], [12, 7], [3], [2], [13, 10], [1, 18], [5, 15], [12, 11], [5], [0], [18], [3, 10], [6, 9], [4, 17], [10], [19], [4], [0, 9], [18, 6], [3, 13], [16, 14], [14, 4], [7], [4, 17], [3, 5], [13, 10], [16, 3], [11, 15], [7, 8], [17], [3, 13], [9, 8], [4], [17, 12], [6, 8], [1, 12], [7, 9], [11, 7], [19, 12], [9, 8], [10, 5], [13], [4, 17], [15, 0], [7, 9], [1], [11, 7], [6, 9], [4, 13], [18], [4], [0, 9], [7, 8], [13, 10], [14, 4], [6], [8], [14, 17], [4, 1], [1], [10], [0], [3, 5], [12, 7], [14, 4], [3, 10], [5, 0], [11, 7], [6, 9], [12, 7], [4, 18], [9], [1, 18], [4, 17], [3, 13], [12, 18], [0], [16, 10], [17, 12], [3, 10], [13, 5], [12, 11], [1, 19], [1, 18], [9, 8], [7, 6], [5, 11], [13, 5], [0, 9], [12, 11], [10], [5, 11], [12, 18], [4, 13], [3], [19, 18], [5], [16, 3], [1, 12], [14, 13], [1], [13], [19, 12], [3, 10], [4, 1], [3, 5], [5, 15], [12, 18], [13, 10], [1, 19], [19], [13, 5], [10, 2], [18, 6], [11, 7], [0, 9], [11], [16, 3], ----End Timer [Execute Mapping]:  1.2035658359527588

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[132, 159]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[132, 159]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.1414496898651123

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [132, 159] cc => I, Pos: [132, 159] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [132, 159] cc => I]
Change: 1, Saving: 4

Circuit before: xcccxcccxxxxccxxccccxcccxccccxxcxxxcxcccxcccccxxccccxxxcccxxxcccccxccccccxccxccccccccxcccxcccxxccccxxccxxxcccccccccxccccxcccccccccccccxcccxcxcccxxccccccccxcccccxc
---------------
Apply:  Pos: [132, 159] cc => I
---------------
Circuit after: xcccxcccxxxxccxxccccxcccxccccxxcxxxcxcccxcccccxxccccxxxcccxxxcccccxccccccxccxccccccccxcccxcccxxccccxxccxxxcccccccccxccccxccccccccccccxcccxcxcccxxccccccccxccccxc

--------End Timer [apply mapping plan]:  0.0

[19], [15, 0], [5, 11], [6, 8], [8], [12, 7], [4, 13], [0, 9], [16], [17], [4], [1], [10, 2], [13, 5], [0], [12], [16, 14], [6, 9], [5, 15], [7, 8], [16], [12, 11], [3, 13], [4, 1], [11], [16, 3], [5, 0], [14, 17], [1, 18], [9], [6], [13, 17], [10], [16], [5], [6, 8], [3], [7, 6], [11, 0], [4, 13], [6], [3, 5], [9, 8], [17, 11], [19, 18], [12, 7], [3], [2], [13, 10], [1, 18], [5, 15], [12, 11], [5], [0], [18], [3, 10], [6, 9], [4, 17], [10], [19], [4], [0, 9], [18, 6], [3, 13], [16, 14], [14, 4], [7], [4, 17], [3, 5], [13, 10], [16, 3], [11, 15], [7, 8], [17], [3, 13], [9, 8], [4], [17, 12], [6, 8], [1, 12], [7, 9], [11, 7], [19, 12], [9, 8], [10, 5], [13], [4, 17], [15, 0], [7, 9], [1], [11, 7], [6, 9], [4, 13], [18], [4], [0, 9], [7, 8], [13, 10], [14, 4], [6], [8], [14, 17], [4, 1], [1], [10], [0], [3, 5], [12, 7], [14, 4], [3, 10], [5, 0], [11, 7], [6, 9], [12, 7], [4, 18], [9], [1, 18], [4, 17], [3, 13], [12, 18], [0], [16, 10], [17, 12], [3, 10], [13, 5], [12, 11], [1, 18], [1, 19], [9, 8], [7, 6], [5, 11], [13, 5], [12, 11], [10], [5, 11], [12, 18], [4, 13], [3], [19, 18], [5], [16, 3], [1, 12], [14, 13], [1], [13], [19, 12], [3, 10], [4, 1], [3, 5], [5, 15], [12, 18], [13, 10], [1, 19], [19], [13, 5], [10, 2], [18, 6], [11, 7], [11], [16, 3], ----End Timer [Execute Mapping]:  1.1414496898651123

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.0943403244018555

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: xcccxcccxxxxccxxccccxcccxccccxxcxxxcxcccxcccccxxccccxxxcccxxxcccccxccccccxccxccccccccxcccxcccxxccccxxccxxxcccccccccxccccxccccccccccccxcccxcxcccxxccccccccxccccxc
---------------
---------------
Circuit after: xcccxcccxxxxccxxccccxcccxccccxxcxxxcxcccxcccccxxccccxxxcccxxxcccccxccccccxccxccccccccxcccxcccxxccccxxccxxxcccccccccxccccxccccccccccccxcccxcxcccxxccccccccxccccxc

--------End Timer [apply mapping plan]:  0.0

[19], [15, 0], [5, 11], [6, 8], [8], [12, 7], [4, 13], [0, 9], [16], [17], [4], [1], [10, 2], [13, 5], [0], [12], [16, 14], [6, 9], [5, 15], [7, 8], [16], [12, 11], [3, 13], [4, 1], [11], [16, 3], [5, 0], [14, 17], [1, 18], [9], [6], [13, 17], [10], [16], [5], [6, 8], [3], [7, 6], [11, 0], [4, 13], [6], [3, 5], [9, 8], [17, 11], [19, 18], [12, 7], [3], [2], [13, 10], [1, 18], [5, 15], [12, 11], [5], [0], [18], [3, 10], [6, 9], [4, 17], [10], [19], [4], [0, 9], [18, 6], [3, 13], [16, 14], [14, 4], [7], [4, 17], [3, 5], [13, 10], [16, 3], [11, 15], [7, 8], [17], [3, 13], [9, 8], [4], [17, 12], [6, 8], [1, 12], [7, 9], [11, 7], [19, 12], [9, 8], [10, 5], [13], [4, 17], [15, 0], [7, 9], [1], [11, 7], [6, 9], [4, 13], [18], [4], [0, 9], [7, 8], [13, 10], [14, 4], [6], [8], [14, 17], [4, 1], [1], [10], [0], [3, 5], [12, 7], [14, 4], [3, 10], [5, 0], [11, 7], [6, 9], [12, 7], [4, 18], [9], [1, 18], [4, 17], [3, 13], [12, 18], [0], [16, 10], [17, 12], [3, 10], [13, 5], [12, 11], [1, 19], [1, 18], [9, 8], [7, 6], [5, 11], [13, 5], [12, 11], [10], [5, 11], [12, 18], [4, 13], [3], [19, 18], [5], [16, 3], [1, 12], [14, 13], [1], [13], [19, 12], [3, 10], [4, 1], [3, 5], [5, 15], [12, 18], [13, 10], [1, 19], [19], [13, 5], [10, 2], [18, 6], [11, 7], [11], [16, 3], ----End Timer [Execute Mapping]:  1.0943403244018555

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-x-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-x-x-cx-cx-x-x-x-x-cx-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-x-x-x-x-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-x-cx-cx-cx-x-x-x-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-cx-x-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-x-cx-cx-cx-cx-cx-x-cx 
     => total size: [270] (IBM)
 --------------------
 - qubits_num: 20, using gates: [x,cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 450


>> Solved circuit: 
Circuit Info: 
 - circuit: x-cx-cx-cx-x-cx-cx-cx-x-x-x-x-cx-cx-x-x-cx-cx-cx-cx-x-cx-cx-cx-x-cx-cx-cx-cx-x-x-cx-x-x-x-cx-x-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-x-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-cx-cx-x-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-x-cx-x-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-cx 
     => total size: [160] (IBM)
 --------------------
 - qubits_num: 20, using gates: [x,cx]
 - circuit depth: 31 - (small)
 - circuit cycle: 274

Reduced: 
 - size: 110 (40.74%)
 - cycle: 176 (39.11%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.10936737060546875

[19], [16, 14], [15, 0], [5, 11], [6, 8], [8], [16, 14], [12, 7], [19, 18], [4, 13], [0, 9], [16], [17], [4], [1], [10, 2], [13, 5], [0], [12], [16, 14], [6, 9], [19, 18], [5, 15], [7, 8], [16], [12, 11], [7, 9], [3, 13], [4, 1], [2], [11], [16, 3], [5, 0], [14, 17], [7, 9], [1, 18], [3], [9], [6], [13, 17], [12, 18], [3], [10], [16], [5], [6, 8], [3], [2], [12, 18], [7, 6], [11, 0], [4, 13], [6], [3, 5], [16, 14], [9, 8], [17, 11], [19, 18], [12, 7], [3], [2], [7, 8], [13, 10], [1, 18], [5, 15], [12, 11], [5], [0], [18], [3, 10], [1, 12], [16, 14], [6, 9], [4, 17], [10], [19], [4], [1, 12], [0, 9], [18, 6], [3, 13], [16, 14], [10, 2], [6, 9], [1, 19], [4, 17], [7, 8], [7], [10, 2], [14, 4], [3, 5], [13, 10], [1, 19], [16, 3], [11, 15], [4, 17], [6, 9], [7, 8], [17], [3, 13], [9, 8], [3], [4], [14], [15], [17, 12], [6, 8], [11, 0], [3], [11, 0], [10, 2], [14, 17], [1, 19], [7, 9], [3], [15], [11, 7], [19, 12], [14, 17], [9, 8], [10, 5], [3], [13], [4, 17], [10, 2], [15, 0], [7, 9], [1, 19], [3], [14], [1], [11, 7], [6, 9], [4, 13], [2, 15], [17, 12], [3], [18], [15], [4], [0, 9], [7, 8], [3], [17, 12], [13, 10], [14, 4], [3], [6], [8], [14, 17], [4, 1], [2, 15], [15], [1], [10], [0], [3, 5], [12, 7], [14, 4], [3, 10], [5, 0], [11, 7], [16, 14], [6, 9], [3], [0], [6], [12, 7], [4, 1], [3], [9], [6], [0], [1, 18], [5, 15], [4, 17], [10, 2], [3, 13], [5, 15], [16, 14], [4, 1], [12, 18], [7, 6], [0], [16, 3], [7, 6], [17, 12], [10, 2], [3, 10], [13, 5], [12, 11], [1, 18], [19], [16, 3], [9, 8], [7, 6], [5, 11], [16], [7], [13, 5], [16], [9], [12, 11], [1, 19], [7, 6], [4, 17], [16], [19], [10], [5, 11], [12, 18], [4, 13], [7, 6], [2, 15], [16], [3], [19, 18], [0, 9], [4, 17], [11, 7], [5], [16, 3], [11, 15], [1, 12], [14, 13], [10, 2], [6, 8], [4, 17], [16], [1], [8], [13], [11, 15], [19, 12], [10, 2], [4, 17], [6, 9], [16], [8], [6, 9], [3, 10], [14, 17], [16], [0], [4, 1], [2, 15], [11, 7], [3, 5], [14, 17], [16], [0], [5, 15], [12, 18], [13, 10], [1, 19], [16], [9], [19], [7], [6, 8], [13, 5], [4, 17], [16], [4, 17], [10, 2], [18, 6], [11, 7], [0, 9], [11], [16, 3], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[1, 6]
[8, 21]
[26, 34]
[40, 48]
[54, 71]
[70, 77]
[71, 81]
[61, 86]
[82, 88]
[84, 92]
[83, 96]
[107, 109]
[92, 112]
[111, 118]
[110, 124]
[135, 143]
[174, 178]
[162, 179]
[182, 185]
[176, 187]
[185, 195]
[204, 212]
[205, 218]
[218, 227]
[222, 232]
[225, 234]
[227, 235]
[236, 239]
[219, 246]
[241, 248]
[261, 263]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[36, 41]
[41, 46]
[29, 47]
[47, 60]
[101, 108]
[108, 114]
[104, 115]
[114, 121]
[121, 128]
[128, 136]
[136, 142]
[142, 146]
[164, 169]
[166, 171]
[165, 172]
[172, 183]
[197, 200]
[200, 206]
[206, 214]
[228, 237]
[230, 238]
[237, 242]
[242, 249]
[243, 250]
[249, 255]
[255, 262]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[112, 117, 127]
[168, 173, 180]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 

[138, 151, 152]
[192, 203, 207]

------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[85, 89, 95]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[36, 41]
[41, 46]
[29, 47]
[47, 60]
[101, 108]
[108, 114]
[104, 115]
[114, 121]
[121, 128]
[128, 136]
[136, 142]
[142, 146]
[164, 169]
[166, 171]
[165, 172]
[172, 183]
[197, 200]
[200, 206]
[206, 214]
[228, 237]
[230, 238]
[237, 242]
[242, 249]
[243, 250]
[249, 255]
[255, 262]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[1, 6]
[8, 21]
[26, 34]
[40, 48]
[54, 71]
[70, 77]
[71, 81]
[61, 86]
[82, 88]
[84, 92]
[83, 96]
[107, 109]
[92, 112]
[111, 118]
[110, 124]
[135, 143]
[174, 178]
[162, 179]
[182, 185]
[176, 187]
[185, 195]
[204, 212]
[205, 218]
[218, 227]
[222, 232]
[225, 234]
[227, 235]
[236, 239]
[219, 246]
[241, 248]
[261, 263]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.7343697547912598

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [1, 6] cc => I, Pos: [1, 6] cc => I, Pos: [8, 21] cc => I, Pos: [8, 21] cc => I, Pos: [26, 34] cc => I, Pos: [26, 34] cc => I, Pos: [29, 47] xx => I, Pos: [29, 47] xx => I, Pos: [36, 41] xx => I, Pos: [36, 41] xx => I, Pos: [40, 48] cc => I, Pos: [40, 48] cc => I, Pos: [41, 46] xx => I, Pos: [41, 46] xx => I, Pos: [47, 60] xx => I, Pos: [47, 60] xx => I, Pos: [54, 71] cc => I, Pos: [54, 71] cc => I, Pos: [61, 86] cc => I, Pos: [61, 86] cc => I, Pos: [70, 77] cc => I, Pos: [70, 77] cc => I, Pos: [71, 81] cc => I, Pos: [71, 81] cc => I, Pos: [82, 88] cc => I, Pos: [82, 88] cc => I, Pos: [83, 96] cc => I, Pos: [83, 96] cc => I, Pos: [84, 92] cc => I, Pos: [84, 92] cc => I, Pos: [85, 89, 95] ccc => cc, Pos: [92, 112] cc => I, Pos: [92, 112] cc => I, Pos: [101, 108] xx => I, Pos: [101, 108] xx => I, Pos: [104, 115] xx => I, Pos: [104, 115] xx => I, Pos: [107, 109] cc => I, Pos: [107, 109] cc => I, Pos: [108, 114] xx => I, Pos: [108, 114] xx => I, Pos: [110, 124] cc => I, Pos: [110, 124] cc => I, Pos: [111, 118] cc => I, Pos: [111, 118] cc => I, Pos: [112, 117, 127] ccc => cc, Pos: [114, 121] xx => I, Pos: [114, 121] xx => I, Pos: [121, 128] xx => I, Pos: [121, 128] xx => I, Pos: [128, 136] xx => I, Pos: [128, 136] xx => I, Pos: [135, 143] cc => I, Pos: [135, 143] cc => I, Pos: [136, 142] xx => I, Pos: [136, 142] xx => I, Pos: [138, 151, 152] xcx => c, Pos: [142, 146] xx => I, Pos: [142, 146] xx => I, Pos: [162, 179] cc => I, Pos: [162, 179] cc => I, Pos: [164, 169] xx => I, Pos: [164, 169] xx => I, Pos: [165, 172] xx => I, Pos: [165, 172] xx => I, Pos: [166, 171] xx => I, Pos: [166, 171] xx => I, Pos: [168, 173, 180] ccc => cc, Pos: [172, 183] xx => I, Pos: [172, 183] xx => I, Pos: [174, 178] cc => I, Pos: [174, 178] cc => I, Pos: [176, 187] cc => I, Pos: [176, 187] cc => I, Pos: [182, 185] cc => I, Pos: [182, 185] cc => I, Pos: [185, 195] cc => I, Pos: [185, 195] cc => I, Pos: [192, 203, 207] xcx => c, Pos: [197, 200] xx => I, Pos: [197, 200] xx => I, Pos: [200, 206] xx => I, Pos: [200, 206] xx => I, Pos: [204, 212] cc => I, Pos: [204, 212] cc => I, Pos: [205, 218] cc => I, Pos: [205, 218] cc => I, Pos: [206, 214] xx => I, Pos: [206, 214] xx => I, Pos: [218, 227] cc => I, Pos: [218, 227] cc => I, Pos: [219, 246] cc => I, Pos: [219, 246] cc => I, Pos: [222, 232] cc => I, Pos: [222, 232] cc => I, Pos: [225, 234] cc => I, Pos: [225, 234] cc => I, Pos: [227, 235] cc => I, Pos: [227, 235] cc => I, Pos: [228, 237] xx => I, Pos: [228, 237] xx => I, Pos: [230, 238] xx => I, Pos: [230, 238] xx => I, Pos: [236, 239] cc => I, Pos: [236, 239] cc => I, Pos: [237, 242] xx => I, Pos: [237, 242] xx => I, Pos: [241, 248] cc => I, Pos: [241, 248] cc => I, Pos: [242, 249] xx => I, Pos: [242, 249] xx => I, Pos: [243, 250] xx => I, Pos: [243, 250] xx => I, Pos: [249, 255] xx => I, Pos: [249, 255] xx => I, Pos: [255, 262] xx => I, Pos: [255, 262] xx => I, Pos: [261, 263] cc => I, Pos: [261, 263] cc => I]

--------End Timer [Generate Plans]:  0.10936832427978516

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [1, 6] cc => I,
 Pos: [8, 21] cc => I,
 Pos: [26, 34] cc => I,
 Pos: [47, 60] xx => I,
 Pos: [36, 41] xx => I,
 Pos: [40, 48] cc => I,
 Pos: [71, 81] cc => I,
 Pos: [61, 86] cc => I,
 Pos: [70, 77] cc => I,
 Pos: [82, 88] cc => I,
 Pos: [83, 96] cc => I,
 Pos: [92, 112] cc => I,
 Pos: [85, 89, 95] ccc => cc,
 Pos: [108, 114] xx => I,
 Pos: [104, 115] xx => I,
 Pos: [107, 109] cc => I,
 Pos: [110, 124] cc => I,
 Pos: [111, 118] cc => I,
 Pos: [121, 128] xx => I,
 Pos: [135, 143] cc => I,
 Pos: [136, 142] xx => I,
 Pos: [138, 151, 152] xcx => c,
 Pos: [162, 179] cc => I,
 Pos: [164, 169] xx => I,
 Pos: [165, 172] xx => I,
 Pos: [166, 171] xx => I,
 Pos: [168, 173, 180] ccc => cc,
 Pos: [174, 178] cc => I,
 Pos: [176, 187] cc => I,
 Pos: [185, 195] cc => I,
 Pos: [192, 203, 207] xcx => c,
 Pos: [200, 206] xx => I,
 Pos: [204, 212] cc => I,
 Pos: [205, 218] cc => I,
 Pos: [219, 246] cc => I,
 Pos: [222, 232] cc => I,
 Pos: [225, 234] cc => I,
 Pos: [227, 235] cc => I,
 Pos: [228, 237] xx => I,
 Pos: [230, 238] xx => I,
 Pos: [236, 239] cc => I,
 Pos: [241, 248] cc => I,
 Pos: [249, 255] xx => I,
 Pos: [243, 250] xx => I,
 Pos: [261, 263] cc => I]
Change: 45, Saving: 45

Circuit before: xccccxcccccxxxxccxxcccccxccccxxcccccxxxccxxxxcxxccccxccccccxxcccccxxxcccccxxxccccccccccxccccccccccxccxxxxcccxcccccxxcccccxxcccccxxxcccccxxxxccxcccxxxcccxxxxccccccccxxxccxxxxccccccccccxccccccccxccccxxcxxccccxxxcccccxxccccxcccccccxxxxcccccxxcccxxcccccxxccccxxxxcccxcccccxc
---------------
Apply:  Pos: [1, 6] cc => I
Apply:  Pos: [8, 21] cc => I
Apply:  Pos: [26, 34] cc => I
Apply:  Pos: [47, 60] xx => I
Apply:  Pos: [36, 41] xx => I
Apply:  Pos: [40, 48] cc => I
Apply:  Pos: [71, 81] cc => I
Apply:  Pos: [61, 86] cc => I
Apply:  Pos: [70, 77] cc => I
Apply:  Pos: [82, 88] cc => I
Apply:  Pos: [83, 96] cc => I
Apply:  Pos: [92, 112] cc => I
Apply:  Pos: [85, 89, 95] ccc => cc
Apply:  Pos: [108, 114] xx => I
Apply:  Pos: [104, 115] xx => I
Apply:  Pos: [107, 109] cc => I
Apply:  Pos: [110, 124] cc => I
Apply:  Pos: [111, 118] cc => I
Apply:  Pos: [121, 128] xx => I
Apply:  Pos: [135, 143] cc => I
Apply:  Pos: [136, 142] xx => I
Apply:  Pos: [138, 151, 152] xcx => c
Apply:  Pos: [162, 179] cc => I
Apply:  Pos: [164, 169] xx => I
Apply:  Pos: [165, 172] xx => I
Apply:  Pos: [166, 171] xx => I
Apply:  Pos: [168, 173, 180] ccc => cc
Apply:  Pos: [174, 178] cc => I
Apply:  Pos: [176, 187] cc => I
Apply:  Pos: [185, 195] cc => I
Apply:  Pos: [192, 203, 207] xcx => c
Apply:  Pos: [200, 206] xx => I
Apply:  Pos: [204, 212] cc => I
Apply:  Pos: [205, 218] cc => I
Apply:  Pos: [219, 246] cc => I
Apply:  Pos: [222, 232] cc => I
Apply:  Pos: [225, 234] cc => I
Apply:  Pos: [227, 235] cc => I
Apply:  Pos: [228, 237] xx => I
Apply:  Pos: [230, 238] xx => I
Apply:  Pos: [236, 239] cc => I
Apply:  Pos: [241, 248] cc => I
Apply:  Pos: [249, 255] xx => I
Apply:  Pos: [243, 250] xx => I
Apply:  Pos: [261, 263] cc => I
---------------
Circuit after: xcccxcccxxxxccxxccccxcccxxccccxxcxxxcxcccxccccccxccccxxxcccxxxcccccxccccccxccxxxcccccccxccccxxccccxcxccccxxxccxxxcccccccccxcccccxccccccccccxxcxcxccccxxccxccccxxccxcccccccxxxccxccccxc

--------End Timer [apply mapping plan]:  0.0

[19], [15, 0], [5, 11], [6, 8], [8], [12, 7], [4, 13], [0, 9], [16], [17], [4], [1], [10, 2], [13, 5], [0], [12], [16, 14], [6, 9], [5, 15], [7, 8], [16], [12, 11], [3, 13], [4, 1], [2], [11], [16, 3], [5, 0], [14, 17], [1, 18], [9], [6], [13, 17], [10], [16], [5], [6, 8], [3], [7, 6], [11, 0], [4, 13], [6], [3, 5], [16, 14], [9, 8], [17, 11], [19, 18], [12, 7], [3], [13, 10], [1, 18], [5, 15], [12, 11], [5], [0], [18], [3, 10], [6, 9], [4, 17], [10], [19], [4], [0, 9], [18, 6], [3, 13], [1, 19], [14, 4], [7], [4, 17], [3, 5], [13, 10], [16, 3], [11, 15], [7, 8], [17], [3, 13], [9, 8], [3], [4], [14], [17, 12], [6, 8], [7, 9], [11, 7], [19, 12], [9, 8], [10, 5], [13], [4, 17], [15, 0], [7, 9], [1, 19], [14], [1], [11, 7], [6, 9], [4, 13], [2, 15], [18], [2, 15], [4], [0, 9], [7, 8], [13, 10], [14, 4], [3], [6], [8], [14, 17], [4, 1], [1], [10], [0], [3, 5], [12, 7], [14, 4], [3, 10], [5, 0], [11, 7], [6, 9], [12, 7], [4, 18], [9], [1, 18], [4, 17], [3, 13], [12, 18], [7, 6], [0], [16, 3], [17, 12], [3, 10], [13, 5], [12, 11], [1, 18], [1, 19], [16, 3], [9, 8], [5, 11], [16], [7], [13, 5], [9], [12, 11], [10], [5, 11], [12, 18], [4, 13], [2, 15], [16], [3], [19, 18], [0, 9], [5], [16, 3], [1, 12], [14, 13], [6, 8], [1], [13], [19, 12], [3, 10], [16], [4, 1], [2, 15], [3, 5], [5, 15], [12, 18], [13, 10], [1, 19], [9], [19], [7], [6, 8], [13, 5], [16], [10, 2], [18, 6], [11, 7], [0, 9], [11], [16, 3], ----End Timer [Execute Mapping]:  1.843738079071045

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[97, 99]
[99, 148]
[148, 164]
[157, 173]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[79, 92]
[77, 105]
[139, 149]
[140, 172]
[162, 175]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[129, 131, 136]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 

[142, 152, 170]

------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[79, 92]
[77, 105]
[139, 149]
[140, 172]
[162, 175]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[97, 99]
[99, 148]
[148, 164]
[157, 173]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.1721563339233398

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [77, 105] xx => I, Pos: [77, 105] xx => I, Pos: [79, 92] xx => I, Pos: [79, 92] xx => I, Pos: [97, 99] cc => I, Pos: [97, 99] cc => I, Pos: [99, 148] cc => I, Pos: [99, 148] cc => I, Pos: [129, 131, 136] ccc => cc, Pos: [139, 149] xx => I, Pos: [139, 149] xx => I, Pos: [140, 172] xx => I, Pos: [140, 172] xx => I, Pos: [142, 152, 170] xcx => c, Pos: [148, 164] cc => I, Pos: [148, 164] cc => I, Pos: [157, 173] cc => I, Pos: [157, 173] cc => I, Pos: [162, 175] xx => I, Pos: [162, 175] xx => I]

--------End Timer [Generate Plans]:  0.015624284744262695

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [77, 105] xx => I,
 Pos: [79, 92] xx => I,
 Pos: [99, 148] cc => I,
 Pos: [129, 131, 136] ccc => cc,
 Pos: [139, 149] xx => I,
 Pos: [140, 172] xx => I,
 Pos: [142, 152, 170] xcx => c,
 Pos: [157, 173] cc => I,
 Pos: [162, 175] xx => I]
Change: 9, Saving: 9

Circuit before: xcccxcccxxxxccxxccccxcccxxccccxxcxxxcxcccxccccccxccccxxxcccxxxcccccxccccccxccxxxcccccccxccccxxccccxcxccccxxxccxxxcccccccccxcccccxccccccccccxxcxcxccccxxccxccccxxccxcccccccxxxccxccccxc
---------------
Apply:  Pos: [77, 105] xx => I
Apply:  Pos: [79, 92] xx => I
Apply:  Pos: [99, 148] cc => I
Apply:  Pos: [129, 131, 136] ccc => cc
Apply:  Pos: [139, 149] xx => I
Apply:  Pos: [140, 172] xx => I
Apply:  Pos: [142, 152, 170] xcx => c
Apply:  Pos: [157, 173] cc => I
Apply:  Pos: [162, 175] xx => I
---------------
Circuit after: xcccxcccxxxxccxxccccxcccxxccccxxcxxxcxcccxccccccxccccxxxcccxxxcccccxccccccxccxcccccccxccccxccccxxccccxxccxxxcccccccccxcccccxccccccccccccxcccxcxcccxxcccccccccxcccccxc

--------End Timer [apply mapping plan]:  0.015637874603271484

[19], [15, 0], [5, 11], [6, 8], [8], [12, 7], [4, 13], [0, 9], [16], [17], [4], [1], [10, 2], [13, 5], [0], [12], [16, 14], [6, 9], [5, 15], [7, 8], [16], [12, 11], [3, 13], [4, 1], [2], [11], [16, 3], [5, 0], [14, 17], [1, 18], [9], [6], [13, 17], [10], [16], [5], [6, 8], [3], [7, 6], [11, 0], [4, 13], [6], [3, 5], [16, 14], [9, 8], [17, 11], [19, 18], [12, 7], [3], [13, 10], [1, 18], [5, 15], [12, 11], [5], [0], [18], [3, 10], [6, 9], [4, 17], [10], [19], [4], [0, 9], [18, 6], [3, 13], [1, 19], [14, 4], [7], [4, 17], [3, 5], [13, 10], [16, 3], [11, 15], [7, 8], [17], [3, 13], [9, 8], [4], [17, 12], [6, 8], [7, 9], [11, 7], [19, 12], [9, 8], [10, 5], [13], [4, 17], [15, 0], [7, 9], [1, 19], [1], [11, 7], [6, 9], [4, 13], [2, 15], [18], [4], [0, 9], [7, 8], [13, 10], [14, 4], [6], [8], [14, 17], [4, 1], [1], [10], [0], [3, 5], [12, 7], [14, 4], [3, 10], [5, 0], [11, 7], [6, 9], [12, 7], [4, 18], [9], [1, 18], [4, 17], [3, 13], [12, 18], [7, 6], [0], [16, 10], [17, 12], [3, 10], [13, 5], [12, 11], [1, 19], [1, 18], [9, 8], [5, 11], [13, 5], [0, 9], [12, 11], [10], [5, 11], [12, 18], [4, 13], [3], [19, 18], [5], [16, 3], [1, 12], [14, 13], [1], [13], [19, 12], [3, 10], [4, 1], [2, 15], [3, 5], [5, 15], [12, 18], [13, 10], [1, 19], [19], [13, 5], [10, 2], [18, 6], [11, 7], [0, 9], [11], [16, 3], ----End Timer [Execute Mapping]:  1.203418493270874

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[134, 162]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[134, 162]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.2030551433563232

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [134, 162] cc => I, Pos: [134, 162] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [134, 162] cc => I]
Change: 1, Saving: 1

Circuit before: xcccxcccxxxxccxxccccxcccxxccccxxcxxxcxcccxccccccxccccxxxcccxxxcccccxccccccxccxcccccccxccccxccccxxccccxxccxxxcccccccccxcccccxccccccccccccxcccxcxcccxxcccccccccxcccccxc
---------------
Apply:  Pos: [134, 162] cc => I
---------------
Circuit after: xcccxcccxxxxccxxccccxcccxxccccxxcxxxcxcccxccccccxccccxxxcccxxxcccccxccccccxccxcccccccxccccxccccxxccccxxccxxxcccccccccxcccccxcccccccccccxcccxcxcccxxcccccccccxccccxc

--------End Timer [apply mapping plan]:  0.0

[19], [15, 0], [5, 11], [6, 8], [8], [12, 7], [4, 13], [0, 9], [16], [17], [4], [1], [10, 2], [13, 5], [0], [12], [16, 14], [6, 9], [5, 15], [7, 8], [16], [12, 11], [3, 13], [4, 1], [2], [11], [16, 3], [5, 0], [14, 17], [1, 18], [9], [6], [13, 17], [10], [16], [5], [6, 8], [3], [7, 6], [11, 0], [4, 13], [6], [3, 5], [16, 14], [9, 8], [17, 11], [19, 18], [12, 7], [3], [13, 10], [1, 18], [5, 15], [12, 11], [5], [0], [18], [3, 10], [6, 9], [4, 17], [10], [19], [4], [0, 9], [18, 6], [3, 13], [1, 19], [14, 4], [7], [4, 17], [3, 5], [13, 10], [16, 3], [11, 15], [7, 8], [17], [3, 13], [9, 8], [4], [17, 12], [6, 8], [7, 9], [11, 7], [19, 12], [9, 8], [10, 5], [13], [4, 17], [15, 0], [7, 9], [1, 19], [1], [11, 7], [6, 9], [4, 13], [2, 15], [18], [4], [0, 9], [7, 8], [13, 10], [14, 4], [6], [8], [14, 17], [4, 1], [1], [10], [0], [3, 5], [12, 7], [14, 4], [3, 10], [5, 0], [11, 7], [6, 9], [12, 7], [4, 18], [9], [1, 18], [4, 17], [3, 13], [12, 18], [7, 6], [0], [16, 10], [17, 12], [3, 10], [13, 5], [12, 11], [1, 18], [1, 19], [9, 8], [5, 11], [13, 5], [12, 11], [10], [5, 11], [12, 18], [4, 13], [3], [19, 18], [5], [16, 3], [1, 12], [14, 13], [1], [13], [19, 12], [3, 10], [4, 1], [2, 15], [3, 5], [5, 15], [12, 18], [13, 10], [1, 19], [19], [13, 5], [10, 2], [18, 6], [11, 7], [11], [16, 3], ----End Timer [Execute Mapping]:  1.2030551433563232

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.1721560955047607

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: xcccxcccxxxxccxxccccxcccxxccccxxcxxxcxcccxccccccxccccxxxcccxxxcccccxccccccxccxcccccccxccccxccccxxccccxxccxxxcccccccccxcccccxcccccccccccxcccxcxcccxxcccccccccxccccxc
---------------
---------------
Circuit after: xcccxcccxxxxccxxccccxcccxxccccxxcxxxcxcccxccccccxccccxxxcccxxxcccccxccccccxccxcccccccxccccxccccxxccccxxccxxxcccccccccxcccccxcccccccccccxcccxcxcccxxcccccccccxccccxc

--------End Timer [apply mapping plan]:  0.0

[19], [15, 0], [5, 11], [6, 8], [8], [12, 7], [4, 13], [0, 9], [16], [17], [4], [1], [10, 2], [13, 5], [0], [12], [16, 14], [6, 9], [5, 15], [7, 8], [16], [12, 11], [3, 13], [4, 1], [2], [11], [16, 3], [5, 0], [14, 17], [1, 18], [9], [6], [13, 17], [10], [16], [5], [6, 8], [3], [7, 6], [11, 0], [4, 13], [6], [3, 5], [16, 14], [9, 8], [17, 11], [19, 18], [12, 7], [3], [13, 10], [1, 18], [5, 15], [12, 11], [5], [0], [18], [3, 10], [6, 9], [4, 17], [10], [19], [4], [0, 9], [18, 6], [3, 13], [1, 19], [14, 4], [7], [4, 17], [3, 5], [13, 10], [16, 3], [11, 15], [7, 8], [17], [3, 13], [9, 8], [4], [17, 12], [6, 8], [7, 9], [11, 7], [19, 12], [9, 8], [10, 5], [13], [4, 17], [15, 0], [7, 9], [1, 19], [1], [11, 7], [6, 9], [4, 13], [2, 15], [18], [4], [0, 9], [7, 8], [13, 10], [14, 4], [6], [8], [14, 17], [4, 1], [1], [10], [0], [3, 5], [12, 7], [14, 4], [3, 10], [5, 0], [11, 7], [6, 9], [12, 7], [4, 18], [9], [1, 18], [4, 17], [3, 13], [12, 18], [7, 6], [0], [16, 10], [17, 12], [3, 10], [13, 5], [12, 11], [1, 19], [1, 18], [9, 8], [5, 11], [13, 5], [12, 11], [10], [5, 11], [12, 18], [4, 13], [3], [19, 18], [5], [16, 3], [1, 12], [14, 13], [1], [13], [19, 12], [3, 10], [4, 1], [2, 15], [3, 5], [5, 15], [12, 18], [13, 10], [1, 19], [19], [13, 5], [10, 2], [18, 6], [11, 7], [11], [16, 3], ----End Timer [Execute Mapping]:  1.1721560955047607

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-x-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-x-x-cx-cx-x-x-x-x-cx-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-x-x-x-x-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-x-cx-cx-cx-x-x-x-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-cx-x-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-x-cx-cx-cx-cx-cx-x-cx 
     => total size: [270] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx,x]
 - circuit depth: 45 - (small)
 - circuit cycle: 450


>> Solved circuit: 
Circuit Info: 
 - circuit: x-cx-cx-cx-x-cx-cx-cx-x-x-x-x-cx-cx-x-x-cx-cx-cx-cx-x-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-cx-x-x-x-cx-x-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-cx-cx-x-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-x-cx-x-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-cx 
     => total size: [163] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx,x]
 - circuit depth: 31 - (small)
 - circuit cycle: 280

Reduced: 
 - size: 107 (39.63%)
 - depth: 14 (31.11%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.12499094009399414

[19], [16, 14], [15, 0], [5, 11], [6, 8], [8], [16, 14], [12, 7], [19, 18], [4, 13], [0, 9], [16], [17], [4], [1], [10, 2], [13, 5], [0], [12], [16, 14], [6, 9], [19, 18], [5, 15], [7, 8], [16], [12, 11], [7, 9], [3, 13], [4, 1], [2], [11], [16, 3], [5, 0], [14, 17], [7, 9], [1, 18], [3], [9], [6], [13, 17], [12, 18], [3], [10], [16], [5], [6, 8], [3], [2], [12, 18], [7, 6], [11, 0], [4, 13], [6], [3, 5], [16, 14], [9, 8], [17, 11], [19, 18], [12, 7], [3], [2], [7, 8], [13, 10], [1, 18], [5, 15], [12, 11], [5], [0], [18], [3, 10], [1, 12], [16, 14], [6, 9], [4, 17], [10], [19], [4], [1, 12], [0, 9], [18, 6], [3, 13], [16, 14], [10, 2], [6, 9], [1, 19], [4, 17], [7, 8], [7], [10, 2], [14, 4], [3, 5], [13, 10], [1, 19], [16, 3], [11, 15], [4, 17], [6, 9], [7, 8], [17], [3, 13], [9, 8], [3], [4], [14], [15], [17, 12], [6, 8], [11, 0], [3], [11, 0], [10, 2], [14, 17], [1, 19], [7, 9], [3], [15], [11, 7], [19, 12], [14, 17], [9, 8], [10, 5], [3], [13], [4, 17], [10, 2], [15, 0], [7, 9], [1, 19], [3], [14], [1], [11, 7], [6, 9], [4, 13], [2, 15], [17, 12], [3], [18], [15], [4], [0, 9], [7, 8], [3], [17, 12], [13, 10], [14, 4], [3], [6], [8], [14, 17], [4, 1], [2, 15], [15], [1], [10], [0], [3, 5], [12, 7], [14, 4], [3, 10], [5, 0], [11, 7], [16, 14], [6, 9], [3], [0], [6], [12, 7], [4, 1], [3], [9], [6], [0], [1, 18], [5, 15], [4, 17], [10, 2], [3, 13], [5, 15], [16, 14], [4, 1], [12, 18], [7, 6], [0], [16, 3], [7, 6], [17, 12], [10, 2], [3, 10], [13, 5], [12, 11], [1, 18], [19], [16, 3], [9, 8], [7, 6], [5, 11], [16], [7], [13, 5], [16], [9], [12, 11], [1, 19], [7, 6], [4, 17], [16], [19], [10], [5, 11], [12, 18], [4, 13], [7, 6], [2, 15], [16], [3], [19, 18], [0, 9], [4, 17], [11, 7], [5], [16, 3], [11, 15], [1, 12], [14, 13], [10, 2], [6, 8], [4, 17], [16], [1], [8], [13], [11, 15], [19, 12], [10, 2], [4, 17], [6, 9], [16], [8], [6, 9], [3, 10], [14, 17], [16], [0], [4, 1], [2, 15], [11, 7], [3, 5], [14, 17], [16], [0], [5, 15], [12, 18], [13, 10], [1, 19], [16], [9], [19], [7], [6, 8], [13, 5], [4, 17], [16], [4, 17], [10, 2], [18, 6], [11, 7], [0, 9], [11], [16, 3], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[1, 6]
[8, 21]
[26, 34]
[40, 48]
[54, 71]
[70, 77]
[71, 81]
[61, 86]
[82, 88]
[84, 92]
[83, 96]
[107, 109]
[92, 112]
[111, 118]
[110, 124]
[135, 143]
[174, 178]
[162, 179]
[182, 185]
[176, 187]
[185, 195]
[204, 212]
[205, 218]
[218, 227]
[222, 232]
[225, 234]
[227, 235]
[236, 239]
[219, 246]
[241, 248]
[261, 263]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[36, 41]
[41, 46]
[29, 47]
[47, 60]
[101, 108]
[108, 114]
[104, 115]
[114, 121]
[121, 128]
[128, 136]
[136, 142]
[142, 146]
[164, 169]
[166, 171]
[165, 172]
[172, 183]
[197, 200]
[200, 206]
[206, 214]
[228, 237]
[230, 238]
[237, 242]
[242, 249]
[243, 250]
[249, 255]
[255, 262]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[112, 117, 127]
[168, 173, 180]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 

[138, 151, 152]
[192, 203, 207]

------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[85, 89, 95]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[36, 41]
[41, 46]
[29, 47]
[47, 60]
[101, 108]
[108, 114]
[104, 115]
[114, 121]
[121, 128]
[128, 136]
[136, 142]
[142, 146]
[164, 169]
[166, 171]
[165, 172]
[172, 183]
[197, 200]
[200, 206]
[206, 214]
[228, 237]
[230, 238]
[237, 242]
[242, 249]
[243, 250]
[249, 255]
[255, 262]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[1, 6]
[8, 21]
[26, 34]
[40, 48]
[54, 71]
[70, 77]
[71, 81]
[61, 86]
[82, 88]
[84, 92]
[83, 96]
[107, 109]
[92, 112]
[111, 118]
[110, 124]
[135, 143]
[174, 178]
[162, 179]
[182, 185]
[176, 187]
[185, 195]
[204, 212]
[205, 218]
[218, 227]
[222, 232]
[225, 234]
[227, 235]
[236, 239]
[219, 246]
[241, 248]
[261, 263]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.7344074249267578

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [1, 6] cc => I, Pos: [1, 6] cc => I, Pos: [8, 21] cc => I, Pos: [8, 21] cc => I, Pos: [26, 34] cc => I, Pos: [26, 34] cc => I, Pos: [29, 47] xx => I, Pos: [29, 47] xx => I, Pos: [36, 41] xx => I, Pos: [36, 41] xx => I, Pos: [40, 48] cc => I, Pos: [40, 48] cc => I, Pos: [41, 46] xx => I, Pos: [41, 46] xx => I, Pos: [47, 60] xx => I, Pos: [47, 60] xx => I, Pos: [54, 71] cc => I, Pos: [54, 71] cc => I, Pos: [61, 86] cc => I, Pos: [61, 86] cc => I, Pos: [70, 77] cc => I, Pos: [70, 77] cc => I, Pos: [71, 81] cc => I, Pos: [71, 81] cc => I, Pos: [82, 88] cc => I, Pos: [82, 88] cc => I, Pos: [83, 96] cc => I, Pos: [83, 96] cc => I, Pos: [84, 92] cc => I, Pos: [84, 92] cc => I, Pos: [85, 89, 95] ccc => cc, Pos: [92, 112] cc => I, Pos: [92, 112] cc => I, Pos: [101, 108] xx => I, Pos: [101, 108] xx => I, Pos: [104, 115] xx => I, Pos: [104, 115] xx => I, Pos: [107, 109] cc => I, Pos: [107, 109] cc => I, Pos: [108, 114] xx => I, Pos: [108, 114] xx => I, Pos: [110, 124] cc => I, Pos: [110, 124] cc => I, Pos: [111, 118] cc => I, Pos: [111, 118] cc => I, Pos: [112, 117, 127] ccc => cc, Pos: [114, 121] xx => I, Pos: [114, 121] xx => I, Pos: [121, 128] xx => I, Pos: [121, 128] xx => I, Pos: [128, 136] xx => I, Pos: [128, 136] xx => I, Pos: [135, 143] cc => I, Pos: [135, 143] cc => I, Pos: [136, 142] xx => I, Pos: [136, 142] xx => I, Pos: [138, 151, 152] xcx => c, Pos: [142, 146] xx => I, Pos: [142, 146] xx => I, Pos: [162, 179] cc => I, Pos: [162, 179] cc => I, Pos: [164, 169] xx => I, Pos: [164, 169] xx => I, Pos: [165, 172] xx => I, Pos: [165, 172] xx => I, Pos: [166, 171] xx => I, Pos: [166, 171] xx => I, Pos: [168, 173, 180] ccc => cc, Pos: [172, 183] xx => I, Pos: [172, 183] xx => I, Pos: [174, 178] cc => I, Pos: [174, 178] cc => I, Pos: [176, 187] cc => I, Pos: [176, 187] cc => I, Pos: [182, 185] cc => I, Pos: [182, 185] cc => I, Pos: [185, 195] cc => I, Pos: [185, 195] cc => I, Pos: [192, 203, 207] xcx => c, Pos: [197, 200] xx => I, Pos: [197, 200] xx => I, Pos: [200, 206] xx => I, Pos: [200, 206] xx => I, Pos: [204, 212] cc => I, Pos: [204, 212] cc => I, Pos: [205, 218] cc => I, Pos: [205, 218] cc => I, Pos: [206, 214] xx => I, Pos: [206, 214] xx => I, Pos: [218, 227] cc => I, Pos: [218, 227] cc => I, Pos: [219, 246] cc => I, Pos: [219, 246] cc => I, Pos: [222, 232] cc => I, Pos: [222, 232] cc => I, Pos: [225, 234] cc => I, Pos: [225, 234] cc => I, Pos: [227, 235] cc => I, Pos: [227, 235] cc => I, Pos: [228, 237] xx => I, Pos: [228, 237] xx => I, Pos: [230, 238] xx => I, Pos: [230, 238] xx => I, Pos: [236, 239] cc => I, Pos: [236, 239] cc => I, Pos: [237, 242] xx => I, Pos: [237, 242] xx => I, Pos: [241, 248] cc => I, Pos: [241, 248] cc => I, Pos: [242, 249] xx => I, Pos: [242, 249] xx => I, Pos: [243, 250] xx => I, Pos: [243, 250] xx => I, Pos: [249, 255] xx => I, Pos: [249, 255] xx => I, Pos: [255, 262] xx => I, Pos: [255, 262] xx => I, Pos: [261, 263] cc => I, Pos: [261, 263] cc => I]

--------End Timer [Generate Plans]:  0.12501025199890137

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [1, 6] cc => I,
 Pos: [8, 21] cc => I,
 Pos: [26, 34] cc => I,
 Pos: [47, 60] xx => I,
 Pos: [41, 46] xx => I,
 Pos: [40, 48] cc => I,
 Pos: [54, 71] cc => I,
 Pos: [61, 86] cc => I,
 Pos: [70, 77] cc => I,
 Pos: [82, 88] cc => I,
 Pos: [83, 96] cc => I,
 Pos: [84, 92] cc => I,
 Pos: [85, 89, 95] ccc => cc,
 Pos: [101, 108] xx => I,
 Pos: [104, 115] xx => I,
 Pos: [107, 109] cc => I,
 Pos: [110, 124] cc => I,
 Pos: [111, 118] cc => I,
 Pos: [112, 117, 127] ccc => cc,
 Pos: [121, 128] xx => I,
 Pos: [135, 143] cc => I,
 Pos: [142, 146] xx => I,
 Pos: [138, 151, 152] xcx => c,
 Pos: [162, 179] cc => I,
 Pos: [164, 169] xx => I,
 Pos: [172, 183] xx => I,
 Pos: [166, 171] xx => I,
 Pos: [168, 173, 180] ccc => cc,
 Pos: [174, 178] cc => I,
 Pos: [176, 187] cc => I,
 Pos: [182, 185] cc => I,
 Pos: [192, 203, 207] xcx => c,
 Pos: [200, 206] xx => I,
 Pos: [204, 212] cc => I,
 Pos: [218, 227] cc => I,
 Pos: [219, 246] cc => I,
 Pos: [222, 232] cc => I,
 Pos: [225, 234] cc => I,
 Pos: [228, 237] xx => I,
 Pos: [230, 238] xx => I,
 Pos: [236, 239] cc => I,
 Pos: [241, 248] cc => I,
 Pos: [249, 255] xx => I,
 Pos: [243, 250] xx => I,
 Pos: [261, 263] cc => I]
Change: 45, Saving: 45

Circuit before: xccccxcccccxxxxccxxcccccxccccxxcccccxxxccxxxxcxxccccxccccccxxcccccxxxcccccxxxccccccccccxccccccccccxccxxxxcccxcccccxxcccccxxcccccxxxcccccxxxxccxcccxxxcccxxxxccccccccxxxccxxxxccccccccccxccccccccxccccxxcxxccccxxxcccccxxccccxcccccccxxxxcccccxxcccxxcccccxxccccxxxxcccxcccccxc
---------------
Apply:  Pos: [1, 6] cc => I
Apply:  Pos: [8, 21] cc => I
Apply:  Pos: [26, 34] cc => I
Apply:  Pos: [47, 60] xx => I
Apply:  Pos: [41, 46] xx => I
Apply:  Pos: [40, 48] cc => I
Apply:  Pos: [54, 71] cc => I
Apply:  Pos: [61, 86] cc => I
Apply:  Pos: [70, 77] cc => I
Apply:  Pos: [82, 88] cc => I
Apply:  Pos: [83, 96] cc => I
Apply:  Pos: [84, 92] cc => I
Apply:  Pos: [85, 89, 95] ccc => cc
Apply:  Pos: [101, 108] xx => I
Apply:  Pos: [104, 115] xx => I
Apply:  Pos: [107, 109] cc => I
Apply:  Pos: [110, 124] cc => I
Apply:  Pos: [111, 118] cc => I
Apply:  Pos: [112, 117, 127] ccc => cc
Apply:  Pos: [121, 128] xx => I
Apply:  Pos: [135, 143] cc => I
Apply:  Pos: [142, 146] xx => I
Apply:  Pos: [138, 151, 152] xcx => c
Apply:  Pos: [162, 179] cc => I
Apply:  Pos: [164, 169] xx => I
Apply:  Pos: [172, 183] xx => I
Apply:  Pos: [166, 171] xx => I
Apply:  Pos: [168, 173, 180] ccc => cc
Apply:  Pos: [174, 178] cc => I
Apply:  Pos: [176, 187] cc => I
Apply:  Pos: [182, 185] cc => I
Apply:  Pos: [192, 203, 207] xcx => c
Apply:  Pos: [200, 206] xx => I
Apply:  Pos: [204, 212] cc => I
Apply:  Pos: [218, 227] cc => I
Apply:  Pos: [219, 246] cc => I
Apply:  Pos: [222, 232] cc => I
Apply:  Pos: [225, 234] cc => I
Apply:  Pos: [228, 237] xx => I
Apply:  Pos: [230, 238] xx => I
Apply:  Pos: [236, 239] cc => I
Apply:  Pos: [241, 248] cc => I
Apply:  Pos: [249, 255] xx => I
Apply:  Pos: [243, 250] xx => I
Apply:  Pos: [261, 263] cc => I
---------------
Circuit after: xcccxcccxxxxccxxccccxcccxxccccxxxcxxxccccxcccccxccccxxxcccxxxcccccxccccccxccxxccccxccccxcccxxccccxxcxccccxxccxxxcccccccxccxcccccccccccccccxxcxccxccccxxccxccccxxcccxcccccccxxxccxccccxc

--------End Timer [apply mapping plan]:  0.0

[19], [15, 0], [5, 11], [6, 8], [8], [12, 7], [4, 13], [0, 9], [16], [17], [4], [1], [10, 2], [13, 5], [0], [12], [16, 14], [6, 9], [5, 15], [7, 8], [16], [12, 11], [3, 13], [4, 1], [2], [11], [16, 3], [5, 0], [14, 17], [1, 18], [3], [9], [6], [13, 17], [10], [16], [5], [6, 8], [7, 6], [11, 0], [4, 13], [6], [3, 5], [9, 8], [17, 11], [19, 18], [12, 7], [3], [13, 10], [1, 18], [5, 15], [12, 11], [5], [0], [18], [3, 10], [6, 9], [4, 17], [10], [19], [4], [0, 9], [18, 6], [3, 13], [16, 14], [14, 4], [7], [4, 17], [3, 5], [13, 10], [16, 3], [11, 15], [7, 8], [17], [3, 13], [9, 8], [4], [14], [17, 12], [6, 8], [1, 12], [7, 9], [3], [11, 7], [19, 12], [9, 8], [10, 5], [13], [4, 17], [15, 0], [7, 9], [14], [1], [11, 7], [6, 9], [4, 13], [2, 15], [3], [18], [2, 15], [4], [0, 9], [7, 8], [13, 10], [14, 4], [6], [8], [14, 17], [4, 1], [1], [10], [0], [3, 5], [12, 7], [14, 4], [3, 10], [5, 0], [11, 7], [6, 9], [0], [12, 7], [4, 18], [9], [1, 18], [4, 17], [3, 13], [12, 18], [16, 3], [17, 12], [3, 10], [13, 5], [12, 11], [1, 18], [1, 19], [16, 3], [9, 8], [7, 6], [5, 11], [16], [7], [13, 5], [9], [12, 11], [4, 17], [10], [5, 11], [12, 18], [4, 13], [2, 15], [16], [3], [19, 18], [0, 9], [5], [16, 3], [1, 12], [14, 13], [6, 8], [1], [13], [19, 12], [4, 17], [3, 10], [16], [4, 1], [2, 15], [3, 5], [5, 15], [12, 18], [13, 10], [1, 19], [9], [19], [7], [6, 8], [13, 5], [16], [10, 2], [18, 6], [11, 7], [0, 9], [11], [16, 3], ----End Timer [Execute Mapping]:  1.8594176769256592

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[96, 99]
[99, 148]
[143, 161]
[148, 165]
[157, 174]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[77, 91]
[82, 97]
[138, 149]
[139, 173]
[163, 176]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[127, 129, 134]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 

[141, 152, 171]

------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[77, 91]
[82, 97]
[138, 149]
[139, 173]
[163, 176]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[96, 99]
[99, 148]
[143, 161]
[148, 165]
[157, 174]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.187464714050293

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [77, 91] xx => I, Pos: [77, 91] xx => I, Pos: [82, 97] xx => I, Pos: [82, 97] xx => I, Pos: [96, 99] cc => I, Pos: [96, 99] cc => I, Pos: [99, 148] cc => I, Pos: [99, 148] cc => I, Pos: [127, 129, 134] ccc => cc, Pos: [138, 149] xx => I, Pos: [138, 149] xx => I, Pos: [139, 173] xx => I, Pos: [139, 173] xx => I, Pos: [141, 152, 171] xcx => c, Pos: [143, 161] cc => I, Pos: [143, 161] cc => I, Pos: [148, 165] cc => I, Pos: [148, 165] cc => I, Pos: [157, 174] cc => I, Pos: [157, 174] cc => I, Pos: [163, 176] xx => I, Pos: [163, 176] xx => I]

--------End Timer [Generate Plans]:  0.015623331069946289

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [77, 91] xx => I,
 Pos: [82, 97] xx => I,
 Pos: [96, 99] cc => I,
 Pos: [127, 129, 134] ccc => cc,
 Pos: [138, 149] xx => I,
 Pos: [139, 173] xx => I,
 Pos: [141, 152, 171] xcx => c,
 Pos: [143, 161] cc => I,
 Pos: [148, 165] cc => I,
 Pos: [157, 174] cc => I,
 Pos: [163, 176] xx => I]
Change: 11, Saving: 11

Circuit before: xcccxcccxxxxccxxccccxcccxxccccxxxcxxxccccxcccccxccccxxxcccxxxcccccxccccccxccxxccccxccccxcccxxccccxxcxccccxxccxxxcccccccxccxcccccccccccccccxxcxccxccccxxccxccccxxcccxcccccccxxxccxccccxc
---------------
Apply:  Pos: [77, 91] xx => I
Apply:  Pos: [82, 97] xx => I
Apply:  Pos: [96, 99] cc => I
Apply:  Pos: [127, 129, 134] ccc => cc
Apply:  Pos: [138, 149] xx => I
Apply:  Pos: [139, 173] xx => I
Apply:  Pos: [141, 152, 171] xcx => c
Apply:  Pos: [143, 161] cc => I
Apply:  Pos: [148, 165] cc => I
Apply:  Pos: [157, 174] cc => I
Apply:  Pos: [163, 176] xx => I
---------------
Circuit after: xcccxcccxxxxccxxccccxcccxxccccxxxcxxxccccxcccccxccccxxxcccxxxcccccxccccccxccxccccccccxcccxcccxxccccxxccxxxcccccccxccxcccccccccccccccccxcccxcxcccxxccccccccxcccccxc

--------End Timer [apply mapping plan]:  0.0

[19], [15, 0], [5, 11], [6, 8], [8], [12, 7], [4, 13], [0, 9], [16], [17], [4], [1], [10, 2], [13, 5], [0], [12], [16, 14], [6, 9], [5, 15], [7, 8], [16], [12, 11], [3, 13], [4, 1], [2], [11], [16, 3], [5, 0], [14, 17], [1, 18], [3], [9], [6], [13, 17], [10], [16], [5], [6, 8], [7, 6], [11, 0], [4, 13], [6], [3, 5], [9, 8], [17, 11], [19, 18], [12, 7], [3], [13, 10], [1, 18], [5, 15], [12, 11], [5], [0], [18], [3, 10], [6, 9], [4, 17], [10], [19], [4], [0, 9], [18, 6], [3, 13], [16, 14], [14, 4], [7], [4, 17], [3, 5], [13, 10], [16, 3], [11, 15], [7, 8], [17], [3, 13], [9, 8], [4], [17, 12], [6, 8], [1, 12], [7, 9], [11, 7], [19, 12], [9, 8], [10, 5], [13], [4, 17], [15, 0], [7, 9], [1], [11, 7], [6, 9], [4, 13], [18], [4], [0, 9], [7, 8], [13, 10], [14, 4], [6], [8], [14, 17], [4, 1], [1], [10], [0], [3, 5], [12, 7], [14, 4], [3, 10], [5, 0], [11, 7], [6, 9], [0], [12, 7], [4, 18], [9], [1, 18], [4, 17], [3, 13], [12, 18], [16, 10], [17, 12], [3, 10], [13, 5], [12, 11], [1, 19], [1, 18], [9, 8], [7, 6], [5, 11], [13, 5], [0, 9], [12, 11], [10], [5, 11], [12, 18], [4, 13], [3], [19, 18], [5], [16, 3], [1, 12], [14, 13], [1], [13], [19, 12], [3, 10], [4, 1], [3, 5], [5, 15], [12, 18], [13, 10], [1, 19], [19], [13, 5], [10, 2], [18, 6], [11, 7], [0, 9], [11], [16, 3], ----End Timer [Execute Mapping]:  1.2030880451202393

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[132, 159]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[132, 159]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.156217336654663

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [132, 159] cc => I, Pos: [132, 159] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [132, 159] cc => I]
Change: 1, Saving: 1

Circuit before: xcccxcccxxxxccxxccccxcccxxccccxxxcxxxccccxcccccxccccxxxcccxxxcccccxccccccxccxccccccccxcccxcccxxccccxxccxxxcccccccxccxcccccccccccccccccxcccxcxcccxxccccccccxcccccxc
---------------
Apply:  Pos: [132, 159] cc => I
---------------
Circuit after: xcccxcccxxxxccxxccccxcccxxccccxxxcxxxccccxcccccxccccxxxcccxxxcccccxccccccxccxccccccccxcccxcccxxccccxxccxxxcccccccxccxccccccccccccccccxcccxcxcccxxccccccccxccccxc

--------End Timer [apply mapping plan]:  0.0

[19], [15, 0], [5, 11], [6, 8], [8], [12, 7], [4, 13], [0, 9], [16], [17], [4], [1], [10, 2], [13, 5], [0], [12], [16, 14], [6, 9], [5, 15], [7, 8], [16], [12, 11], [3, 13], [4, 1], [2], [11], [16, 3], [5, 0], [14, 17], [1, 18], [3], [9], [6], [13, 17], [10], [16], [5], [6, 8], [7, 6], [11, 0], [4, 13], [6], [3, 5], [9, 8], [17, 11], [19, 18], [12, 7], [3], [13, 10], [1, 18], [5, 15], [12, 11], [5], [0], [18], [3, 10], [6, 9], [4, 17], [10], [19], [4], [0, 9], [18, 6], [3, 13], [16, 14], [14, 4], [7], [4, 17], [3, 5], [13, 10], [16, 3], [11, 15], [7, 8], [17], [3, 13], [9, 8], [4], [17, 12], [6, 8], [1, 12], [7, 9], [11, 7], [19, 12], [9, 8], [10, 5], [13], [4, 17], [15, 0], [7, 9], [1], [11, 7], [6, 9], [4, 13], [18], [4], [0, 9], [7, 8], [13, 10], [14, 4], [6], [8], [14, 17], [4, 1], [1], [10], [0], [3, 5], [12, 7], [14, 4], [3, 10], [5, 0], [11, 7], [6, 9], [0], [12, 7], [4, 18], [9], [1, 18], [4, 17], [3, 13], [12, 18], [16, 10], [17, 12], [3, 10], [13, 5], [12, 11], [1, 18], [1, 19], [9, 8], [7, 6], [5, 11], [13, 5], [12, 11], [10], [5, 11], [12, 18], [4, 13], [3], [19, 18], [5], [16, 3], [1, 12], [14, 13], [1], [13], [19, 12], [3, 10], [4, 1], [3, 5], [5, 15], [12, 18], [13, 10], [1, 19], [19], [13, 5], [10, 2], [18, 6], [11, 7], [11], [16, 3], ----End Timer [Execute Mapping]:  1.156217336654663

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.1094579696655273

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: xcccxcccxxxxccxxccccxcccxxccccxxxcxxxccccxcccccxccccxxxcccxxxcccccxccccccxccxccccccccxcccxcccxxccccxxccxxxcccccccxccxccccccccccccccccxcccxcxcccxxccccccccxccccxc
---------------
---------------
Circuit after: xcccxcccxxxxccxxccccxcccxxccccxxxcxxxccccxcccccxccccxxxcccxxxcccccxccccccxccxccccccccxcccxcccxxccccxxccxxxcccccccxccxccccccccccccccccxcccxcxcccxxccccccccxccccxc

--------End Timer [apply mapping plan]:  0.0

[19], [15, 0], [5, 11], [6, 8], [8], [12, 7], [4, 13], [0, 9], [16], [17], [4], [1], [10, 2], [13, 5], [0], [12], [16, 14], [6, 9], [5, 15], [7, 8], [16], [12, 11], [3, 13], [4, 1], [2], [11], [16, 3], [5, 0], [14, 17], [1, 18], [3], [9], [6], [13, 17], [10], [16], [5], [6, 8], [7, 6], [11, 0], [4, 13], [6], [3, 5], [9, 8], [17, 11], [19, 18], [12, 7], [3], [13, 10], [1, 18], [5, 15], [12, 11], [5], [0], [18], [3, 10], [6, 9], [4, 17], [10], [19], [4], [0, 9], [18, 6], [3, 13], [16, 14], [14, 4], [7], [4, 17], [3, 5], [13, 10], [16, 3], [11, 15], [7, 8], [17], [3, 13], [9, 8], [4], [17, 12], [6, 8], [1, 12], [7, 9], [11, 7], [19, 12], [9, 8], [10, 5], [13], [4, 17], [15, 0], [7, 9], [1], [11, 7], [6, 9], [4, 13], [18], [4], [0, 9], [7, 8], [13, 10], [14, 4], [6], [8], [14, 17], [4, 1], [1], [10], [0], [3, 5], [12, 7], [14, 4], [3, 10], [5, 0], [11, 7], [6, 9], [0], [12, 7], [4, 18], [9], [1, 18], [4, 17], [3, 13], [12, 18], [16, 10], [17, 12], [3, 10], [13, 5], [12, 11], [1, 19], [1, 18], [9, 8], [7, 6], [5, 11], [13, 5], [12, 11], [10], [5, 11], [12, 18], [4, 13], [3], [19, 18], [5], [16, 3], [1, 12], [14, 13], [1], [13], [19, 12], [3, 10], [4, 1], [3, 5], [5, 15], [12, 18], [13, 10], [1, 19], [19], [13, 5], [10, 2], [18, 6], [11, 7], [11], [16, 3], ----End Timer [Execute Mapping]:  1.1094579696655273

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-x-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-x-x-cx-cx-x-x-x-x-cx-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-x-x-x-x-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-x-cx-cx-cx-x-x-x-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-cx-x-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-x-cx-cx-cx-cx-cx-x-cx 
     => total size: [270] (IBM)
 --------------------
 - qubits_num: 20, using gates: [x,cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 450


>> Solved circuit: 
Circuit Info: 
 - circuit: x-cx-cx-cx-x-cx-cx-cx-x-x-x-x-cx-cx-x-x-cx-cx-cx-cx-x-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-x-cx-x-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-x-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-cx-cx-x-x-x-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-x-cx-x-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-cx 
     => total size: [160] (IBM)
 --------------------
 - qubits_num: 20, using gates: [x,cx]
 - circuit depth: 31 - (small)
 - circuit cycle: 274

Reduced: 
 - size: 110 (40.74%)
 - depth: 14 (31.11%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.10936379432678223

[19], [16, 14], [15, 0], [5, 11], [6, 8], [8], [16, 14], [12, 7], [19, 18], [4, 13], [0, 9], [16], [17], [4], [1], [10, 2], [13, 5], [0], [12], [16, 14], [6, 9], [19, 18], [5, 15], [7, 8], [16], [12, 11], [7, 9], [3, 13], [4, 1], [2], [11], [16, 3], [5, 0], [14, 17], [7, 9], [1, 18], [3], [9], [6], [13, 17], [12, 18], [3], [10], [16], [5], [6, 8], [3], [2], [12, 18], [7, 6], [11, 0], [4, 13], [6], [3, 5], [16, 14], [9, 8], [17, 11], [19, 18], [12, 7], [3], [2], [7, 8], [13, 10], [1, 18], [5, 15], [12, 11], [5], [0], [18], [3, 10], [1, 12], [16, 14], [6, 9], [4, 17], [10], [19], [4], [1, 12], [0, 9], [18, 6], [3, 13], [16, 14], [10, 2], [6, 9], [1, 19], [4, 17], [7, 8], [7], [10, 2], [14, 4], [3, 5], [13, 10], [1, 19], [16, 3], [11, 15], [4, 17], [6, 9], [7, 8], [17], [3, 13], [9, 8], [3], [4], [14], [15], [17, 12], [6, 8], [11, 0], [3], [11, 0], [10, 2], [14, 17], [1, 19], [7, 9], [3], [15], [11, 7], [19, 12], [14, 17], [9, 8], [10, 5], [3], [13], [4, 17], [10, 2], [15, 0], [7, 9], [1, 19], [3], [14], [1], [11, 7], [6, 9], [4, 13], [2, 15], [17, 12], [3], [18], [15], [4], [0, 9], [7, 8], [3], [17, 12], [13, 10], [14, 4], [3], [6], [8], [14, 17], [4, 1], [2, 15], [15], [1], [10], [0], [3, 5], [12, 7], [14, 4], [3, 10], [5, 0], [11, 7], [16, 14], [6, 9], [3], [0], [6], [12, 7], [4, 1], [3], [9], [6], [0], [1, 18], [5, 15], [4, 17], [10, 2], [3, 13], [5, 15], [16, 14], [4, 1], [12, 18], [7, 6], [0], [16, 3], [7, 6], [17, 12], [10, 2], [3, 10], [13, 5], [12, 11], [1, 18], [19], [16, 3], [9, 8], [7, 6], [5, 11], [16], [7], [13, 5], [16], [9], [12, 11], [1, 19], [7, 6], [4, 17], [16], [19], [10], [5, 11], [12, 18], [4, 13], [7, 6], [2, 15], [16], [3], [19, 18], [0, 9], [4, 17], [11, 7], [5], [16, 3], [11, 15], [1, 12], [14, 13], [10, 2], [6, 8], [4, 17], [16], [1], [8], [13], [11, 15], [19, 12], [10, 2], [4, 17], [6, 9], [16], [8], [6, 9], [3, 10], [14, 17], [16], [0], [4, 1], [2, 15], [11, 7], [3, 5], [14, 17], [16], [0], [5, 15], [12, 18], [13, 10], [1, 19], [16], [9], [19], [7], [6, 8], [13, 5], [4, 17], [16], [4, 17], [10, 2], [18, 6], [11, 7], [0, 9], [11], [16, 3], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[1, 6]
[8, 21]
[26, 34]
[40, 48]
[54, 71]
[70, 77]
[71, 81]
[61, 86]
[82, 88]
[84, 92]
[83, 96]
[107, 109]
[92, 112]
[111, 118]
[110, 124]
[135, 143]
[174, 178]
[162, 179]
[182, 185]
[176, 187]
[185, 195]
[204, 212]
[205, 218]
[218, 227]
[222, 232]
[225, 234]
[227, 235]
[236, 239]
[219, 246]
[241, 248]
[261, 263]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[36, 41]
[41, 46]
[29, 47]
[47, 60]
[101, 108]
[108, 114]
[104, 115]
[114, 121]
[121, 128]
[128, 136]
[136, 142]
[142, 146]
[164, 169]
[166, 171]
[165, 172]
[172, 183]
[197, 200]
[200, 206]
[206, 214]
[228, 237]
[230, 238]
[237, 242]
[242, 249]
[243, 250]
[249, 255]
[255, 262]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[112, 117, 127]
[168, 173, 180]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 

[138, 151, 152]
[192, 203, 207]

------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[85, 89, 95]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[36, 41]
[41, 46]
[29, 47]
[47, 60]
[101, 108]
[108, 114]
[104, 115]
[114, 121]
[121, 128]
[128, 136]
[136, 142]
[142, 146]
[164, 169]
[166, 171]
[165, 172]
[172, 183]
[197, 200]
[200, 206]
[206, 214]
[228, 237]
[230, 238]
[237, 242]
[242, 249]
[243, 250]
[249, 255]
[255, 262]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[1, 6]
[8, 21]
[26, 34]
[40, 48]
[54, 71]
[70, 77]
[71, 81]
[61, 86]
[82, 88]
[84, 92]
[83, 96]
[107, 109]
[92, 112]
[111, 118]
[110, 124]
[135, 143]
[174, 178]
[162, 179]
[182, 185]
[176, 187]
[185, 195]
[204, 212]
[205, 218]
[218, 227]
[222, 232]
[225, 234]
[227, 235]
[236, 239]
[219, 246]
[241, 248]
[261, 263]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.6876270771026611

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [1, 6] cc => I, Pos: [1, 6] cc => I, Pos: [8, 21] cc => I, Pos: [8, 21] cc => I, Pos: [26, 34] cc => I, Pos: [26, 34] cc => I, Pos: [29, 47] xx => I, Pos: [29, 47] xx => I, Pos: [36, 41] xx => I, Pos: [36, 41] xx => I, Pos: [40, 48] cc => I, Pos: [40, 48] cc => I, Pos: [41, 46] xx => I, Pos: [41, 46] xx => I, Pos: [47, 60] xx => I, Pos: [47, 60] xx => I, Pos: [54, 71] cc => I, Pos: [54, 71] cc => I, Pos: [61, 86] cc => I, Pos: [61, 86] cc => I, Pos: [70, 77] cc => I, Pos: [70, 77] cc => I, Pos: [71, 81] cc => I, Pos: [71, 81] cc => I, Pos: [82, 88] cc => I, Pos: [82, 88] cc => I, Pos: [83, 96] cc => I, Pos: [83, 96] cc => I, Pos: [84, 92] cc => I, Pos: [84, 92] cc => I, Pos: [85, 89, 95] ccc => cc, Pos: [92, 112] cc => I, Pos: [92, 112] cc => I, Pos: [101, 108] xx => I, Pos: [101, 108] xx => I, Pos: [104, 115] xx => I, Pos: [104, 115] xx => I, Pos: [107, 109] cc => I, Pos: [107, 109] cc => I, Pos: [108, 114] xx => I, Pos: [108, 114] xx => I, Pos: [110, 124] cc => I, Pos: [110, 124] cc => I, Pos: [111, 118] cc => I, Pos: [111, 118] cc => I, Pos: [112, 117, 127] ccc => cc, Pos: [114, 121] xx => I, Pos: [114, 121] xx => I, Pos: [121, 128] xx => I, Pos: [121, 128] xx => I, Pos: [128, 136] xx => I, Pos: [128, 136] xx => I, Pos: [135, 143] cc => I, Pos: [135, 143] cc => I, Pos: [136, 142] xx => I, Pos: [136, 142] xx => I, Pos: [138, 151, 152] xcx => c, Pos: [142, 146] xx => I, Pos: [142, 146] xx => I, Pos: [162, 179] cc => I, Pos: [162, 179] cc => I, Pos: [164, 169] xx => I, Pos: [164, 169] xx => I, Pos: [165, 172] xx => I, Pos: [165, 172] xx => I, Pos: [166, 171] xx => I, Pos: [166, 171] xx => I, Pos: [168, 173, 180] ccc => cc, Pos: [172, 183] xx => I, Pos: [172, 183] xx => I, Pos: [174, 178] cc => I, Pos: [174, 178] cc => I, Pos: [176, 187] cc => I, Pos: [176, 187] cc => I, Pos: [182, 185] cc => I, Pos: [182, 185] cc => I, Pos: [185, 195] cc => I, Pos: [185, 195] cc => I, Pos: [192, 203, 207] xcx => c, Pos: [197, 200] xx => I, Pos: [197, 200] xx => I, Pos: [200, 206] xx => I, Pos: [200, 206] xx => I, Pos: [204, 212] cc => I, Pos: [204, 212] cc => I, Pos: [205, 218] cc => I, Pos: [205, 218] cc => I, Pos: [206, 214] xx => I, Pos: [206, 214] xx => I, Pos: [218, 227] cc => I, Pos: [218, 227] cc => I, Pos: [219, 246] cc => I, Pos: [219, 246] cc => I, Pos: [222, 232] cc => I, Pos: [222, 232] cc => I, Pos: [225, 234] cc => I, Pos: [225, 234] cc => I, Pos: [227, 235] cc => I, Pos: [227, 235] cc => I, Pos: [228, 237] xx => I, Pos: [228, 237] xx => I, Pos: [230, 238] xx => I, Pos: [230, 238] xx => I, Pos: [236, 239] cc => I, Pos: [236, 239] cc => I, Pos: [237, 242] xx => I, Pos: [237, 242] xx => I, Pos: [241, 248] cc => I, Pos: [241, 248] cc => I, Pos: [242, 249] xx => I, Pos: [242, 249] xx => I, Pos: [243, 250] xx => I, Pos: [243, 250] xx => I, Pos: [249, 255] xx => I, Pos: [249, 255] xx => I, Pos: [255, 262] xx => I, Pos: [255, 262] xx => I, Pos: [261, 263] cc => I, Pos: [261, 263] cc => I]

--------End Timer [Generate Plans]:  0.12499451637268066

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [1, 6] cc => I,
 Pos: [8, 21] cc => I,
 Pos: [26, 34] cc => I,
 Pos: [47, 60] xx => I,
 Pos: [36, 41] xx => I,
 Pos: [40, 48] cc => I,
 Pos: [71, 81] cc => I,
 Pos: [61, 86] cc => I,
 Pos: [70, 77] cc => I,
 Pos: [82, 88] cc => I,
 Pos: [83, 96] cc => I,
 Pos: [84, 92] cc => I,
 Pos: [85, 89, 95] ccc => cc,
 Pos: [101, 108] xx => I,
 Pos: [104, 115] xx => I,
 Pos: [107, 109] cc => I,
 Pos: [110, 124] cc => I,
 Pos: [111, 118] cc => I,
 Pos: [112, 117, 127] ccc => cc,
 Pos: [114, 121] xx => I,
 Pos: [136, 142] xx => I,
 Pos: [135, 143] cc => I,
 Pos: [138, 151, 152] xcx => c,
 Pos: [162, 179] cc => I,
 Pos: [164, 169] xx => I,
 Pos: [172, 183] xx => I,
 Pos: [166, 171] xx => I,
 Pos: [168, 173, 180] ccc => cc,
 Pos: [174, 178] cc => I,
 Pos: [176, 187] cc => I,
 Pos: [182, 185] cc => I,
 Pos: [192, 203, 207] xcx => c,
 Pos: [200, 206] xx => I,
 Pos: [204, 212] cc => I,
 Pos: [205, 218] cc => I,
 Pos: [219, 246] cc => I,
 Pos: [222, 232] cc => I,
 Pos: [225, 234] cc => I,
 Pos: [227, 235] cc => I,
 Pos: [228, 237] xx => I,
 Pos: [230, 238] xx => I,
 Pos: [236, 239] cc => I,
 Pos: [241, 248] cc => I,
 Pos: [242, 249] xx => I,
 Pos: [243, 250] xx => I,
 Pos: [255, 262] xx => I,
 Pos: [261, 263] cc => I]
Change: 47, Saving: 47

Circuit before: xccccxcccccxxxxccxxcccccxccccxxcccccxxxccxxxxcxxccccxccccccxxcccccxxxcccccxxxccccccccccxccccccccccxccxxxxcccxcccccxxcccccxxcccccxxxcccccxxxxccxcccxxxcccxxxxccccccccxxxccxxxxccccccccccxccccccccxccccxxcxxccccxxxcccccxxccccxcccccccxxxxcccccxxcccxxcccccxxccccxxxxcccxcccccxc
---------------
Apply:  Pos: [1, 6] cc => I
Apply:  Pos: [8, 21] cc => I
Apply:  Pos: [26, 34] cc => I
Apply:  Pos: [47, 60] xx => I
Apply:  Pos: [36, 41] xx => I
Apply:  Pos: [40, 48] cc => I
Apply:  Pos: [71, 81] cc => I
Apply:  Pos: [61, 86] cc => I
Apply:  Pos: [70, 77] cc => I
Apply:  Pos: [82, 88] cc => I
Apply:  Pos: [83, 96] cc => I
Apply:  Pos: [84, 92] cc => I
Apply:  Pos: [85, 89, 95] ccc => cc
Apply:  Pos: [101, 108] xx => I
Apply:  Pos: [104, 115] xx => I
Apply:  Pos: [107, 109] cc => I
Apply:  Pos: [110, 124] cc => I
Apply:  Pos: [111, 118] cc => I
Apply:  Pos: [112, 117, 127] ccc => cc
Apply:  Pos: [114, 121] xx => I
Apply:  Pos: [136, 142] xx => I
Apply:  Pos: [135, 143] cc => I
Apply:  Pos: [138, 151, 152] xcx => c
Apply:  Pos: [162, 179] cc => I
Apply:  Pos: [164, 169] xx => I
Apply:  Pos: [172, 183] xx => I
Apply:  Pos: [166, 171] xx => I
Apply:  Pos: [168, 173, 180] ccc => cc
Apply:  Pos: [174, 178] cc => I
Apply:  Pos: [176, 187] cc => I
Apply:  Pos: [182, 185] cc => I
Apply:  Pos: [192, 203, 207] xcx => c
Apply:  Pos: [200, 206] xx => I
Apply:  Pos: [204, 212] cc => I
Apply:  Pos: [205, 218] cc => I
Apply:  Pos: [219, 246] cc => I
Apply:  Pos: [222, 232] cc => I
Apply:  Pos: [225, 234] cc => I
Apply:  Pos: [227, 235] cc => I
Apply:  Pos: [228, 237] xx => I
Apply:  Pos: [230, 238] xx => I
Apply:  Pos: [236, 239] cc => I
Apply:  Pos: [241, 248] cc => I
Apply:  Pos: [242, 249] xx => I
Apply:  Pos: [243, 250] xx => I
Apply:  Pos: [255, 262] xx => I
Apply:  Pos: [261, 263] cc => I
---------------
Circuit after: xcccxcccxxxxccxxccccxcccxxccccxxcxxxcxcccxccccccxccccxxxcccxxxccccxccccccxccxxccccccccxcccxxxccccxcxccccxxxccxxxcccccccxccxcccccccccccccccxxcxcxccccxxccxccccxxcccccccccxxxccccccxc

--------End Timer [apply mapping plan]:  0.0

[19], [15, 0], [5, 11], [6, 8], [8], [12, 7], [4, 13], [0, 9], [16], [17], [4], [1], [10, 2], [13, 5], [0], [12], [16, 14], [6, 9], [5, 15], [7, 8], [16], [12, 11], [3, 13], [4, 1], [2], [11], [16, 3], [5, 0], [14, 17], [1, 18], [9], [6], [13, 17], [10], [16], [5], [6, 8], [3], [7, 6], [11, 0], [4, 13], [6], [3, 5], [16, 14], [9, 8], [17, 11], [19, 18], [12, 7], [3], [13, 10], [1, 18], [5, 15], [12, 11], [5], [0], [18], [3, 10], [6, 9], [4, 17], [10], [19], [4], [0, 9], [18, 6], [3, 13], [14, 4], [7], [4, 17], [3, 5], [13, 10], [16, 3], [11, 15], [7, 8], [17], [3, 13], [9, 8], [4], [14], [17, 12], [6, 8], [1, 12], [7, 9], [11, 7], [19, 12], [9, 8], [10, 5], [13], [4, 17], [15, 0], [7, 9], [3], [14], [1], [11, 7], [6, 9], [4, 13], [2, 15], [18], [2, 15], [4], [0, 9], [7, 8], [13, 10], [14, 4], [3], [6], [8], [14, 17], [4, 1], [1], [10], [0], [3, 5], [12, 7], [14, 4], [3, 10], [5, 0], [11, 7], [6, 9], [0], [12, 7], [4, 18], [9], [1, 18], [4, 17], [3, 13], [12, 18], [16, 3], [17, 12], [3, 10], [13, 5], [12, 11], [1, 18], [1, 19], [16, 3], [9, 8], [7, 6], [5, 11], [16], [7], [13, 5], [9], [12, 11], [10], [5, 11], [12, 18], [4, 13], [2, 15], [16], [3], [19, 18], [0, 9], [5], [16, 3], [1, 12], [14, 13], [6, 8], [1], [13], [19, 12], [3, 10], [4, 1], [2, 15], [3, 5], [5, 15], [12, 18], [13, 10], [1, 19], [9], [19], [7], [6, 8], [13, 5], [10, 2], [18, 6], [11, 7], [0, 9], [11], [16, 3], ----End Timer [Execute Mapping]:  1.8126215934753418

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[96, 98]
[98, 147]
[147, 162]
[156, 171]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[77, 91]
[90, 104]
[138, 148]
[139, 170]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[127, 129, 134]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 

[141, 151, 168]

------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[77, 91]
[90, 104]
[138, 148]
[139, 170]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[96, 98]
[98, 147]
[147, 162]
[156, 171]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.1249241828918457

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [77, 91] xx => I, Pos: [77, 91] xx => I, Pos: [90, 104] xx => I, Pos: [90, 104] xx => I, Pos: [96, 98] cc => I, Pos: [96, 98] cc => I, Pos: [98, 147] cc => I, Pos: [98, 147] cc => I, Pos: [127, 129, 134] ccc => cc, Pos: [138, 148] xx => I, Pos: [138, 148] xx => I, Pos: [139, 170] xx => I, Pos: [139, 170] xx => I, Pos: [141, 151, 168] xcx => c, Pos: [147, 162] cc => I, Pos: [147, 162] cc => I, Pos: [156, 171] cc => I, Pos: [156, 171] cc => I]

--------End Timer [Generate Plans]:  0.031247615814208984

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [77, 91] xx => I,
 Pos: [90, 104] xx => I,
 Pos: [98, 147] cc => I,
 Pos: [127, 129, 134] ccc => cc,
 Pos: [138, 148] xx => I,
 Pos: [139, 170] xx => I,
 Pos: [141, 151, 168] xcx => c,
 Pos: [156, 171] cc => I]
Change: 8, Saving: 8

Circuit before: xcccxcccxxxxccxxccccxcccxxccccxxcxxxcxcccxccccccxccccxxxcccxxxccccxccccccxccxxccccccccxcccxxxccccxcxccccxxxccxxxcccccccxccxcccccccccccccccxxcxcxccccxxccxccccxxcccccccccxxxccccccxc
---------------
Apply:  Pos: [77, 91] xx => I
Apply:  Pos: [90, 104] xx => I
Apply:  Pos: [98, 147] cc => I
Apply:  Pos: [127, 129, 134] ccc => cc
Apply:  Pos: [138, 148] xx => I
Apply:  Pos: [139, 170] xx => I
Apply:  Pos: [141, 151, 168] xcx => c
Apply:  Pos: [156, 171] cc => I
---------------
Circuit after: xcccxcccxxxxccxxccccxcccxxccccxxcxxxcxcccxccccccxccccxxxcccxxxccccxccccccxccxccccccccxcccxccccxxccccxxccxxxcccccccxccxcccccccccccccccccxcccxcxcccxxcccccccccxcccccxc

--------End Timer [apply mapping plan]:  0.0

[19], [15, 0], [5, 11], [6, 8], [8], [12, 7], [4, 13], [0, 9], [16], [17], [4], [1], [10, 2], [13, 5], [0], [12], [16, 14], [6, 9], [5, 15], [7, 8], [16], [12, 11], [3, 13], [4, 1], [2], [11], [16, 3], [5, 0], [14, 17], [1, 18], [9], [6], [13, 17], [10], [16], [5], [6, 8], [3], [7, 6], [11, 0], [4, 13], [6], [3, 5], [16, 14], [9, 8], [17, 11], [19, 18], [12, 7], [3], [13, 10], [1, 18], [5, 15], [12, 11], [5], [0], [18], [3, 10], [6, 9], [4, 17], [10], [19], [4], [0, 9], [18, 6], [3, 13], [14, 4], [7], [4, 17], [3, 5], [13, 10], [16, 3], [11, 15], [7, 8], [17], [3, 13], [9, 8], [4], [17, 12], [6, 8], [1, 12], [7, 9], [11, 7], [19, 12], [9, 8], [10, 5], [13], [4, 17], [15, 0], [7, 9], [1], [11, 7], [6, 9], [4, 13], [2, 15], [18], [4], [0, 9], [7, 8], [13, 10], [14, 4], [6], [8], [14, 17], [4, 1], [1], [10], [0], [3, 5], [12, 7], [14, 4], [3, 10], [5, 0], [11, 7], [6, 9], [0], [12, 7], [4, 18], [9], [1, 18], [4, 17], [3, 13], [12, 18], [16, 10], [17, 12], [3, 10], [13, 5], [12, 11], [1, 19], [1, 18], [9, 8], [7, 6], [5, 11], [13, 5], [0, 9], [12, 11], [10], [5, 11], [12, 18], [4, 13], [3], [19, 18], [5], [16, 3], [1, 12], [14, 13], [1], [13], [19, 12], [3, 10], [4, 1], [2, 15], [3, 5], [5, 15], [12, 18], [13, 10], [1, 19], [19], [13, 5], [10, 2], [18, 6], [11, 7], [0, 9], [11], [16, 3], ----End Timer [Execute Mapping]:  1.1561717987060547

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[133, 161]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[133, 161]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.1720845699310303

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [133, 161] cc => I, Pos: [133, 161] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [133, 161] cc => I]
Change: 1, Saving: 1

Circuit before: xcccxcccxxxxccxxccccxcccxxccccxxcxxxcxcccxccccccxccccxxxcccxxxccccxccccccxccxccccccccxcccxccccxxccccxxccxxxcccccccxccxcccccccccccccccccxcccxcxcccxxcccccccccxcccccxc
---------------
Apply:  Pos: [133, 161] cc => I
---------------
Circuit after: xcccxcccxxxxccxxccccxcccxxccccxxcxxxcxcccxccccccxccccxxxcccxxxccccxccccccxccxccccccccxcccxccccxxccccxxccxxxcccccccxccxccccccccccccccccxcccxcxcccxxcccccccccxccccxc

--------End Timer [apply mapping plan]:  0.0

[19], [15, 0], [5, 11], [6, 8], [8], [12, 7], [4, 13], [0, 9], [16], [17], [4], [1], [10, 2], [13, 5], [0], [12], [16, 14], [6, 9], [5, 15], [7, 8], [16], [12, 11], [3, 13], [4, 1], [2], [11], [16, 3], [5, 0], [14, 17], [1, 18], [9], [6], [13, 17], [10], [16], [5], [6, 8], [3], [7, 6], [11, 0], [4, 13], [6], [3, 5], [16, 14], [9, 8], [17, 11], [19, 18], [12, 7], [3], [13, 10], [1, 18], [5, 15], [12, 11], [5], [0], [18], [3, 10], [6, 9], [4, 17], [10], [19], [4], [0, 9], [18, 6], [3, 13], [14, 4], [7], [4, 17], [3, 5], [13, 10], [16, 3], [11, 15], [7, 8], [17], [3, 13], [9, 8], [4], [17, 12], [6, 8], [1, 12], [7, 9], [11, 7], [19, 12], [9, 8], [10, 5], [13], [4, 17], [15, 0], [7, 9], [1], [11, 7], [6, 9], [4, 13], [2, 15], [18], [4], [0, 9], [7, 8], [13, 10], [14, 4], [6], [8], [14, 17], [4, 1], [1], [10], [0], [3, 5], [12, 7], [14, 4], [3, 10], [5, 0], [11, 7], [6, 9], [0], [12, 7], [4, 18], [9], [1, 18], [4, 17], [3, 13], [12, 18], [16, 10], [17, 12], [3, 10], [13, 5], [12, 11], [1, 18], [1, 19], [9, 8], [7, 6], [5, 11], [13, 5], [12, 11], [10], [5, 11], [12, 18], [4, 13], [3], [19, 18], [5], [16, 3], [1, 12], [14, 13], [1], [13], [19, 12], [3, 10], [4, 1], [2, 15], [3, 5], [5, 15], [12, 18], [13, 10], [1, 19], [19], [13, 5], [10, 2], [18, 6], [11, 7], [11], [16, 3], ----End Timer [Execute Mapping]:  1.1720845699310303

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.1249184608459473

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: xcccxcccxxxxccxxccccxcccxxccccxxcxxxcxcccxccccccxccccxxxcccxxxccccxccccccxccxccccccccxcccxccccxxccccxxccxxxcccccccxccxccccccccccccccccxcccxcxcccxxcccccccccxccccxc
---------------
---------------
Circuit after: xcccxcccxxxxccxxccccxcccxxccccxxcxxxcxcccxccccccxccccxxxcccxxxccccxccccccxccxccccccccxcccxccccxxccccxxccxxxcccccccxccxccccccccccccccccxcccxcxcccxxcccccccccxccccxc

--------End Timer [apply mapping plan]:  0.0

[19], [15, 0], [5, 11], [6, 8], [8], [12, 7], [4, 13], [0, 9], [16], [17], [4], [1], [10, 2], [13, 5], [0], [12], [16, 14], [6, 9], [5, 15], [7, 8], [16], [12, 11], [3, 13], [4, 1], [2], [11], [16, 3], [5, 0], [14, 17], [1, 18], [9], [6], [13, 17], [10], [16], [5], [6, 8], [3], [7, 6], [11, 0], [4, 13], [6], [3, 5], [16, 14], [9, 8], [17, 11], [19, 18], [12, 7], [3], [13, 10], [1, 18], [5, 15], [12, 11], [5], [0], [18], [3, 10], [6, 9], [4, 17], [10], [19], [4], [0, 9], [18, 6], [3, 13], [14, 4], [7], [4, 17], [3, 5], [13, 10], [16, 3], [11, 15], [7, 8], [17], [3, 13], [9, 8], [4], [17, 12], [6, 8], [1, 12], [7, 9], [11, 7], [19, 12], [9, 8], [10, 5], [13], [4, 17], [15, 0], [7, 9], [1], [11, 7], [6, 9], [4, 13], [2, 15], [18], [4], [0, 9], [7, 8], [13, 10], [14, 4], [6], [8], [14, 17], [4, 1], [1], [10], [0], [3, 5], [12, 7], [14, 4], [3, 10], [5, 0], [11, 7], [6, 9], [0], [12, 7], [4, 18], [9], [1, 18], [4, 17], [3, 13], [12, 18], [16, 10], [17, 12], [3, 10], [13, 5], [12, 11], [1, 19], [1, 18], [9, 8], [7, 6], [5, 11], [13, 5], [12, 11], [10], [5, 11], [12, 18], [4, 13], [3], [19, 18], [5], [16, 3], [1, 12], [14, 13], [1], [13], [19, 12], [3, 10], [4, 1], [2, 15], [3, 5], [5, 15], [12, 18], [13, 10], [1, 19], [19], [13, 5], [10, 2], [18, 6], [11, 7], [11], [16, 3], ----End Timer [Execute Mapping]:  1.1249184608459473

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-x-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-x-x-cx-cx-x-x-x-x-cx-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-x-x-x-x-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-x-cx-cx-cx-x-x-x-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-cx-x-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-x-cx-cx-cx-cx-cx-x-cx 
     => total size: [270] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx,x]
 - circuit depth: 45 - (small)
 - circuit cycle: 450


>> Solved circuit: 
Circuit Info: 
 - circuit: x-cx-cx-cx-x-cx-cx-cx-x-x-x-x-cx-cx-x-x-cx-cx-cx-cx-x-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-cx-x-x-x-cx-x-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-x-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-cx-cx-x-x-x-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-x-cx-x-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-cx 
     => total size: [162] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx,x]
 - circuit depth: 31 - (small)
 - circuit cycle: 278

Reduced: 
 - size: 108 (40.00%)
 - depth: 14 (31.11%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.12499189376831055

[19], [16, 14], [15, 0], [5, 11], [6, 8], [8], [16, 14], [12, 7], [19, 18], [4, 13], [0, 9], [16], [17], [4], [1], [10, 2], [13, 5], [0], [12], [16, 14], [6, 9], [19, 18], [5, 15], [7, 8], [16], [12, 11], [7, 9], [3, 13], [4, 1], [2], [11], [16, 3], [5, 0], [14, 17], [7, 9], [1, 18], [3], [9], [6], [13, 17], [12, 18], [3], [10], [16], [5], [6, 8], [3], [2], [12, 18], [7, 6], [11, 0], [4, 13], [6], [3, 5], [16, 14], [9, 8], [17, 11], [19, 18], [12, 7], [3], [2], [7, 8], [13, 10], [1, 18], [5, 15], [12, 11], [5], [0], [18], [3, 10], [1, 12], [16, 14], [6, 9], [4, 17], [10], [19], [4], [1, 12], [0, 9], [18, 6], [3, 13], [16, 14], [10, 2], [6, 9], [1, 19], [4, 17], [7, 8], [7], [10, 2], [14, 4], [3, 5], [13, 10], [1, 19], [16, 3], [11, 15], [4, 17], [6, 9], [7, 8], [17], [3, 13], [9, 8], [3], [4], [14], [15], [17, 12], [6, 8], [11, 0], [3], [11, 0], [10, 2], [14, 17], [1, 19], [7, 9], [3], [15], [11, 7], [19, 12], [14, 17], [9, 8], [10, 5], [3], [13], [4, 17], [10, 2], [15, 0], [7, 9], [1, 19], [3], [14], [1], [11, 7], [6, 9], [4, 13], [2, 15], [17, 12], [3], [18], [15], [4], [0, 9], [7, 8], [3], [17, 12], [13, 10], [14, 4], [3], [6], [8], [14, 17], [4, 1], [2, 15], [15], [1], [10], [0], [3, 5], [12, 7], [14, 4], [3, 10], [5, 0], [11, 7], [16, 14], [6, 9], [3], [0], [6], [12, 7], [4, 1], [3], [9], [6], [0], [1, 18], [5, 15], [4, 17], [10, 2], [3, 13], [5, 15], [16, 14], [4, 1], [12, 18], [7, 6], [0], [16, 3], [7, 6], [17, 12], [10, 2], [3, 10], [13, 5], [12, 11], [1, 18], [19], [16, 3], [9, 8], [7, 6], [5, 11], [16], [7], [13, 5], [16], [9], [12, 11], [1, 19], [7, 6], [4, 17], [16], [19], [10], [5, 11], [12, 18], [4, 13], [7, 6], [2, 15], [16], [3], [19, 18], [0, 9], [4, 17], [11, 7], [5], [16, 3], [11, 15], [1, 12], [14, 13], [10, 2], [6, 8], [4, 17], [16], [1], [8], [13], [11, 15], [19, 12], [10, 2], [4, 17], [6, 9], [16], [8], [6, 9], [3, 10], [14, 17], [16], [0], [4, 1], [2, 15], [11, 7], [3, 5], [14, 17], [16], [0], [5, 15], [12, 18], [13, 10], [1, 19], [16], [9], [19], [7], [6, 8], [13, 5], [4, 17], [16], [4, 17], [10, 2], [18, 6], [11, 7], [0, 9], [11], [16, 3], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[1, 6]
[8, 21]
[26, 34]
[40, 48]
[54, 71]
[70, 77]
[71, 81]
[61, 86]
[82, 88]
[84, 92]
[83, 96]
[107, 109]
[92, 112]
[111, 118]
[110, 124]
[135, 143]
[174, 178]
[162, 179]
[182, 185]
[176, 187]
[185, 195]
[204, 212]
[205, 218]
[218, 227]
[222, 232]
[225, 234]
[227, 235]
[236, 239]
[219, 246]
[241, 248]
[261, 263]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[36, 41]
[41, 46]
[29, 47]
[47, 60]
[101, 108]
[108, 114]
[104, 115]
[114, 121]
[121, 128]
[128, 136]
[136, 142]
[142, 146]
[164, 169]
[166, 171]
[165, 172]
[172, 183]
[197, 200]
[200, 206]
[206, 214]
[228, 237]
[230, 238]
[237, 242]
[242, 249]
[243, 250]
[249, 255]
[255, 262]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[112, 117, 127]
[168, 173, 180]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 

[138, 151, 152]
[192, 203, 207]

------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[85, 89, 95]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[36, 41]
[41, 46]
[29, 47]
[47, 60]
[101, 108]
[108, 114]
[104, 115]
[114, 121]
[121, 128]
[128, 136]
[136, 142]
[142, 146]
[164, 169]
[166, 171]
[165, 172]
[172, 183]
[197, 200]
[200, 206]
[206, 214]
[228, 237]
[230, 238]
[237, 242]
[242, 249]
[243, 250]
[249, 255]
[255, 262]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[1, 6]
[8, 21]
[26, 34]
[40, 48]
[54, 71]
[70, 77]
[71, 81]
[61, 86]
[82, 88]
[84, 92]
[83, 96]
[107, 109]
[92, 112]
[111, 118]
[110, 124]
[135, 143]
[174, 178]
[162, 179]
[182, 185]
[176, 187]
[185, 195]
[204, 212]
[205, 218]
[218, 227]
[222, 232]
[225, 234]
[227, 235]
[236, 239]
[219, 246]
[241, 248]
[261, 263]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.7345402240753174

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [1, 6] cc => I, Pos: [1, 6] cc => I, Pos: [8, 21] cc => I, Pos: [8, 21] cc => I, Pos: [26, 34] cc => I, Pos: [26, 34] cc => I, Pos: [29, 47] xx => I, Pos: [29, 47] xx => I, Pos: [36, 41] xx => I, Pos: [36, 41] xx => I, Pos: [40, 48] cc => I, Pos: [40, 48] cc => I, Pos: [41, 46] xx => I, Pos: [41, 46] xx => I, Pos: [47, 60] xx => I, Pos: [47, 60] xx => I, Pos: [54, 71] cc => I, Pos: [54, 71] cc => I, Pos: [61, 86] cc => I, Pos: [61, 86] cc => I, Pos: [70, 77] cc => I, Pos: [70, 77] cc => I, Pos: [71, 81] cc => I, Pos: [71, 81] cc => I, Pos: [82, 88] cc => I, Pos: [82, 88] cc => I, Pos: [83, 96] cc => I, Pos: [83, 96] cc => I, Pos: [84, 92] cc => I, Pos: [84, 92] cc => I, Pos: [85, 89, 95] ccc => cc, Pos: [92, 112] cc => I, Pos: [92, 112] cc => I, Pos: [101, 108] xx => I, Pos: [101, 108] xx => I, Pos: [104, 115] xx => I, Pos: [104, 115] xx => I, Pos: [107, 109] cc => I, Pos: [107, 109] cc => I, Pos: [108, 114] xx => I, Pos: [108, 114] xx => I, Pos: [110, 124] cc => I, Pos: [110, 124] cc => I, Pos: [111, 118] cc => I, Pos: [111, 118] cc => I, Pos: [112, 117, 127] ccc => cc, Pos: [114, 121] xx => I, Pos: [114, 121] xx => I, Pos: [121, 128] xx => I, Pos: [121, 128] xx => I, Pos: [128, 136] xx => I, Pos: [128, 136] xx => I, Pos: [135, 143] cc => I, Pos: [135, 143] cc => I, Pos: [136, 142] xx => I, Pos: [136, 142] xx => I, Pos: [138, 151, 152] xcx => c, Pos: [142, 146] xx => I, Pos: [142, 146] xx => I, Pos: [162, 179] cc => I, Pos: [162, 179] cc => I, Pos: [164, 169] xx => I, Pos: [164, 169] xx => I, Pos: [165, 172] xx => I, Pos: [165, 172] xx => I, Pos: [166, 171] xx => I, Pos: [166, 171] xx => I, Pos: [168, 173, 180] ccc => cc, Pos: [172, 183] xx => I, Pos: [172, 183] xx => I, Pos: [174, 178] cc => I, Pos: [174, 178] cc => I, Pos: [176, 187] cc => I, Pos: [176, 187] cc => I, Pos: [182, 185] cc => I, Pos: [182, 185] cc => I, Pos: [185, 195] cc => I, Pos: [185, 195] cc => I, Pos: [192, 203, 207] xcx => c, Pos: [197, 200] xx => I, Pos: [197, 200] xx => I, Pos: [200, 206] xx => I, Pos: [200, 206] xx => I, Pos: [204, 212] cc => I, Pos: [204, 212] cc => I, Pos: [205, 218] cc => I, Pos: [205, 218] cc => I, Pos: [206, 214] xx => I, Pos: [206, 214] xx => I, Pos: [218, 227] cc => I, Pos: [218, 227] cc => I, Pos: [219, 246] cc => I, Pos: [219, 246] cc => I, Pos: [222, 232] cc => I, Pos: [222, 232] cc => I, Pos: [225, 234] cc => I, Pos: [225, 234] cc => I, Pos: [227, 235] cc => I, Pos: [227, 235] cc => I, Pos: [228, 237] xx => I, Pos: [228, 237] xx => I, Pos: [230, 238] xx => I, Pos: [230, 238] xx => I, Pos: [236, 239] cc => I, Pos: [236, 239] cc => I, Pos: [237, 242] xx => I, Pos: [237, 242] xx => I, Pos: [241, 248] cc => I, Pos: [241, 248] cc => I, Pos: [242, 249] xx => I, Pos: [242, 249] xx => I, Pos: [243, 250] xx => I, Pos: [243, 250] xx => I, Pos: [249, 255] xx => I, Pos: [249, 255] xx => I, Pos: [255, 262] xx => I, Pos: [255, 262] xx => I, Pos: [261, 263] cc => I, Pos: [261, 263] cc => I]

--------End Timer [Generate Plans]:  0.10936903953552246

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [1, 6] cc => I,
 Pos: [8, 21] cc => I,
 Pos: [26, 34] cc => I,
 Pos: [47, 60] xx => I,
 Pos: [41, 46] xx => I,
 Pos: [40, 48] cc => I,
 Pos: [71, 81] cc => I,
 Pos: [61, 86] cc => I,
 Pos: [70, 77] cc => I,
 Pos: [82, 88] cc => I,
 Pos: [83, 96] cc => I,
 Pos: [92, 112] cc => I,
 Pos: [85, 89, 95] ccc => cc,
 Pos: [101, 108] xx => I,
 Pos: [104, 115] xx => I,
 Pos: [107, 109] cc => I,
 Pos: [110, 124] cc => I,
 Pos: [111, 118] cc => I,
 Pos: [121, 128] xx => I,
 Pos: [135, 143] cc => I,
 Pos: [136, 142] xx => I,
 Pos: [138, 151, 152] xcx => c,
 Pos: [162, 179] cc => I,
 Pos: [164, 169] xx => I,
 Pos: [165, 172] xx => I,
 Pos: [166, 171] xx => I,
 Pos: [168, 173, 180] ccc => cc,
 Pos: [174, 178] cc => I,
 Pos: [176, 187] cc => I,
 Pos: [182, 185] cc => I,
 Pos: [192, 203, 207] xcx => c,
 Pos: [197, 200] xx => I,
 Pos: [204, 212] cc => I,
 Pos: [218, 227] cc => I,
 Pos: [206, 214] xx => I,
 Pos: [219, 246] cc => I,
 Pos: [222, 232] cc => I,
 Pos: [225, 234] cc => I,
 Pos: [237, 242] xx => I,
 Pos: [230, 238] xx => I,
 Pos: [236, 239] cc => I,
 Pos: [241, 248] cc => I,
 Pos: [243, 250] xx => I,
 Pos: [249, 255] xx => I,
 Pos: [261, 263] cc => I]
Change: 45, Saving: 45

Circuit before: xccccxcccccxxxxccxxcccccxccccxxcccccxxxccxxxxcxxccccxccccccxxcccccxxxcccccxxxccccccccccxccccccccccxccxxxxcccxcccccxxcccccxxcccccxxxcccccxxxxccxcccxxxcccxxxxccccccccxxxccxxxxccccccccccxccccccccxccccxxcxxccccxxxcccccxxccccxcccccccxxxxcccccxxcccxxcccccxxccccxxxxcccxcccccxc
---------------
Apply:  Pos: [1, 6] cc => I
Apply:  Pos: [8, 21] cc => I
Apply:  Pos: [26, 34] cc => I
Apply:  Pos: [47, 60] xx => I
Apply:  Pos: [41, 46] xx => I
Apply:  Pos: [40, 48] cc => I
Apply:  Pos: [71, 81] cc => I
Apply:  Pos: [61, 86] cc => I
Apply:  Pos: [70, 77] cc => I
Apply:  Pos: [82, 88] cc => I
Apply:  Pos: [83, 96] cc => I
Apply:  Pos: [92, 112] cc => I
Apply:  Pos: [85, 89, 95] ccc => cc
Apply:  Pos: [101, 108] xx => I
Apply:  Pos: [104, 115] xx => I
Apply:  Pos: [107, 109] cc => I
Apply:  Pos: [110, 124] cc => I
Apply:  Pos: [111, 118] cc => I
Apply:  Pos: [121, 128] xx => I
Apply:  Pos: [135, 143] cc => I
Apply:  Pos: [136, 142] xx => I
Apply:  Pos: [138, 151, 152] xcx => c
Apply:  Pos: [162, 179] cc => I
Apply:  Pos: [164, 169] xx => I
Apply:  Pos: [165, 172] xx => I
Apply:  Pos: [166, 171] xx => I
Apply:  Pos: [168, 173, 180] ccc => cc
Apply:  Pos: [174, 178] cc => I
Apply:  Pos: [176, 187] cc => I
Apply:  Pos: [182, 185] cc => I
Apply:  Pos: [192, 203, 207] xcx => c
Apply:  Pos: [197, 200] xx => I
Apply:  Pos: [204, 212] cc => I
Apply:  Pos: [218, 227] cc => I
Apply:  Pos: [206, 214] xx => I
Apply:  Pos: [219, 246] cc => I
Apply:  Pos: [222, 232] cc => I
Apply:  Pos: [225, 234] cc => I
Apply:  Pos: [237, 242] xx => I
Apply:  Pos: [230, 238] xx => I
Apply:  Pos: [236, 239] cc => I
Apply:  Pos: [241, 248] cc => I
Apply:  Pos: [243, 250] xx => I
Apply:  Pos: [249, 255] xx => I
Apply:  Pos: [261, 263] cc => I
---------------
Circuit after: xcccxcccxxxxccxxccccxcccxxccccxxxcxxxccccxccccccxccccxxxcccxxxcccccxccccccxccxxcccxccccxccccxxccccxcxccccxxxccxxxcccccccccxccccxcccccccccccxcxccxccccxccxccccxxxccccccccccxxxccxccccxc

--------End Timer [apply mapping plan]:  0.015622377395629883

[19], [15, 0], [5, 11], [6, 8], [8], [12, 7], [4, 13], [0, 9], [16], [17], [4], [1], [10, 2], [13, 5], [0], [12], [16, 14], [6, 9], [5, 15], [7, 8], [16], [12, 11], [3, 13], [4, 1], [2], [11], [16, 3], [5, 0], [14, 17], [1, 18], [3], [9], [6], [13, 17], [10], [16], [5], [6, 8], [7, 6], [11, 0], [4, 13], [6], [3, 5], [16, 14], [9, 8], [17, 11], [19, 18], [12, 7], [3], [13, 10], [1, 18], [5, 15], [12, 11], [5], [0], [18], [3, 10], [6, 9], [4, 17], [10], [19], [4], [0, 9], [18, 6], [3, 13], [1, 19], [14, 4], [7], [4, 17], [3, 5], [13, 10], [16, 3], [11, 15], [7, 8], [17], [3, 13], [9, 8], [4], [14], [17, 12], [6, 8], [7, 9], [3], [11, 7], [19, 12], [9, 8], [10, 5], [13], [4, 17], [15, 0], [7, 9], [1, 19], [14], [1], [11, 7], [6, 9], [4, 13], [2, 15], [18], [2, 15], [4], [0, 9], [7, 8], [13, 10], [14, 4], [3], [6], [8], [14, 17], [4, 1], [1], [10], [0], [3, 5], [12, 7], [14, 4], [3, 10], [5, 0], [11, 7], [6, 9], [12, 7], [4, 18], [9], [1, 18], [4, 17], [3, 13], [12, 18], [0], [16, 3], [17, 12], [3, 10], [13, 5], [12, 11], [1, 18], [1, 19], [16, 3], [9, 8], [7, 6], [5, 11], [7], [13, 5], [9], [12, 11], [4, 17], [10], [5, 11], [12, 18], [4, 13], [2, 15], [3], [19, 18], [0, 9], [5], [16, 3], [1, 12], [14, 13], [6, 8], [16], [1], [13], [19, 12], [4, 17], [3, 10], [4, 1], [2, 15], [3, 5], [5, 15], [12, 18], [13, 10], [1, 19], [9], [19], [7], [6, 8], [13, 5], [16], [10, 2], [18, 6], [11, 7], [0, 9], [11], [16, 3], ----End Timer [Execute Mapping]:  1.8595316410064697

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[97, 99]
[99, 148]
[143, 161]
[148, 164]
[156, 173]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[78, 92]
[82, 105]
[139, 172]
[157, 175]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[128, 130, 135]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 

[141, 151, 170]

------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[78, 92]
[82, 105]
[139, 172]
[157, 175]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[97, 99]
[99, 148]
[143, 161]
[148, 164]
[156, 173]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.2345223426818848

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [78, 92] xx => I, Pos: [78, 92] xx => I, Pos: [82, 105] xx => I, Pos: [82, 105] xx => I, Pos: [97, 99] cc => I, Pos: [97, 99] cc => I, Pos: [99, 148] cc => I, Pos: [99, 148] cc => I, Pos: [128, 130, 135] ccc => cc, Pos: [139, 172] xx => I, Pos: [139, 172] xx => I, Pos: [141, 151, 170] xcx => c, Pos: [143, 161] cc => I, Pos: [143, 161] cc => I, Pos: [148, 164] cc => I, Pos: [148, 164] cc => I, Pos: [156, 173] cc => I, Pos: [156, 173] cc => I, Pos: [157, 175] xx => I, Pos: [157, 175] xx => I]

--------End Timer [Generate Plans]:  0.03124833106994629

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [78, 92] xx => I,
 Pos: [82, 105] xx => I,
 Pos: [97, 99] cc => I,
 Pos: [128, 130, 135] ccc => cc,
 Pos: [139, 172] xx => I,
 Pos: [141, 151, 170] xcx => c,
 Pos: [143, 161] cc => I,
 Pos: [148, 164] cc => I,
 Pos: [156, 173] cc => I,
 Pos: [157, 175] xx => I]
Change: 10, Saving: 10

Circuit before: xcccxcccxxxxccxxccccxcccxxccccxxxcxxxccccxccccccxccccxxxcccxxxcccccxccccccxccxxcccxccccxccccxxccccxcxccccxxxccxxxcccccccccxccccxcccccccccccxcxccxccccxccxccccxxxccccccccccxxxccxccccxc
---------------
Apply:  Pos: [78, 92] xx => I
Apply:  Pos: [82, 105] xx => I
Apply:  Pos: [97, 99] cc => I
Apply:  Pos: [128, 130, 135] ccc => cc
Apply:  Pos: [139, 172] xx => I
Apply:  Pos: [141, 151, 170] xcx => c
Apply:  Pos: [143, 161] cc => I
Apply:  Pos: [148, 164] cc => I
Apply:  Pos: [156, 173] cc => I
Apply:  Pos: [157, 175] xx => I
---------------
Circuit after: xcccxcccxxxxccxxccccxcccxxccccxxxcxxxccccxccccccxccccxxxcccxxxcccccxccccccxccxcccccccxccccxcccxxccccxxccxxxcccccccccxccccxcccccccccccccxcccxcxcccxxccccccccxcccccxc

--------End Timer [apply mapping plan]:  0.0

[19], [15, 0], [5, 11], [6, 8], [8], [12, 7], [4, 13], [0, 9], [16], [17], [4], [1], [10, 2], [13, 5], [0], [12], [16, 14], [6, 9], [5, 15], [7, 8], [16], [12, 11], [3, 13], [4, 1], [2], [11], [16, 3], [5, 0], [14, 17], [1, 18], [3], [9], [6], [13, 17], [10], [16], [5], [6, 8], [7, 6], [11, 0], [4, 13], [6], [3, 5], [16, 14], [9, 8], [17, 11], [19, 18], [12, 7], [3], [13, 10], [1, 18], [5, 15], [12, 11], [5], [0], [18], [3, 10], [6, 9], [4, 17], [10], [19], [4], [0, 9], [18, 6], [3, 13], [1, 19], [14, 4], [7], [4, 17], [3, 5], [13, 10], [16, 3], [11, 15], [7, 8], [17], [3, 13], [9, 8], [4], [17, 12], [6, 8], [7, 9], [11, 7], [19, 12], [9, 8], [10, 5], [13], [4, 17], [15, 0], [7, 9], [1, 19], [1], [11, 7], [6, 9], [4, 13], [18], [4], [0, 9], [7, 8], [13, 10], [14, 4], [6], [8], [14, 17], [4, 1], [1], [10], [0], [3, 5], [12, 7], [14, 4], [3, 10], [5, 0], [11, 7], [6, 9], [12, 7], [4, 18], [9], [1, 18], [4, 17], [3, 13], [12, 18], [0], [16, 10], [17, 12], [3, 10], [13, 5], [12, 11], [1, 19], [1, 18], [9, 8], [7, 6], [5, 11], [13, 5], [0, 9], [12, 11], [10], [5, 11], [12, 18], [4, 13], [3], [19, 18], [5], [16, 3], [1, 12], [14, 13], [1], [13], [19, 12], [3, 10], [4, 1], [3, 5], [5, 15], [12, 18], [13, 10], [1, 19], [19], [13, 5], [10, 2], [18, 6], [11, 7], [0, 9], [11], [16, 3], ----End Timer [Execute Mapping]:  1.265770673751831

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[133, 160]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[133, 160]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.1875426769256592

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [133, 160] cc => I, Pos: [133, 160] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [133, 160] cc => I]
Change: 1, Saving: 1

Circuit before: xcccxcccxxxxccxxccccxcccxxccccxxxcxxxccccxccccccxccccxxxcccxxxcccccxccccccxccxcccccccxccccxcccxxccccxxccxxxcccccccccxccccxcccccccccccccxcccxcxcccxxccccccccxcccccxc
---------------
Apply:  Pos: [133, 160] cc => I
---------------
Circuit after: xcccxcccxxxxccxxccccxcccxxccccxxxcxxxccccxccccccxccccxxxcccxxxcccccxccccccxccxcccccccxccccxcccxxccccxxccxxxcccccccccxccccxccccccccccccxcccxcxcccxxccccccccxccccxc

--------End Timer [apply mapping plan]:  0.0

[19], [15, 0], [5, 11], [6, 8], [8], [12, 7], [4, 13], [0, 9], [16], [17], [4], [1], [10, 2], [13, 5], [0], [12], [16, 14], [6, 9], [5, 15], [7, 8], [16], [12, 11], [3, 13], [4, 1], [2], [11], [16, 3], [5, 0], [14, 17], [1, 18], [3], [9], [6], [13, 17], [10], [16], [5], [6, 8], [7, 6], [11, 0], [4, 13], [6], [3, 5], [16, 14], [9, 8], [17, 11], [19, 18], [12, 7], [3], [13, 10], [1, 18], [5, 15], [12, 11], [5], [0], [18], [3, 10], [6, 9], [4, 17], [10], [19], [4], [0, 9], [18, 6], [3, 13], [1, 19], [14, 4], [7], [4, 17], [3, 5], [13, 10], [16, 3], [11, 15], [7, 8], [17], [3, 13], [9, 8], [4], [17, 12], [6, 8], [7, 9], [11, 7], [19, 12], [9, 8], [10, 5], [13], [4, 17], [15, 0], [7, 9], [1, 19], [1], [11, 7], [6, 9], [4, 13], [18], [4], [0, 9], [7, 8], [13, 10], [14, 4], [6], [8], [14, 17], [4, 1], [1], [10], [0], [3, 5], [12, 7], [14, 4], [3, 10], [5, 0], [11, 7], [6, 9], [12, 7], [4, 18], [9], [1, 18], [4, 17], [3, 13], [12, 18], [0], [16, 10], [17, 12], [3, 10], [13, 5], [12, 11], [1, 18], [1, 19], [9, 8], [7, 6], [5, 11], [13, 5], [12, 11], [10], [5, 11], [12, 18], [4, 13], [3], [19, 18], [5], [16, 3], [1, 12], [14, 13], [1], [13], [19, 12], [3, 10], [4, 1], [3, 5], [5, 15], [12, 18], [13, 10], [1, 19], [19], [13, 5], [10, 2], [18, 6], [11, 7], [11], [16, 3], ----End Timer [Execute Mapping]:  1.1875426769256592

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.1405601501464844

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: xcccxcccxxxxccxxccccxcccxxccccxxxcxxxccccxccccccxccccxxxcccxxxcccccxccccccxccxcccccccxccccxcccxxccccxxccxxxcccccccccxccccxccccccccccccxcccxcxcccxxccccccccxccccxc
---------------
---------------
Circuit after: xcccxcccxxxxccxxccccxcccxxccccxxxcxxxccccxccccccxccccxxxcccxxxcccccxccccccxccxcccccccxccccxcccxxccccxxccxxxcccccccccxccccxccccccccccccxcccxcxcccxxccccccccxccccxc

--------End Timer [apply mapping plan]:  0.0

[19], [15, 0], [5, 11], [6, 8], [8], [12, 7], [4, 13], [0, 9], [16], [17], [4], [1], [10, 2], [13, 5], [0], [12], [16, 14], [6, 9], [5, 15], [7, 8], [16], [12, 11], [3, 13], [4, 1], [2], [11], [16, 3], [5, 0], [14, 17], [1, 18], [3], [9], [6], [13, 17], [10], [16], [5], [6, 8], [7, 6], [11, 0], [4, 13], [6], [3, 5], [16, 14], [9, 8], [17, 11], [19, 18], [12, 7], [3], [13, 10], [1, 18], [5, 15], [12, 11], [5], [0], [18], [3, 10], [6, 9], [4, 17], [10], [19], [4], [0, 9], [18, 6], [3, 13], [1, 19], [14, 4], [7], [4, 17], [3, 5], [13, 10], [16, 3], [11, 15], [7, 8], [17], [3, 13], [9, 8], [4], [17, 12], [6, 8], [7, 9], [11, 7], [19, 12], [9, 8], [10, 5], [13], [4, 17], [15, 0], [7, 9], [1, 19], [1], [11, 7], [6, 9], [4, 13], [18], [4], [0, 9], [7, 8], [13, 10], [14, 4], [6], [8], [14, 17], [4, 1], [1], [10], [0], [3, 5], [12, 7], [14, 4], [3, 10], [5, 0], [11, 7], [6, 9], [12, 7], [4, 18], [9], [1, 18], [4, 17], [3, 13], [12, 18], [0], [16, 10], [17, 12], [3, 10], [13, 5], [12, 11], [1, 19], [1, 18], [9, 8], [7, 6], [5, 11], [13, 5], [12, 11], [10], [5, 11], [12, 18], [4, 13], [3], [19, 18], [5], [16, 3], [1, 12], [14, 13], [1], [13], [19, 12], [3, 10], [4, 1], [3, 5], [5, 15], [12, 18], [13, 10], [1, 19], [19], [13, 5], [10, 2], [18, 6], [11, 7], [11], [16, 3], ----End Timer [Execute Mapping]:  1.1405601501464844

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-x-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-x-x-cx-cx-x-x-x-x-cx-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-x-x-x-x-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-x-cx-cx-cx-x-x-x-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-cx-x-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-x-cx-cx-cx-cx-cx-x-cx 
     => total size: [270] (IBM)
 --------------------
 - qubits_num: 20, using gates: [x,cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 450


>> Solved circuit: 
Circuit Info: 
 - circuit: x-cx-cx-cx-x-cx-cx-cx-x-x-x-x-cx-cx-x-x-cx-cx-cx-cx-x-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-x-cx-x-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-cx-cx-x-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-x-cx-x-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-cx 
     => total size: [161] (IBM)
 --------------------
 - qubits_num: 20, using gates: [x,cx]
 - circuit depth: 31 - (small)
 - circuit cycle: 276

Reduced: 
 - size: 109 (40.37%)
 - depth: 14 (31.11%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.12497091293334961

[19], [16, 14], [15, 0], [5, 11], [6, 8], [8], [16, 14], [12, 7], [19, 18], [4, 13], [0, 9], [16], [17], [4], [1], [10, 2], [13, 5], [0], [12], [16, 14], [6, 9], [19, 18], [5, 15], [7, 8], [16], [12, 11], [7, 9], [3, 13], [4, 1], [2], [11], [16, 3], [5, 0], [14, 17], [7, 9], [1, 18], [3], [9], [6], [13, 17], [12, 18], [3], [10], [16], [5], [6, 8], [3], [2], [12, 18], [7, 6], [11, 0], [4, 13], [6], [3, 5], [16, 14], [9, 8], [17, 11], [19, 18], [12, 7], [3], [2], [7, 8], [13, 10], [1, 18], [5, 15], [12, 11], [5], [0], [18], [3, 10], [1, 12], [16, 14], [6, 9], [4, 17], [10], [19], [4], [1, 12], [0, 9], [18, 6], [3, 13], [16, 14], [10, 2], [6, 9], [1, 19], [4, 17], [7, 8], [7], [10, 2], [14, 4], [3, 5], [13, 10], [1, 19], [16, 3], [11, 15], [4, 17], [6, 9], [7, 8], [17], [3, 13], [9, 8], [3], [4], [14], [15], [17, 12], [6, 8], [11, 0], [3], [11, 0], [10, 2], [14, 17], [1, 19], [7, 9], [3], [15], [11, 7], [19, 12], [14, 17], [9, 8], [10, 5], [3], [13], [4, 17], [10, 2], [15, 0], [7, 9], [1, 19], [3], [14], [1], [11, 7], [6, 9], [4, 13], [2, 15], [17, 12], [3], [18], [15], [4], [0, 9], [7, 8], [3], [17, 12], [13, 10], [14, 4], [3], [6], [8], [14, 17], [4, 1], [2, 15], [15], [1], [10], [0], [3, 5], [12, 7], [14, 4], [3, 10], [5, 0], [11, 7], [16, 14], [6, 9], [3], [0], [6], [12, 7], [4, 1], [3], [9], [6], [0], [1, 18], [5, 15], [4, 17], [10, 2], [3, 13], [5, 15], [16, 14], [4, 1], [12, 18], [7, 6], [0], [16, 3], [7, 6], [17, 12], [10, 2], [3, 10], [13, 5], [12, 11], [1, 18], [19], [16, 3], [9, 8], [7, 6], [5, 11], [16], [7], [13, 5], [16], [9], [12, 11], [1, 19], [7, 6], [4, 17], [16], [19], [10], [5, 11], [12, 18], [4, 13], [7, 6], [2, 15], [16], [3], [19, 18], [0, 9], [4, 17], [11, 7], [5], [16, 3], [11, 15], [1, 12], [14, 13], [10, 2], [6, 8], [4, 17], [16], [1], [8], [13], [11, 15], [19, 12], [10, 2], [4, 17], [6, 9], [16], [8], [6, 9], [3, 10], [14, 17], [16], [0], [4, 1], [2, 15], [11, 7], [3, 5], [14, 17], [16], [0], [5, 15], [12, 18], [13, 10], [1, 19], [16], [9], [19], [7], [6, 8], [13, 5], [4, 17], [16], [4, 17], [10, 2], [18, 6], [11, 7], [0, 9], [11], [16, 3], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[1, 6]
[8, 21]
[26, 34]
[40, 48]
[54, 71]
[70, 77]
[71, 81]
[61, 86]
[82, 88]
[84, 92]
[83, 96]
[107, 109]
[92, 112]
[111, 118]
[110, 124]
[135, 143]
[174, 178]
[162, 179]
[182, 185]
[176, 187]
[185, 195]
[204, 212]
[205, 218]
[218, 227]
[222, 232]
[225, 234]
[227, 235]
[236, 239]
[219, 246]
[241, 248]
[261, 263]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[36, 41]
[41, 46]
[29, 47]
[47, 60]
[101, 108]
[108, 114]
[104, 115]
[114, 121]
[121, 128]
[128, 136]
[136, 142]
[142, 146]
[164, 169]
[166, 171]
[165, 172]
[172, 183]
[197, 200]
[200, 206]
[206, 214]
[228, 237]
[230, 238]
[237, 242]
[242, 249]
[243, 250]
[249, 255]
[255, 262]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[112, 117, 127]
[168, 173, 180]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 

[138, 151, 152]
[192, 203, 207]

------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[85, 89, 95]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[36, 41]
[41, 46]
[29, 47]
[47, 60]
[101, 108]
[108, 114]
[104, 115]
[114, 121]
[121, 128]
[128, 136]
[136, 142]
[142, 146]
[164, 169]
[166, 171]
[165, 172]
[172, 183]
[197, 200]
[200, 206]
[206, 214]
[228, 237]
[230, 238]
[237, 242]
[242, 249]
[243, 250]
[249, 255]
[255, 262]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[1, 6]
[8, 21]
[26, 34]
[40, 48]
[54, 71]
[70, 77]
[71, 81]
[61, 86]
[82, 88]
[84, 92]
[83, 96]
[107, 109]
[92, 112]
[111, 118]
[110, 124]
[135, 143]
[174, 178]
[162, 179]
[182, 185]
[176, 187]
[185, 195]
[204, 212]
[205, 218]
[218, 227]
[222, 232]
[225, 234]
[227, 235]
[236, 239]
[219, 246]
[241, 248]
[261, 263]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.7031641006469727

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [1, 6] cc => I, Pos: [1, 6] cc => I, Pos: [8, 21] cc => I, Pos: [8, 21] cc => I, Pos: [26, 34] cc => I, Pos: [26, 34] cc => I, Pos: [29, 47] xx => I, Pos: [29, 47] xx => I, Pos: [36, 41] xx => I, Pos: [36, 41] xx => I, Pos: [40, 48] cc => I, Pos: [40, 48] cc => I, Pos: [41, 46] xx => I, Pos: [41, 46] xx => I, Pos: [47, 60] xx => I, Pos: [47, 60] xx => I, Pos: [54, 71] cc => I, Pos: [54, 71] cc => I, Pos: [61, 86] cc => I, Pos: [61, 86] cc => I, Pos: [70, 77] cc => I, Pos: [70, 77] cc => I, Pos: [71, 81] cc => I, Pos: [71, 81] cc => I, Pos: [82, 88] cc => I, Pos: [82, 88] cc => I, Pos: [83, 96] cc => I, Pos: [83, 96] cc => I, Pos: [84, 92] cc => I, Pos: [84, 92] cc => I, Pos: [85, 89, 95] ccc => cc, Pos: [92, 112] cc => I, Pos: [92, 112] cc => I, Pos: [101, 108] xx => I, Pos: [101, 108] xx => I, Pos: [104, 115] xx => I, Pos: [104, 115] xx => I, Pos: [107, 109] cc => I, Pos: [107, 109] cc => I, Pos: [108, 114] xx => I, Pos: [108, 114] xx => I, Pos: [110, 124] cc => I, Pos: [110, 124] cc => I, Pos: [111, 118] cc => I, Pos: [111, 118] cc => I, Pos: [112, 117, 127] ccc => cc, Pos: [114, 121] xx => I, Pos: [114, 121] xx => I, Pos: [121, 128] xx => I, Pos: [121, 128] xx => I, Pos: [128, 136] xx => I, Pos: [128, 136] xx => I, Pos: [135, 143] cc => I, Pos: [135, 143] cc => I, Pos: [136, 142] xx => I, Pos: [136, 142] xx => I, Pos: [138, 151, 152] xcx => c, Pos: [142, 146] xx => I, Pos: [142, 146] xx => I, Pos: [162, 179] cc => I, Pos: [162, 179] cc => I, Pos: [164, 169] xx => I, Pos: [164, 169] xx => I, Pos: [165, 172] xx => I, Pos: [165, 172] xx => I, Pos: [166, 171] xx => I, Pos: [166, 171] xx => I, Pos: [168, 173, 180] ccc => cc, Pos: [172, 183] xx => I, Pos: [172, 183] xx => I, Pos: [174, 178] cc => I, Pos: [174, 178] cc => I, Pos: [176, 187] cc => I, Pos: [176, 187] cc => I, Pos: [182, 185] cc => I, Pos: [182, 185] cc => I, Pos: [185, 195] cc => I, Pos: [185, 195] cc => I, Pos: [192, 203, 207] xcx => c, Pos: [197, 200] xx => I, Pos: [197, 200] xx => I, Pos: [200, 206] xx => I, Pos: [200, 206] xx => I, Pos: [204, 212] cc => I, Pos: [204, 212] cc => I, Pos: [205, 218] cc => I, Pos: [205, 218] cc => I, Pos: [206, 214] xx => I, Pos: [206, 214] xx => I, Pos: [218, 227] cc => I, Pos: [218, 227] cc => I, Pos: [219, 246] cc => I, Pos: [219, 246] cc => I, Pos: [222, 232] cc => I, Pos: [222, 232] cc => I, Pos: [225, 234] cc => I, Pos: [225, 234] cc => I, Pos: [227, 235] cc => I, Pos: [227, 235] cc => I, Pos: [228, 237] xx => I, Pos: [228, 237] xx => I, Pos: [230, 238] xx => I, Pos: [230, 238] xx => I, Pos: [236, 239] cc => I, Pos: [236, 239] cc => I, Pos: [237, 242] xx => I, Pos: [237, 242] xx => I, Pos: [241, 248] cc => I, Pos: [241, 248] cc => I, Pos: [242, 249] xx => I, Pos: [242, 249] xx => I, Pos: [243, 250] xx => I, Pos: [243, 250] xx => I, Pos: [249, 255] xx => I, Pos: [249, 255] xx => I, Pos: [255, 262] xx => I, Pos: [255, 262] xx => I, Pos: [261, 263] cc => I, Pos: [261, 263] cc => I]

--------End Timer [Generate Plans]:  0.10938143730163574

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [1, 6] cc => I,
 Pos: [8, 21] cc => I,
 Pos: [26, 34] cc => I,
 Pos: [47, 60] xx => I,
 Pos: [36, 41] xx => I,
 Pos: [40, 48] cc => I,
 Pos: [71, 81] cc => I,
 Pos: [61, 86] cc => I,
 Pos: [70, 77] cc => I,
 Pos: [82, 88] cc => I,
 Pos: [83, 96] cc => I,
 Pos: [92, 112] cc => I,
 Pos: [85, 89, 95] ccc => cc,
 Pos: [108, 114] xx => I,
 Pos: [104, 115] xx => I,
 Pos: [107, 109] cc => I,
 Pos: [110, 124] cc => I,
 Pos: [111, 118] cc => I,
 Pos: [121, 128] xx => I,
 Pos: [135, 143] cc => I,
 Pos: [142, 146] xx => I,
 Pos: [138, 151, 152] xcx => c,
 Pos: [162, 179] cc => I,
 Pos: [164, 169] xx => I,
 Pos: [172, 183] xx => I,
 Pos: [166, 171] xx => I,
 Pos: [168, 173, 180] ccc => cc,
 Pos: [174, 178] cc => I,
 Pos: [176, 187] cc => I,
 Pos: [185, 195] cc => I,
 Pos: [192, 203, 207] xcx => c,
 Pos: [197, 200] xx => I,
 Pos: [204, 212] cc => I,
 Pos: [218, 227] cc => I,
 Pos: [206, 214] xx => I,
 Pos: [219, 246] cc => I,
 Pos: [222, 232] cc => I,
 Pos: [225, 234] cc => I,
 Pos: [228, 237] xx => I,
 Pos: [230, 238] xx => I,
 Pos: [236, 239] cc => I,
 Pos: [241, 248] cc => I,
 Pos: [249, 255] xx => I,
 Pos: [243, 250] xx => I,
 Pos: [261, 263] cc => I]
Change: 45, Saving: 45

Circuit before: xccccxcccccxxxxccxxcccccxccccxxcccccxxxccxxxxcxxccccxccccccxxcccccxxxcccccxxxccccccccccxccccccccccxccxxxxcccxcccccxxcccccxxcccccxxxcccccxxxxccxcccxxxcccxxxxccccccccxxxccxxxxccccccccccxccccccccxccccxxcxxccccxxxcccccxxccccxcccccccxxxxcccccxxcccxxcccccxxccccxxxxcccxcccccxc
---------------
Apply:  Pos: [1, 6] cc => I
Apply:  Pos: [8, 21] cc => I
Apply:  Pos: [26, 34] cc => I
Apply:  Pos: [47, 60] xx => I
Apply:  Pos: [36, 41] xx => I
Apply:  Pos: [40, 48] cc => I
Apply:  Pos: [71, 81] cc => I
Apply:  Pos: [61, 86] cc => I
Apply:  Pos: [70, 77] cc => I
Apply:  Pos: [82, 88] cc => I
Apply:  Pos: [83, 96] cc => I
Apply:  Pos: [92, 112] cc => I
Apply:  Pos: [85, 89, 95] ccc => cc
Apply:  Pos: [108, 114] xx => I
Apply:  Pos: [104, 115] xx => I
Apply:  Pos: [107, 109] cc => I
Apply:  Pos: [110, 124] cc => I
Apply:  Pos: [111, 118] cc => I
Apply:  Pos: [121, 128] xx => I
Apply:  Pos: [135, 143] cc => I
Apply:  Pos: [142, 146] xx => I
Apply:  Pos: [138, 151, 152] xcx => c
Apply:  Pos: [162, 179] cc => I
Apply:  Pos: [164, 169] xx => I
Apply:  Pos: [172, 183] xx => I
Apply:  Pos: [166, 171] xx => I
Apply:  Pos: [168, 173, 180] ccc => cc
Apply:  Pos: [174, 178] cc => I
Apply:  Pos: [176, 187] cc => I
Apply:  Pos: [185, 195] cc => I
Apply:  Pos: [192, 203, 207] xcx => c
Apply:  Pos: [197, 200] xx => I
Apply:  Pos: [204, 212] cc => I
Apply:  Pos: [218, 227] cc => I
Apply:  Pos: [206, 214] xx => I
Apply:  Pos: [219, 246] cc => I
Apply:  Pos: [222, 232] cc => I
Apply:  Pos: [225, 234] cc => I
Apply:  Pos: [228, 237] xx => I
Apply:  Pos: [230, 238] xx => I
Apply:  Pos: [236, 239] cc => I
Apply:  Pos: [241, 248] cc => I
Apply:  Pos: [249, 255] xx => I
Apply:  Pos: [243, 250] xx => I
Apply:  Pos: [261, 263] cc => I
---------------
Circuit after: xcccxcccxxxxccxxccccxcccxxccccxxcxxxcxcccxccccccxccccxxxcccxxxcccccxccccccxccxxxcccccccxccccxxccccxxcxccccxxccxxxcccccccxccxcccccccccccccccxcxccxccccxccxccccxxcccxcccccccxxxccxccccxc

--------End Timer [apply mapping plan]:  0.0

[19], [15, 0], [5, 11], [6, 8], [8], [12, 7], [4, 13], [0, 9], [16], [17], [4], [1], [10, 2], [13, 5], [0], [12], [16, 14], [6, 9], [5, 15], [7, 8], [16], [12, 11], [3, 13], [4, 1], [2], [11], [16, 3], [5, 0], [14, 17], [1, 18], [9], [6], [13, 17], [10], [16], [5], [6, 8], [3], [7, 6], [11, 0], [4, 13], [6], [3, 5], [16, 14], [9, 8], [17, 11], [19, 18], [12, 7], [3], [13, 10], [1, 18], [5, 15], [12, 11], [5], [0], [18], [3, 10], [6, 9], [4, 17], [10], [19], [4], [0, 9], [18, 6], [3, 13], [1, 19], [14, 4], [7], [4, 17], [3, 5], [13, 10], [16, 3], [11, 15], [7, 8], [17], [3, 13], [9, 8], [3], [4], [14], [17, 12], [6, 8], [7, 9], [11, 7], [19, 12], [9, 8], [10, 5], [13], [4, 17], [15, 0], [7, 9], [1, 19], [14], [1], [11, 7], [6, 9], [4, 13], [2, 15], [3], [18], [2, 15], [4], [0, 9], [7, 8], [13, 10], [14, 4], [6], [8], [14, 17], [4, 1], [1], [10], [0], [3, 5], [12, 7], [14, 4], [3, 10], [5, 0], [11, 7], [6, 9], [0], [12, 7], [4, 18], [9], [1, 18], [4, 17], [3, 13], [12, 18], [7, 6], [16, 3], [17, 12], [3, 10], [13, 5], [12, 11], [1, 18], [1, 19], [16, 3], [9, 8], [5, 11], [7], [13, 5], [9], [12, 11], [4, 17], [10], [5, 11], [12, 18], [4, 13], [2, 15], [3], [19, 18], [0, 9], [5], [16, 3], [1, 12], [14, 13], [6, 8], [1], [13], [19, 12], [4, 17], [3, 10], [16], [4, 1], [2, 15], [3, 5], [5, 15], [12, 18], [13, 10], [1, 19], [9], [19], [7], [6, 8], [13, 5], [16], [10, 2], [18, 6], [11, 7], [0, 9], [11], [16, 3], ----End Timer [Execute Mapping]:  1.8125455379486084

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[97, 100]
[100, 148]
[143, 160]
[148, 164]
[156, 173]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[79, 92]
[77, 98]
[139, 172]
[162, 175]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[129, 131, 136]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 

[141, 151, 170]

------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[79, 92]
[77, 98]
[139, 172]
[162, 175]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[97, 100]
[100, 148]
[143, 160]
[148, 164]
[156, 173]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.2343263626098633

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [77, 98] xx => I, Pos: [77, 98] xx => I, Pos: [79, 92] xx => I, Pos: [79, 92] xx => I, Pos: [97, 100] cc => I, Pos: [97, 100] cc => I, Pos: [100, 148] cc => I, Pos: [100, 148] cc => I, Pos: [129, 131, 136] ccc => cc, Pos: [139, 172] xx => I, Pos: [139, 172] xx => I, Pos: [141, 151, 170] xcx => c, Pos: [143, 160] cc => I, Pos: [143, 160] cc => I, Pos: [148, 164] cc => I, Pos: [148, 164] cc => I, Pos: [156, 173] cc => I, Pos: [156, 173] cc => I, Pos: [162, 175] xx => I, Pos: [162, 175] xx => I]

--------End Timer [Generate Plans]:  0.015611410140991211

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [77, 98] xx => I,
 Pos: [79, 92] xx => I,
 Pos: [100, 148] cc => I,
 Pos: [129, 131, 136] ccc => cc,
 Pos: [139, 172] xx => I,
 Pos: [141, 151, 170] xcx => c,
 Pos: [143, 160] cc => I,
 Pos: [156, 173] cc => I,
 Pos: [162, 175] xx => I]
Change: 9, Saving: 9

Circuit before: xcccxcccxxxxccxxccccxcccxxccccxxcxxxcxcccxccccccxccccxxxcccxxxcccccxccccccxccxxxcccccccxccccxxccccxxcxccccxxccxxxcccccccxccxcccccccccccccccxcxccxccccxccxccccxxcccxcccccccxxxccxccccxc
---------------
Apply:  Pos: [77, 98] xx => I
Apply:  Pos: [79, 92] xx => I
Apply:  Pos: [100, 148] cc => I
Apply:  Pos: [129, 131, 136] ccc => cc
Apply:  Pos: [139, 172] xx => I
Apply:  Pos: [141, 151, 170] xcx => c
Apply:  Pos: [143, 160] cc => I
Apply:  Pos: [156, 173] cc => I
Apply:  Pos: [162, 175] xx => I
---------------
Circuit after: xcccxcccxxxxccxxccccxcccxxccccxxcxxxcxcccxccccccxccccxxxcccxxxcccccxccccccxccxcccccccxccccxccccxxccccxxccxxxcccccccxccxcccccccccccccccccxcccxcxcccxxcccccccccxcccccxc

--------End Timer [apply mapping plan]:  0.0

[19], [15, 0], [5, 11], [6, 8], [8], [12, 7], [4, 13], [0, 9], [16], [17], [4], [1], [10, 2], [13, 5], [0], [12], [16, 14], [6, 9], [5, 15], [7, 8], [16], [12, 11], [3, 13], [4, 1], [2], [11], [16, 3], [5, 0], [14, 17], [1, 18], [9], [6], [13, 17], [10], [16], [5], [6, 8], [3], [7, 6], [11, 0], [4, 13], [6], [3, 5], [16, 14], [9, 8], [17, 11], [19, 18], [12, 7], [3], [13, 10], [1, 18], [5, 15], [12, 11], [5], [0], [18], [3, 10], [6, 9], [4, 17], [10], [19], [4], [0, 9], [18, 6], [3, 13], [1, 19], [14, 4], [7], [4, 17], [3, 5], [13, 10], [16, 3], [11, 15], [7, 8], [17], [3, 13], [9, 8], [4], [17, 12], [6, 8], [7, 9], [11, 7], [19, 12], [9, 8], [10, 5], [13], [4, 17], [15, 0], [7, 9], [1, 19], [1], [11, 7], [6, 9], [4, 13], [2, 15], [18], [4], [0, 9], [7, 8], [13, 10], [14, 4], [6], [8], [14, 17], [4, 1], [1], [10], [0], [3, 5], [12, 7], [14, 4], [3, 10], [5, 0], [11, 7], [6, 9], [0], [12, 7], [4, 18], [9], [1, 18], [4, 17], [3, 13], [12, 18], [7, 6], [16, 10], [17, 12], [3, 10], [13, 5], [12, 11], [1, 19], [1, 18], [9, 8], [5, 11], [13, 5], [0, 9], [12, 11], [10], [5, 11], [12, 18], [4, 13], [3], [19, 18], [5], [16, 3], [1, 12], [14, 13], [1], [13], [19, 12], [3, 10], [4, 1], [2, 15], [3, 5], [5, 15], [12, 18], [13, 10], [1, 19], [19], [13, 5], [10, 2], [18, 6], [11, 7], [0, 9], [11], [16, 3], ----End Timer [Execute Mapping]:  1.2499377727508545

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[134, 162]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[134, 162]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.187535285949707

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [134, 162] cc => I, Pos: [134, 162] cc => I]

--------End Timer [Generate Plans]:  0.015623331069946289

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [134, 162] cc => I]
Change: 1, Saving: 1

Circuit before: xcccxcccxxxxccxxccccxcccxxccccxxcxxxcxcccxccccccxccccxxxcccxxxcccccxccccccxccxcccccccxccccxccccxxccccxxccxxxcccccccxccxcccccccccccccccccxcccxcxcccxxcccccccccxcccccxc
---------------
Apply:  Pos: [134, 162] cc => I
---------------
Circuit after: xcccxcccxxxxccxxccccxcccxxccccxxcxxxcxcccxccccccxccccxxxcccxxxcccccxccccccxccxcccccccxccccxccccxxccccxxccxxxcccccccxccxccccccccccccccccxcccxcxcccxxcccccccccxccccxc

--------End Timer [apply mapping plan]:  0.0

[19], [15, 0], [5, 11], [6, 8], [8], [12, 7], [4, 13], [0, 9], [16], [17], [4], [1], [10, 2], [13, 5], [0], [12], [16, 14], [6, 9], [5, 15], [7, 8], [16], [12, 11], [3, 13], [4, 1], [2], [11], [16, 3], [5, 0], [14, 17], [1, 18], [9], [6], [13, 17], [10], [16], [5], [6, 8], [3], [7, 6], [11, 0], [4, 13], [6], [3, 5], [16, 14], [9, 8], [17, 11], [19, 18], [12, 7], [3], [13, 10], [1, 18], [5, 15], [12, 11], [5], [0], [18], [3, 10], [6, 9], [4, 17], [10], [19], [4], [0, 9], [18, 6], [3, 13], [1, 19], [14, 4], [7], [4, 17], [3, 5], [13, 10], [16, 3], [11, 15], [7, 8], [17], [3, 13], [9, 8], [4], [17, 12], [6, 8], [7, 9], [11, 7], [19, 12], [9, 8], [10, 5], [13], [4, 17], [15, 0], [7, 9], [1, 19], [1], [11, 7], [6, 9], [4, 13], [2, 15], [18], [4], [0, 9], [7, 8], [13, 10], [14, 4], [6], [8], [14, 17], [4, 1], [1], [10], [0], [3, 5], [12, 7], [14, 4], [3, 10], [5, 0], [11, 7], [6, 9], [0], [12, 7], [4, 18], [9], [1, 18], [4, 17], [3, 13], [12, 18], [7, 6], [16, 10], [17, 12], [3, 10], [13, 5], [12, 11], [1, 18], [1, 19], [9, 8], [5, 11], [13, 5], [12, 11], [10], [5, 11], [12, 18], [4, 13], [3], [19, 18], [5], [16, 3], [1, 12], [14, 13], [1], [13], [19, 12], [3, 10], [4, 1], [2, 15], [3, 5], [5, 15], [12, 18], [13, 10], [1, 19], [19], [13, 5], [10, 2], [18, 6], [11, 7], [11], [16, 3], ----End Timer [Execute Mapping]:  1.2031586170196533

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.172302484512329

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: xcccxcccxxxxccxxccccxcccxxccccxxcxxxcxcccxccccccxccccxxxcccxxxcccccxccccccxccxcccccccxccccxccccxxccccxxccxxxcccccccxccxccccccccccccccccxcccxcxcccxxcccccccccxccccxc
---------------
---------------
Circuit after: xcccxcccxxxxccxxccccxcccxxccccxxcxxxcxcccxccccccxccccxxxcccxxxcccccxccccccxccxcccccccxccccxccccxxccccxxccxxxcccccccxccxccccccccccccccccxcccxcxcccxxcccccccccxccccxc

--------End Timer [apply mapping plan]:  0.0

[19], [15, 0], [5, 11], [6, 8], [8], [12, 7], [4, 13], [0, 9], [16], [17], [4], [1], [10, 2], [13, 5], [0], [12], [16, 14], [6, 9], [5, 15], [7, 8], [16], [12, 11], [3, 13], [4, 1], [2], [11], [16, 3], [5, 0], [14, 17], [1, 18], [9], [6], [13, 17], [10], [16], [5], [6, 8], [3], [7, 6], [11, 0], [4, 13], [6], [3, 5], [16, 14], [9, 8], [17, 11], [19, 18], [12, 7], [3], [13, 10], [1, 18], [5, 15], [12, 11], [5], [0], [18], [3, 10], [6, 9], [4, 17], [10], [19], [4], [0, 9], [18, 6], [3, 13], [1, 19], [14, 4], [7], [4, 17], [3, 5], [13, 10], [16, 3], [11, 15], [7, 8], [17], [3, 13], [9, 8], [4], [17, 12], [6, 8], [7, 9], [11, 7], [19, 12], [9, 8], [10, 5], [13], [4, 17], [15, 0], [7, 9], [1, 19], [1], [11, 7], [6, 9], [4, 13], [2, 15], [18], [4], [0, 9], [7, 8], [13, 10], [14, 4], [6], [8], [14, 17], [4, 1], [1], [10], [0], [3, 5], [12, 7], [14, 4], [3, 10], [5, 0], [11, 7], [6, 9], [0], [12, 7], [4, 18], [9], [1, 18], [4, 17], [3, 13], [12, 18], [7, 6], [16, 10], [17, 12], [3, 10], [13, 5], [12, 11], [1, 19], [1, 18], [9, 8], [5, 11], [13, 5], [12, 11], [10], [5, 11], [12, 18], [4, 13], [3], [19, 18], [5], [16, 3], [1, 12], [14, 13], [1], [13], [19, 12], [3, 10], [4, 1], [2, 15], [3, 5], [5, 15], [12, 18], [13, 10], [1, 19], [19], [13, 5], [10, 2], [18, 6], [11, 7], [11], [16, 3], ----End Timer [Execute Mapping]:  1.172302484512329

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-x-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-x-x-cx-cx-x-x-x-x-cx-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-x-x-x-x-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-x-cx-cx-cx-x-x-x-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-cx-x-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-x-cx-cx-cx-cx-cx-x-cx 
     => total size: [270] (IBM)
 --------------------
 - qubits_num: 20, using gates: [x,cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 450


>> Solved circuit: 
Circuit Info: 
 - circuit: x-cx-cx-cx-x-cx-cx-cx-x-x-x-x-cx-cx-x-x-cx-cx-cx-cx-x-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-cx-x-x-x-cx-x-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-cx-cx-x-x-x-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-x-cx-x-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-cx 
     => total size: [163] (IBM)
 --------------------
 - qubits_num: 20, using gates: [x,cx]
 - circuit depth: 31 - (small)
 - circuit cycle: 280

Reduced: 
 - size: 107 (39.63%)
 - depth: 14 (31.11%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.1250143051147461

[19], [16, 14], [15, 0], [5, 11], [6, 8], [8], [16, 14], [12, 7], [19, 18], [4, 13], [0, 9], [16], [17], [4], [1], [10, 2], [13, 5], [0], [12], [16, 14], [6, 9], [19, 18], [5, 15], [7, 8], [16], [12, 11], [7, 9], [3, 13], [4, 1], [2], [11], [16, 3], [5, 0], [14, 17], [7, 9], [1, 18], [3], [9], [6], [13, 17], [12, 18], [3], [10], [16], [5], [6, 8], [3], [2], [12, 18], [7, 6], [11, 0], [4, 13], [6], [3, 5], [16, 14], [9, 8], [17, 11], [19, 18], [12, 7], [3], [2], [7, 8], [13, 10], [1, 18], [5, 15], [12, 11], [5], [0], [18], [3, 10], [1, 12], [16, 14], [6, 9], [4, 17], [10], [19], [4], [1, 12], [0, 9], [18, 6], [3, 13], [16, 14], [10, 2], [6, 9], [1, 19], [4, 17], [7, 8], [7], [10, 2], [14, 4], [3, 5], [13, 10], [1, 19], [16, 3], [11, 15], [4, 17], [6, 9], [7, 8], [17], [3, 13], [9, 8], [3], [4], [14], [15], [17, 12], [6, 8], [11, 0], [3], [11, 0], [10, 2], [14, 17], [1, 19], [7, 9], [3], [15], [11, 7], [19, 12], [14, 17], [9, 8], [10, 5], [3], [13], [4, 17], [10, 2], [15, 0], [7, 9], [1, 19], [3], [14], [1], [11, 7], [6, 9], [4, 13], [2, 15], [17, 12], [3], [18], [15], [4], [0, 9], [7, 8], [3], [17, 12], [13, 10], [14, 4], [3], [6], [8], [14, 17], [4, 1], [2, 15], [15], [1], [10], [0], [3, 5], [12, 7], [14, 4], [3, 10], [5, 0], [11, 7], [16, 14], [6, 9], [3], [0], [6], [12, 7], [4, 1], [3], [9], [6], [0], [1, 18], [5, 15], [4, 17], [10, 2], [3, 13], [5, 15], [16, 14], [4, 1], [12, 18], [7, 6], [0], [16, 3], [7, 6], [17, 12], [10, 2], [3, 10], [13, 5], [12, 11], [1, 18], [19], [16, 3], [9, 8], [7, 6], [5, 11], [16], [7], [13, 5], [16], [9], [12, 11], [1, 19], [7, 6], [4, 17], [16], [19], [10], [5, 11], [12, 18], [4, 13], [7, 6], [2, 15], [16], [3], [19, 18], [0, 9], [4, 17], [11, 7], [5], [16, 3], [11, 15], [1, 12], [14, 13], [10, 2], [6, 8], [4, 17], [16], [1], [8], [13], [11, 15], [19, 12], [10, 2], [4, 17], [6, 9], [16], [8], [6, 9], [3, 10], [14, 17], [16], [0], [4, 1], [2, 15], [11, 7], [3, 5], [14, 17], [16], [0], [5, 15], [12, 18], [13, 10], [1, 19], [16], [9], [19], [7], [6, 8], [13, 5], [4, 17], [16], [4, 17], [10, 2], [18, 6], [11, 7], [0, 9], [11], [16, 3], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[1, 6]
[8, 21]
[26, 34]
[40, 48]
[54, 71]
[70, 77]
[71, 81]
[61, 86]
[82, 88]
[84, 92]
[83, 96]
[107, 109]
[92, 112]
[111, 118]
[110, 124]
[135, 143]
[174, 178]
[162, 179]
[182, 185]
[176, 187]
[185, 195]
[204, 212]
[205, 218]
[218, 227]
[222, 232]
[225, 234]
[227, 235]
[236, 239]
[219, 246]
[241, 248]
[261, 263]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[36, 41]
[41, 46]
[29, 47]
[47, 60]
[101, 108]
[108, 114]
[104, 115]
[114, 121]
[121, 128]
[128, 136]
[136, 142]
[142, 146]
[164, 169]
[166, 171]
[165, 172]
[172, 183]
[197, 200]
[200, 206]
[206, 214]
[228, 237]
[230, 238]
[237, 242]
[242, 249]
[243, 250]
[249, 255]
[255, 262]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[112, 117, 127]
[168, 173, 180]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 

[138, 151, 152]
[192, 203, 207]

------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[85, 89, 95]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[36, 41]
[41, 46]
[29, 47]
[47, 60]
[101, 108]
[108, 114]
[104, 115]
[114, 121]
[121, 128]
[128, 136]
[136, 142]
[142, 146]
[164, 169]
[166, 171]
[165, 172]
[172, 183]
[197, 200]
[200, 206]
[206, 214]
[228, 237]
[230, 238]
[237, 242]
[242, 249]
[243, 250]
[249, 255]
[255, 262]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[1, 6]
[8, 21]
[26, 34]
[40, 48]
[54, 71]
[70, 77]
[71, 81]
[61, 86]
[82, 88]
[84, 92]
[83, 96]
[107, 109]
[92, 112]
[111, 118]
[110, 124]
[135, 143]
[174, 178]
[162, 179]
[182, 185]
[176, 187]
[185, 195]
[204, 212]
[205, 218]
[218, 227]
[222, 232]
[225, 234]
[227, 235]
[236, 239]
[219, 246]
[241, 248]
[261, 263]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.7028133869171143

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [1, 6] cc => I, Pos: [1, 6] cc => I, Pos: [8, 21] cc => I, Pos: [8, 21] cc => I, Pos: [26, 34] cc => I, Pos: [26, 34] cc => I, Pos: [29, 47] xx => I, Pos: [29, 47] xx => I, Pos: [36, 41] xx => I, Pos: [36, 41] xx => I, Pos: [40, 48] cc => I, Pos: [40, 48] cc => I, Pos: [41, 46] xx => I, Pos: [41, 46] xx => I, Pos: [47, 60] xx => I, Pos: [47, 60] xx => I, Pos: [54, 71] cc => I, Pos: [54, 71] cc => I, Pos: [61, 86] cc => I, Pos: [61, 86] cc => I, Pos: [70, 77] cc => I, Pos: [70, 77] cc => I, Pos: [71, 81] cc => I, Pos: [71, 81] cc => I, Pos: [82, 88] cc => I, Pos: [82, 88] cc => I, Pos: [83, 96] cc => I, Pos: [83, 96] cc => I, Pos: [84, 92] cc => I, Pos: [84, 92] cc => I, Pos: [85, 89, 95] ccc => cc, Pos: [92, 112] cc => I, Pos: [92, 112] cc => I, Pos: [101, 108] xx => I, Pos: [101, 108] xx => I, Pos: [104, 115] xx => I, Pos: [104, 115] xx => I, Pos: [107, 109] cc => I, Pos: [107, 109] cc => I, Pos: [108, 114] xx => I, Pos: [108, 114] xx => I, Pos: [110, 124] cc => I, Pos: [110, 124] cc => I, Pos: [111, 118] cc => I, Pos: [111, 118] cc => I, Pos: [112, 117, 127] ccc => cc, Pos: [114, 121] xx => I, Pos: [114, 121] xx => I, Pos: [121, 128] xx => I, Pos: [121, 128] xx => I, Pos: [128, 136] xx => I, Pos: [128, 136] xx => I, Pos: [135, 143] cc => I, Pos: [135, 143] cc => I, Pos: [136, 142] xx => I, Pos: [136, 142] xx => I, Pos: [138, 151, 152] xcx => c, Pos: [142, 146] xx => I, Pos: [142, 146] xx => I, Pos: [162, 179] cc => I, Pos: [162, 179] cc => I, Pos: [164, 169] xx => I, Pos: [164, 169] xx => I, Pos: [165, 172] xx => I, Pos: [165, 172] xx => I, Pos: [166, 171] xx => I, Pos: [166, 171] xx => I, Pos: [168, 173, 180] ccc => cc, Pos: [172, 183] xx => I, Pos: [172, 183] xx => I, Pos: [174, 178] cc => I, Pos: [174, 178] cc => I, Pos: [176, 187] cc => I, Pos: [176, 187] cc => I, Pos: [182, 185] cc => I, Pos: [182, 185] cc => I, Pos: [185, 195] cc => I, Pos: [185, 195] cc => I, Pos: [192, 203, 207] xcx => c, Pos: [197, 200] xx => I, Pos: [197, 200] xx => I, Pos: [200, 206] xx => I, Pos: [200, 206] xx => I, Pos: [204, 212] cc => I, Pos: [204, 212] cc => I, Pos: [205, 218] cc => I, Pos: [205, 218] cc => I, Pos: [206, 214] xx => I, Pos: [206, 214] xx => I, Pos: [218, 227] cc => I, Pos: [218, 227] cc => I, Pos: [219, 246] cc => I, Pos: [219, 246] cc => I, Pos: [222, 232] cc => I, Pos: [222, 232] cc => I, Pos: [225, 234] cc => I, Pos: [225, 234] cc => I, Pos: [227, 235] cc => I, Pos: [227, 235] cc => I, Pos: [228, 237] xx => I, Pos: [228, 237] xx => I, Pos: [230, 238] xx => I, Pos: [230, 238] xx => I, Pos: [236, 239] cc => I, Pos: [236, 239] cc => I, Pos: [237, 242] xx => I, Pos: [237, 242] xx => I, Pos: [241, 248] cc => I, Pos: [241, 248] cc => I, Pos: [242, 249] xx => I, Pos: [242, 249] xx => I, Pos: [243, 250] xx => I, Pos: [243, 250] xx => I, Pos: [249, 255] xx => I, Pos: [249, 255] xx => I, Pos: [255, 262] xx => I, Pos: [255, 262] xx => I, Pos: [261, 263] cc => I, Pos: [261, 263] cc => I]

--------End Timer [Generate Plans]:  0.10935473442077637

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [1, 6] cc => I,
 Pos: [8, 21] cc => I,
 Pos: [26, 34] cc => I,
 Pos: [47, 60] xx => I,
 Pos: [41, 46] xx => I,
 Pos: [40, 48] cc => I,
 Pos: [54, 71] cc => I,
 Pos: [61, 86] cc => I,
 Pos: [70, 77] cc => I,
 Pos: [82, 88] cc => I,
 Pos: [83, 96] cc => I,
 Pos: [92, 112] cc => I,
 Pos: [85, 89, 95] ccc => cc,
 Pos: [101, 108] xx => I,
 Pos: [104, 115] xx => I,
 Pos: [107, 109] cc => I,
 Pos: [110, 124] cc => I,
 Pos: [111, 118] cc => I,
 Pos: [121, 128] xx => I,
 Pos: [135, 143] cc => I,
 Pos: [136, 142] xx => I,
 Pos: [138, 151, 152] xcx => c,
 Pos: [162, 179] cc => I,
 Pos: [164, 169] xx => I,
 Pos: [165, 172] xx => I,
 Pos: [166, 171] xx => I,
 Pos: [168, 173, 180] ccc => cc,
 Pos: [174, 178] cc => I,
 Pos: [176, 187] cc => I,
 Pos: [182, 185] cc => I,
 Pos: [192, 203, 207] xcx => c,
 Pos: [200, 206] xx => I,
 Pos: [204, 212] cc => I,
 Pos: [218, 227] cc => I,
 Pos: [219, 246] cc => I,
 Pos: [222, 232] cc => I,
 Pos: [225, 234] cc => I,
 Pos: [228, 237] xx => I,
 Pos: [230, 238] xx => I,
 Pos: [236, 239] cc => I,
 Pos: [241, 248] cc => I,
 Pos: [242, 249] xx => I,
 Pos: [243, 250] xx => I,
 Pos: [255, 262] xx => I,
 Pos: [261, 263] cc => I]
Change: 45, Saving: 45

Circuit before: xccccxcccccxxxxccxxcccccxccccxxcccccxxxccxxxxcxxccccxccccccxxcccccxxxcccccxxxccccccccccxccccccccccxccxxxxcccxcccccxxcccccxxcccccxxxcccccxxxxccxcccxxxcccxxxxccccccccxxxccxxxxccccccccccxccccccccxccccxxcxxccccxxxcccccxxccccxcccccccxxxxcccccxxcccxxcccccxxccccxxxxcccxcccccxc
---------------
Apply:  Pos: [1, 6] cc => I
Apply:  Pos: [8, 21] cc => I
Apply:  Pos: [26, 34] cc => I
Apply:  Pos: [47, 60] xx => I
Apply:  Pos: [41, 46] xx => I
Apply:  Pos: [40, 48] cc => I
Apply:  Pos: [54, 71] cc => I
Apply:  Pos: [61, 86] cc => I
Apply:  Pos: [70, 77] cc => I
Apply:  Pos: [82, 88] cc => I
Apply:  Pos: [83, 96] cc => I
Apply:  Pos: [92, 112] cc => I
Apply:  Pos: [85, 89, 95] ccc => cc
Apply:  Pos: [101, 108] xx => I
Apply:  Pos: [104, 115] xx => I
Apply:  Pos: [107, 109] cc => I
Apply:  Pos: [110, 124] cc => I
Apply:  Pos: [111, 118] cc => I
Apply:  Pos: [121, 128] xx => I
Apply:  Pos: [135, 143] cc => I
Apply:  Pos: [136, 142] xx => I
Apply:  Pos: [138, 151, 152] xcx => c
Apply:  Pos: [162, 179] cc => I
Apply:  Pos: [164, 169] xx => I
Apply:  Pos: [165, 172] xx => I
Apply:  Pos: [166, 171] xx => I
Apply:  Pos: [168, 173, 180] ccc => cc
Apply:  Pos: [174, 178] cc => I
Apply:  Pos: [176, 187] cc => I
Apply:  Pos: [182, 185] cc => I
Apply:  Pos: [192, 203, 207] xcx => c
Apply:  Pos: [200, 206] xx => I
Apply:  Pos: [204, 212] cc => I
Apply:  Pos: [218, 227] cc => I
Apply:  Pos: [219, 246] cc => I
Apply:  Pos: [222, 232] cc => I
Apply:  Pos: [225, 234] cc => I
Apply:  Pos: [228, 237] xx => I
Apply:  Pos: [230, 238] xx => I
Apply:  Pos: [236, 239] cc => I
Apply:  Pos: [241, 248] cc => I
Apply:  Pos: [242, 249] xx => I
Apply:  Pos: [243, 250] xx => I
Apply:  Pos: [255, 262] xx => I
Apply:  Pos: [261, 263] cc => I
---------------
Circuit after: xcccxcccxxxxccxxccccxcccxxccccxxxcxxxccccxcccccxccccxxxcccxxxccccccxccccccxccxxcccxccccxccccxxccccxcxccccxxxccxxxcccccccccxccccxcccccccccccxxcxccxccccxxccxccccxxccccccccccxxxccccccxc

--------End Timer [apply mapping plan]:  0.0

[19], [15, 0], [5, 11], [6, 8], [8], [12, 7], [4, 13], [0, 9], [16], [17], [4], [1], [10, 2], [13, 5], [0], [12], [16, 14], [6, 9], [5, 15], [7, 8], [16], [12, 11], [3, 13], [4, 1], [2], [11], [16, 3], [5, 0], [14, 17], [1, 18], [3], [9], [6], [13, 17], [10], [16], [5], [6, 8], [7, 6], [11, 0], [4, 13], [6], [3, 5], [9, 8], [17, 11], [19, 18], [12, 7], [3], [13, 10], [1, 18], [5, 15], [12, 11], [5], [0], [18], [3, 10], [6, 9], [4, 17], [10], [19], [4], [0, 9], [18, 6], [3, 13], [16, 14], [1, 19], [14, 4], [7], [4, 17], [3, 5], [13, 10], [16, 3], [11, 15], [7, 8], [17], [3, 13], [9, 8], [4], [14], [17, 12], [6, 8], [7, 9], [3], [11, 7], [19, 12], [9, 8], [10, 5], [13], [4, 17], [15, 0], [7, 9], [1, 19], [14], [1], [11, 7], [6, 9], [4, 13], [2, 15], [18], [2, 15], [4], [0, 9], [7, 8], [13, 10], [14, 4], [3], [6], [8], [14, 17], [4, 1], [1], [10], [0], [3, 5], [12, 7], [14, 4], [3, 10], [5, 0], [11, 7], [6, 9], [12, 7], [4, 18], [9], [1, 18], [4, 17], [3, 13], [12, 18], [0], [16, 3], [17, 12], [3, 10], [13, 5], [12, 11], [1, 18], [1, 19], [16, 3], [9, 8], [7, 6], [5, 11], [16], [7], [13, 5], [9], [12, 11], [4, 17], [10], [5, 11], [12, 18], [4, 13], [2, 15], [16], [3], [19, 18], [0, 9], [5], [16, 3], [1, 12], [14, 13], [6, 8], [1], [13], [19, 12], [4, 17], [3, 10], [4, 1], [2, 15], [3, 5], [5, 15], [12, 18], [13, 10], [1, 19], [9], [19], [7], [6, 8], [13, 5], [10, 2], [18, 6], [11, 7], [0, 9], [11], [16, 3], ----End Timer [Execute Mapping]:  1.8121681213378906

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[97, 99]
[99, 149]
[144, 162]
[149, 165]
[158, 174]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[78, 92]
[82, 105]
[139, 150]
[140, 173]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[128, 130, 135]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 

[142, 153, 171]

------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[78, 92]
[82, 105]
[139, 150]
[140, 173]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[97, 99]
[99, 149]
[144, 162]
[149, 165]
[158, 174]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.203162670135498

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [78, 92] xx => I, Pos: [78, 92] xx => I, Pos: [82, 105] xx => I, Pos: [82, 105] xx => I, Pos: [97, 99] cc => I, Pos: [97, 99] cc => I, Pos: [99, 149] cc => I, Pos: [99, 149] cc => I, Pos: [128, 130, 135] ccc => cc, Pos: [139, 150] xx => I, Pos: [139, 150] xx => I, Pos: [140, 173] xx => I, Pos: [140, 173] xx => I, Pos: [142, 153, 171] xcx => c, Pos: [144, 162] cc => I, Pos: [144, 162] cc => I, Pos: [149, 165] cc => I, Pos: [149, 165] cc => I, Pos: [158, 174] cc => I, Pos: [158, 174] cc => I]

--------End Timer [Generate Plans]:  0.0311586856842041

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [78, 92] xx => I,
 Pos: [82, 105] xx => I,
 Pos: [97, 99] cc => I,
 Pos: [128, 130, 135] ccc => cc,
 Pos: [139, 150] xx => I,
 Pos: [140, 173] xx => I,
 Pos: [142, 153, 171] xcx => c,
 Pos: [144, 162] cc => I,
 Pos: [149, 165] cc => I,
 Pos: [158, 174] cc => I]
Change: 10, Saving: 10

Circuit before: xcccxcccxxxxccxxccccxcccxxccccxxxcxxxccccxcccccxccccxxxcccxxxccccccxccccccxccxxcccxccccxccccxxccccxcxccccxxxccxxxcccccccccxccccxcccccccccccxxcxccxccccxxccxccccxxccccccccccxxxccccccxc
---------------
Apply:  Pos: [78, 92] xx => I
Apply:  Pos: [82, 105] xx => I
Apply:  Pos: [97, 99] cc => I
Apply:  Pos: [128, 130, 135] ccc => cc
Apply:  Pos: [139, 150] xx => I
Apply:  Pos: [140, 173] xx => I
Apply:  Pos: [142, 153, 171] xcx => c
Apply:  Pos: [144, 162] cc => I
Apply:  Pos: [149, 165] cc => I
Apply:  Pos: [158, 174] cc => I
---------------
Circuit after: xcccxcccxxxxccxxccccxcccxxccccxxxcxxxccccxcccccxccccxxxcccxxxccccccxccccccxccxcccccccxccccxcccxxccccxxccxxxcccccccccxccccxcccccccccccccxcccxcxcccxxccccccccxcccccxc

--------End Timer [apply mapping plan]:  0.0

[19], [15, 0], [5, 11], [6, 8], [8], [12, 7], [4, 13], [0, 9], [16], [17], [4], [1], [10, 2], [13, 5], [0], [12], [16, 14], [6, 9], [5, 15], [7, 8], [16], [12, 11], [3, 13], [4, 1], [2], [11], [16, 3], [5, 0], [14, 17], [1, 18], [3], [9], [6], [13, 17], [10], [16], [5], [6, 8], [7, 6], [11, 0], [4, 13], [6], [3, 5], [9, 8], [17, 11], [19, 18], [12, 7], [3], [13, 10], [1, 18], [5, 15], [12, 11], [5], [0], [18], [3, 10], [6, 9], [4, 17], [10], [19], [4], [0, 9], [18, 6], [3, 13], [16, 14], [1, 19], [14, 4], [7], [4, 17], [3, 5], [13, 10], [16, 3], [11, 15], [7, 8], [17], [3, 13], [9, 8], [4], [17, 12], [6, 8], [7, 9], [11, 7], [19, 12], [9, 8], [10, 5], [13], [4, 17], [15, 0], [7, 9], [1, 19], [1], [11, 7], [6, 9], [4, 13], [18], [4], [0, 9], [7, 8], [13, 10], [14, 4], [6], [8], [14, 17], [4, 1], [1], [10], [0], [3, 5], [12, 7], [14, 4], [3, 10], [5, 0], [11, 7], [6, 9], [12, 7], [4, 18], [9], [1, 18], [4, 17], [3, 13], [12, 18], [0], [16, 10], [17, 12], [3, 10], [13, 5], [12, 11], [1, 19], [1, 18], [9, 8], [7, 6], [5, 11], [13, 5], [0, 9], [12, 11], [10], [5, 11], [12, 18], [4, 13], [3], [19, 18], [5], [16, 3], [1, 12], [14, 13], [1], [13], [19, 12], [3, 10], [4, 1], [3, 5], [5, 15], [12, 18], [13, 10], [1, 19], [19], [13, 5], [10, 2], [18, 6], [11, 7], [0, 9], [11], [16, 3], ----End Timer [Execute Mapping]:  1.2343213558197021

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[133, 160]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[133, 160]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.1718590259552002

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [133, 160] cc => I, Pos: [133, 160] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [133, 160] cc => I]
Change: 1, Saving: 1

Circuit before: xcccxcccxxxxccxxccccxcccxxccccxxxcxxxccccxcccccxccccxxxcccxxxccccccxccccccxccxcccccccxccccxcccxxccccxxccxxxcccccccccxccccxcccccccccccccxcccxcxcccxxccccccccxcccccxc
---------------
Apply:  Pos: [133, 160] cc => I
---------------
Circuit after: xcccxcccxxxxccxxccccxcccxxccccxxxcxxxccccxcccccxccccxxxcccxxxccccccxccccccxccxcccccccxccccxcccxxccccxxccxxxcccccccccxccccxccccccccccccxcccxcxcccxxccccccccxccccxc

--------End Timer [apply mapping plan]:  0.0

[19], [15, 0], [5, 11], [6, 8], [8], [12, 7], [4, 13], [0, 9], [16], [17], [4], [1], [10, 2], [13, 5], [0], [12], [16, 14], [6, 9], [5, 15], [7, 8], [16], [12, 11], [3, 13], [4, 1], [2], [11], [16, 3], [5, 0], [14, 17], [1, 18], [3], [9], [6], [13, 17], [10], [16], [5], [6, 8], [7, 6], [11, 0], [4, 13], [6], [3, 5], [9, 8], [17, 11], [19, 18], [12, 7], [3], [13, 10], [1, 18], [5, 15], [12, 11], [5], [0], [18], [3, 10], [6, 9], [4, 17], [10], [19], [4], [0, 9], [18, 6], [3, 13], [16, 14], [1, 19], [14, 4], [7], [4, 17], [3, 5], [13, 10], [16, 3], [11, 15], [7, 8], [17], [3, 13], [9, 8], [4], [17, 12], [6, 8], [7, 9], [11, 7], [19, 12], [9, 8], [10, 5], [13], [4, 17], [15, 0], [7, 9], [1, 19], [1], [11, 7], [6, 9], [4, 13], [18], [4], [0, 9], [7, 8], [13, 10], [14, 4], [6], [8], [14, 17], [4, 1], [1], [10], [0], [3, 5], [12, 7], [14, 4], [3, 10], [5, 0], [11, 7], [6, 9], [12, 7], [4, 18], [9], [1, 18], [4, 17], [3, 13], [12, 18], [0], [16, 10], [17, 12], [3, 10], [13, 5], [12, 11], [1, 18], [1, 19], [9, 8], [7, 6], [5, 11], [13, 5], [12, 11], [10], [5, 11], [12, 18], [4, 13], [3], [19, 18], [5], [16, 3], [1, 12], [14, 13], [1], [13], [19, 12], [3, 10], [4, 1], [3, 5], [5, 15], [12, 18], [13, 10], [1, 19], [19], [13, 5], [10, 2], [18, 6], [11, 7], [11], [16, 3], ----End Timer [Execute Mapping]:  1.1718590259552002

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.1406309604644775

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: xcccxcccxxxxccxxccccxcccxxccccxxxcxxxccccxcccccxccccxxxcccxxxccccccxccccccxccxcccccccxccccxcccxxccccxxccxxxcccccccccxccccxccccccccccccxcccxcxcccxxccccccccxccccxc
---------------
---------------
Circuit after: xcccxcccxxxxccxxccccxcccxxccccxxxcxxxccccxcccccxccccxxxcccxxxccccccxccccccxccxcccccccxccccxcccxxccccxxccxxxcccccccccxccccxccccccccccccxcccxcxcccxxccccccccxccccxc

--------End Timer [apply mapping plan]:  0.0

[19], [15, 0], [5, 11], [6, 8], [8], [12, 7], [4, 13], [0, 9], [16], [17], [4], [1], [10, 2], [13, 5], [0], [12], [16, 14], [6, 9], [5, 15], [7, 8], [16], [12, 11], [3, 13], [4, 1], [2], [11], [16, 3], [5, 0], [14, 17], [1, 18], [3], [9], [6], [13, 17], [10], [16], [5], [6, 8], [7, 6], [11, 0], [4, 13], [6], [3, 5], [9, 8], [17, 11], [19, 18], [12, 7], [3], [13, 10], [1, 18], [5, 15], [12, 11], [5], [0], [18], [3, 10], [6, 9], [4, 17], [10], [19], [4], [0, 9], [18, 6], [3, 13], [16, 14], [1, 19], [14, 4], [7], [4, 17], [3, 5], [13, 10], [16, 3], [11, 15], [7, 8], [17], [3, 13], [9, 8], [4], [17, 12], [6, 8], [7, 9], [11, 7], [19, 12], [9, 8], [10, 5], [13], [4, 17], [15, 0], [7, 9], [1, 19], [1], [11, 7], [6, 9], [4, 13], [18], [4], [0, 9], [7, 8], [13, 10], [14, 4], [6], [8], [14, 17], [4, 1], [1], [10], [0], [3, 5], [12, 7], [14, 4], [3, 10], [5, 0], [11, 7], [6, 9], [12, 7], [4, 18], [9], [1, 18], [4, 17], [3, 13], [12, 18], [0], [16, 10], [17, 12], [3, 10], [13, 5], [12, 11], [1, 19], [1, 18], [9, 8], [7, 6], [5, 11], [13, 5], [12, 11], [10], [5, 11], [12, 18], [4, 13], [3], [19, 18], [5], [16, 3], [1, 12], [14, 13], [1], [13], [19, 12], [3, 10], [4, 1], [3, 5], [5, 15], [12, 18], [13, 10], [1, 19], [19], [13, 5], [10, 2], [18, 6], [11, 7], [11], [16, 3], ----End Timer [Execute Mapping]:  1.1406309604644775

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-x-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-x-x-cx-cx-x-x-x-x-cx-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-x-x-x-x-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-x-cx-cx-cx-x-x-x-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-cx-x-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-x-cx-cx-cx-cx-cx-x-cx 
     => total size: [270] (IBM)
 --------------------
 - qubits_num: 20, using gates: [x,cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 450


>> Solved circuit: 
Circuit Info: 
 - circuit: x-cx-cx-cx-x-cx-cx-cx-x-x-x-x-cx-cx-x-x-cx-cx-cx-cx-x-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-x-cx-x-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-cx-cx-x-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-x-cx-x-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-cx 
     => total size: [161] (IBM)
 --------------------
 - qubits_num: 20, using gates: [x,cx]
 - circuit depth: 31 - (small)
 - circuit cycle: 276

Reduced: 
 - size: 109 (40.37%)
 - depth: 14 (31.11%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.10936665534973145

[19], [16, 14], [15, 0], [5, 11], [6, 8], [8], [16, 14], [12, 7], [19, 18], [4, 13], [0, 9], [16], [17], [4], [1], [10, 2], [13, 5], [0], [12], [16, 14], [6, 9], [19, 18], [5, 15], [7, 8], [16], [12, 11], [7, 9], [3, 13], [4, 1], [2], [11], [16, 3], [5, 0], [14, 17], [7, 9], [1, 18], [3], [9], [6], [13, 17], [12, 18], [3], [10], [16], [5], [6, 8], [3], [2], [12, 18], [7, 6], [11, 0], [4, 13], [6], [3, 5], [16, 14], [9, 8], [17, 11], [19, 18], [12, 7], [3], [2], [7, 8], [13, 10], [1, 18], [5, 15], [12, 11], [5], [0], [18], [3, 10], [1, 12], [16, 14], [6, 9], [4, 17], [10], [19], [4], [1, 12], [0, 9], [18, 6], [3, 13], [16, 14], [10, 2], [6, 9], [1, 19], [4, 17], [7, 8], [7], [10, 2], [14, 4], [3, 5], [13, 10], [1, 19], [16, 3], [11, 15], [4, 17], [6, 9], [7, 8], [17], [3, 13], [9, 8], [3], [4], [14], [15], [17, 12], [6, 8], [11, 0], [3], [11, 0], [10, 2], [14, 17], [1, 19], [7, 9], [3], [15], [11, 7], [19, 12], [14, 17], [9, 8], [10, 5], [3], [13], [4, 17], [10, 2], [15, 0], [7, 9], [1, 19], [3], [14], [1], [11, 7], [6, 9], [4, 13], [2, 15], [17, 12], [3], [18], [15], [4], [0, 9], [7, 8], [3], [17, 12], [13, 10], [14, 4], [3], [6], [8], [14, 17], [4, 1], [2, 15], [15], [1], [10], [0], [3, 5], [12, 7], [14, 4], [3, 10], [5, 0], [11, 7], [16, 14], [6, 9], [3], [0], [6], [12, 7], [4, 1], [3], [9], [6], [0], [1, 18], [5, 15], [4, 17], [10, 2], [3, 13], [5, 15], [16, 14], [4, 1], [12, 18], [7, 6], [0], [16, 3], [7, 6], [17, 12], [10, 2], [3, 10], [13, 5], [12, 11], [1, 18], [19], [16, 3], [9, 8], [7, 6], [5, 11], [16], [7], [13, 5], [16], [9], [12, 11], [1, 19], [7, 6], [4, 17], [16], [19], [10], [5, 11], [12, 18], [4, 13], [7, 6], [2, 15], [16], [3], [19, 18], [0, 9], [4, 17], [11, 7], [5], [16, 3], [11, 15], [1, 12], [14, 13], [10, 2], [6, 8], [4, 17], [16], [1], [8], [13], [11, 15], [19, 12], [10, 2], [4, 17], [6, 9], [16], [8], [6, 9], [3, 10], [14, 17], [16], [0], [4, 1], [2, 15], [11, 7], [3, 5], [14, 17], [16], [0], [5, 15], [12, 18], [13, 10], [1, 19], [16], [9], [19], [7], [6, 8], [13, 5], [4, 17], [16], [4, 17], [10, 2], [18, 6], [11, 7], [0, 9], [11], [16, 3], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[1, 6]
[8, 21]
[26, 34]
[40, 48]
[54, 71]
[70, 77]
[71, 81]
[61, 86]
[82, 88]
[84, 92]
[83, 96]
[107, 109]
[92, 112]
[111, 118]
[110, 124]
[135, 143]
[174, 178]
[162, 179]
[182, 185]
[176, 187]
[185, 195]
[204, 212]
[205, 218]
[218, 227]
[222, 232]
[225, 234]
[227, 235]
[236, 239]
[219, 246]
[241, 248]
[261, 263]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[36, 41]
[41, 46]
[29, 47]
[47, 60]
[101, 108]
[108, 114]
[104, 115]
[114, 121]
[121, 128]
[128, 136]
[136, 142]
[142, 146]
[164, 169]
[166, 171]
[165, 172]
[172, 183]
[197, 200]
[200, 206]
[206, 214]
[228, 237]
[230, 238]
[237, 242]
[242, 249]
[243, 250]
[249, 255]
[255, 262]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[112, 117, 127]
[168, 173, 180]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 

[138, 151, 152]
[192, 203, 207]

------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[85, 89, 95]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[36, 41]
[41, 46]
[29, 47]
[47, 60]
[101, 108]
[108, 114]
[104, 115]
[114, 121]
[121, 128]
[128, 136]
[136, 142]
[142, 146]
[164, 169]
[166, 171]
[165, 172]
[172, 183]
[197, 200]
[200, 206]
[206, 214]
[228, 237]
[230, 238]
[237, 242]
[242, 249]
[243, 250]
[249, 255]
[255, 262]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[1, 6]
[8, 21]
[26, 34]
[40, 48]
[54, 71]
[70, 77]
[71, 81]
[61, 86]
[82, 88]
[84, 92]
[83, 96]
[107, 109]
[92, 112]
[111, 118]
[110, 124]
[135, 143]
[174, 178]
[162, 179]
[182, 185]
[176, 187]
[185, 195]
[204, 212]
[205, 218]
[218, 227]
[222, 232]
[225, 234]
[227, 235]
[236, 239]
[219, 246]
[241, 248]
[261, 263]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.7034814357757568

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [1, 6] cc => I, Pos: [1, 6] cc => I, Pos: [8, 21] cc => I, Pos: [8, 21] cc => I, Pos: [26, 34] cc => I, Pos: [26, 34] cc => I, Pos: [29, 47] xx => I, Pos: [29, 47] xx => I, Pos: [36, 41] xx => I, Pos: [36, 41] xx => I, Pos: [40, 48] cc => I, Pos: [40, 48] cc => I, Pos: [41, 46] xx => I, Pos: [41, 46] xx => I, Pos: [47, 60] xx => I, Pos: [47, 60] xx => I, Pos: [54, 71] cc => I, Pos: [54, 71] cc => I, Pos: [61, 86] cc => I, Pos: [61, 86] cc => I, Pos: [70, 77] cc => I, Pos: [70, 77] cc => I, Pos: [71, 81] cc => I, Pos: [71, 81] cc => I, Pos: [82, 88] cc => I, Pos: [82, 88] cc => I, Pos: [83, 96] cc => I, Pos: [83, 96] cc => I, Pos: [84, 92] cc => I, Pos: [84, 92] cc => I, Pos: [85, 89, 95] ccc => cc, Pos: [92, 112] cc => I, Pos: [92, 112] cc => I, Pos: [101, 108] xx => I, Pos: [101, 108] xx => I, Pos: [104, 115] xx => I, Pos: [104, 115] xx => I, Pos: [107, 109] cc => I, Pos: [107, 109] cc => I, Pos: [108, 114] xx => I, Pos: [108, 114] xx => I, Pos: [110, 124] cc => I, Pos: [110, 124] cc => I, Pos: [111, 118] cc => I, Pos: [111, 118] cc => I, Pos: [112, 117, 127] ccc => cc, Pos: [114, 121] xx => I, Pos: [114, 121] xx => I, Pos: [121, 128] xx => I, Pos: [121, 128] xx => I, Pos: [128, 136] xx => I, Pos: [128, 136] xx => I, Pos: [135, 143] cc => I, Pos: [135, 143] cc => I, Pos: [136, 142] xx => I, Pos: [136, 142] xx => I, Pos: [138, 151, 152] xcx => c, Pos: [142, 146] xx => I, Pos: [142, 146] xx => I, Pos: [162, 179] cc => I, Pos: [162, 179] cc => I, Pos: [164, 169] xx => I, Pos: [164, 169] xx => I, Pos: [165, 172] xx => I, Pos: [165, 172] xx => I, Pos: [166, 171] xx => I, Pos: [166, 171] xx => I, Pos: [168, 173, 180] ccc => cc, Pos: [172, 183] xx => I, Pos: [172, 183] xx => I, Pos: [174, 178] cc => I, Pos: [174, 178] cc => I, Pos: [176, 187] cc => I, Pos: [176, 187] cc => I, Pos: [182, 185] cc => I, Pos: [182, 185] cc => I, Pos: [185, 195] cc => I, Pos: [185, 195] cc => I, Pos: [192, 203, 207] xcx => c, Pos: [197, 200] xx => I, Pos: [197, 200] xx => I, Pos: [200, 206] xx => I, Pos: [200, 206] xx => I, Pos: [204, 212] cc => I, Pos: [204, 212] cc => I, Pos: [205, 218] cc => I, Pos: [205, 218] cc => I, Pos: [206, 214] xx => I, Pos: [206, 214] xx => I, Pos: [218, 227] cc => I, Pos: [218, 227] cc => I, Pos: [219, 246] cc => I, Pos: [219, 246] cc => I, Pos: [222, 232] cc => I, Pos: [222, 232] cc => I, Pos: [225, 234] cc => I, Pos: [225, 234] cc => I, Pos: [227, 235] cc => I, Pos: [227, 235] cc => I, Pos: [228, 237] xx => I, Pos: [228, 237] xx => I, Pos: [230, 238] xx => I, Pos: [230, 238] xx => I, Pos: [236, 239] cc => I, Pos: [236, 239] cc => I, Pos: [237, 242] xx => I, Pos: [237, 242] xx => I, Pos: [241, 248] cc => I, Pos: [241, 248] cc => I, Pos: [242, 249] xx => I, Pos: [242, 249] xx => I, Pos: [243, 250] xx => I, Pos: [243, 250] xx => I, Pos: [249, 255] xx => I, Pos: [249, 255] xx => I, Pos: [255, 262] xx => I, Pos: [255, 262] xx => I, Pos: [261, 263] cc => I, Pos: [261, 263] cc => I]

--------End Timer [Generate Plans]:  0.12495279312133789

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [1, 6] cc => I,
 Pos: [8, 21] cc => I,
 Pos: [26, 34] cc => I,
 Pos: [47, 60] xx => I,
 Pos: [36, 41] xx => I,
 Pos: [40, 48] cc => I,
 Pos: [71, 81] cc => I,
 Pos: [61, 86] cc => I,
 Pos: [70, 77] cc => I,
 Pos: [82, 88] cc => I,
 Pos: [83, 96] cc => I,
 Pos: [84, 92] cc => I,
 Pos: [85, 89, 95] ccc => cc,
 Pos: [108, 114] xx => I,
 Pos: [104, 115] xx => I,
 Pos: [107, 109] cc => I,
 Pos: [110, 124] cc => I,
 Pos: [111, 118] cc => I,
 Pos: [112, 117, 127] ccc => cc,
 Pos: [121, 128] xx => I,
 Pos: [135, 143] cc => I,
 Pos: [142, 146] xx => I,
 Pos: [138, 151, 152] xcx => c,
 Pos: [162, 179] cc => I,
 Pos: [164, 169] xx => I,
 Pos: [165, 172] xx => I,
 Pos: [166, 171] xx => I,
 Pos: [168, 173, 180] ccc => cc,
 Pos: [174, 178] cc => I,
 Pos: [176, 187] cc => I,
 Pos: [185, 195] cc => I,
 Pos: [192, 203, 207] xcx => c,
 Pos: [200, 206] xx => I,
 Pos: [204, 212] cc => I,
 Pos: [205, 218] cc => I,
 Pos: [219, 246] cc => I,
 Pos: [222, 232] cc => I,
 Pos: [225, 234] cc => I,
 Pos: [227, 235] cc => I,
 Pos: [228, 237] xx => I,
 Pos: [230, 238] xx => I,
 Pos: [236, 239] cc => I,
 Pos: [241, 248] cc => I,
 Pos: [249, 255] xx => I,
 Pos: [243, 250] xx => I,
 Pos: [261, 263] cc => I]
Change: 46, Saving: 46

Circuit before: xccccxcccccxxxxccxxcccccxccccxxcccccxxxccxxxxcxxccccxccccccxxcccccxxxcccccxxxccccccccccxccccccccccxccxxxxcccxcccccxxcccccxxcccccxxxcccccxxxxccxcccxxxcccxxxxccccccccxxxccxxxxccccccccccxccccccccxccccxxcxxccccxxxcccccxxccccxcccccccxxxxcccccxxcccxxcccccxxccccxxxxcccxcccccxc
---------------
Apply:  Pos: [1, 6] cc => I
Apply:  Pos: [8, 21] cc => I
Apply:  Pos: [26, 34] cc => I
Apply:  Pos: [47, 60] xx => I
Apply:  Pos: [36, 41] xx => I
Apply:  Pos: [40, 48] cc => I
Apply:  Pos: [71, 81] cc => I
Apply:  Pos: [61, 86] cc => I
Apply:  Pos: [70, 77] cc => I
Apply:  Pos: [82, 88] cc => I
Apply:  Pos: [83, 96] cc => I
Apply:  Pos: [84, 92] cc => I
Apply:  Pos: [85, 89, 95] ccc => cc
Apply:  Pos: [108, 114] xx => I
Apply:  Pos: [104, 115] xx => I
Apply:  Pos: [107, 109] cc => I
Apply:  Pos: [110, 124] cc => I
Apply:  Pos: [111, 118] cc => I
Apply:  Pos: [112, 117, 127] ccc => cc
Apply:  Pos: [121, 128] xx => I
Apply:  Pos: [135, 143] cc => I
Apply:  Pos: [142, 146] xx => I
Apply:  Pos: [138, 151, 152] xcx => c
Apply:  Pos: [162, 179] cc => I
Apply:  Pos: [164, 169] xx => I
Apply:  Pos: [165, 172] xx => I
Apply:  Pos: [166, 171] xx => I
Apply:  Pos: [168, 173, 180] ccc => cc
Apply:  Pos: [174, 178] cc => I
Apply:  Pos: [176, 187] cc => I
Apply:  Pos: [185, 195] cc => I
Apply:  Pos: [192, 203, 207] xcx => c
Apply:  Pos: [200, 206] xx => I
Apply:  Pos: [204, 212] cc => I
Apply:  Pos: [205, 218] cc => I
Apply:  Pos: [219, 246] cc => I
Apply:  Pos: [222, 232] cc => I
Apply:  Pos: [225, 234] cc => I
Apply:  Pos: [227, 235] cc => I
Apply:  Pos: [228, 237] xx => I
Apply:  Pos: [230, 238] xx => I
Apply:  Pos: [236, 239] cc => I
Apply:  Pos: [241, 248] cc => I
Apply:  Pos: [249, 255] xx => I
Apply:  Pos: [243, 250] xx => I
Apply:  Pos: [261, 263] cc => I
---------------
Circuit after: xcccxcccxxxxccxxccccxcccxxccccxxcxxxcxcccxccccccxccccxxxcccxxxccccxccccccxccxxxccccccccxcccxxccccxxcxccccxxccxxxcccccccccxcccccxccccccccccxxcxcxccccxxccxccccxxccxcccccccxxxccxccccxc

--------End Timer [apply mapping plan]:  0.0

[19], [15, 0], [5, 11], [6, 8], [8], [12, 7], [4, 13], [0, 9], [16], [17], [4], [1], [10, 2], [13, 5], [0], [12], [16, 14], [6, 9], [5, 15], [7, 8], [16], [12, 11], [3, 13], [4, 1], [2], [11], [16, 3], [5, 0], [14, 17], [1, 18], [9], [6], [13, 17], [10], [16], [5], [6, 8], [3], [7, 6], [11, 0], [4, 13], [6], [3, 5], [16, 14], [9, 8], [17, 11], [19, 18], [12, 7], [3], [13, 10], [1, 18], [5, 15], [12, 11], [5], [0], [18], [3, 10], [6, 9], [4, 17], [10], [19], [4], [0, 9], [18, 6], [3, 13], [14, 4], [7], [4, 17], [3, 5], [13, 10], [16, 3], [11, 15], [7, 8], [17], [3, 13], [9, 8], [3], [4], [14], [17, 12], [6, 8], [1, 12], [7, 9], [11, 7], [19, 12], [9, 8], [10, 5], [13], [4, 17], [15, 0], [7, 9], [14], [1], [11, 7], [6, 9], [4, 13], [2, 15], [3], [18], [2, 15], [4], [0, 9], [7, 8], [13, 10], [14, 4], [6], [8], [14, 17], [4, 1], [1], [10], [0], [3, 5], [12, 7], [14, 4], [3, 10], [5, 0], [11, 7], [6, 9], [12, 7], [4, 18], [9], [1, 18], [4, 17], [3, 13], [12, 18], [7, 6], [0], [16, 3], [17, 12], [3, 10], [13, 5], [12, 11], [1, 18], [1, 19], [16, 3], [9, 8], [5, 11], [16], [7], [13, 5], [9], [12, 11], [10], [5, 11], [12, 18], [4, 13], [2, 15], [16], [3], [19, 18], [0, 9], [5], [16, 3], [1, 12], [14, 13], [6, 8], [1], [13], [19, 12], [3, 10], [16], [4, 1], [2, 15], [3, 5], [5, 15], [12, 18], [13, 10], [1, 19], [9], [19], [7], [6, 8], [13, 5], [16], [10, 2], [18, 6], [11, 7], [0, 9], [11], [16, 3], ----End Timer [Execute Mapping]:  1.8284342288970947

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[96, 99]
[99, 147]
[147, 163]
[156, 172]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[78, 91]
[76, 97]
[138, 148]
[139, 171]
[161, 174]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[128, 130, 135]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 

[141, 151, 169]

------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[78, 91]
[76, 97]
[138, 148]
[139, 171]
[161, 174]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[96, 99]
[99, 147]
[147, 163]
[156, 172]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.1559369564056396

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [76, 97] xx => I, Pos: [76, 97] xx => I, Pos: [78, 91] xx => I, Pos: [78, 91] xx => I, Pos: [96, 99] cc => I, Pos: [96, 99] cc => I, Pos: [99, 147] cc => I, Pos: [99, 147] cc => I, Pos: [128, 130, 135] ccc => cc, Pos: [138, 148] xx => I, Pos: [138, 148] xx => I, Pos: [139, 171] xx => I, Pos: [139, 171] xx => I, Pos: [141, 151, 169] xcx => c, Pos: [147, 163] cc => I, Pos: [147, 163] cc => I, Pos: [156, 172] cc => I, Pos: [156, 172] cc => I, Pos: [161, 174] xx => I, Pos: [161, 174] xx => I]

--------End Timer [Generate Plans]:  0.015624046325683594

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [76, 97] xx => I,
 Pos: [78, 91] xx => I,
 Pos: [96, 99] cc => I,
 Pos: [128, 130, 135] ccc => cc,
 Pos: [138, 148] xx => I,
 Pos: [139, 171] xx => I,
 Pos: [141, 151, 169] xcx => c,
 Pos: [147, 163] cc => I,
 Pos: [156, 172] cc => I,
 Pos: [161, 174] xx => I]
Change: 10, Saving: 10

Circuit before: xcccxcccxxxxccxxccccxcccxxccccxxcxxxcxcccxccccccxccccxxxcccxxxccccxccccccxccxxxccccccccxcccxxccccxxcxccccxxccxxxcccccccccxcccccxccccccccccxxcxcxccccxxccxccccxxccxcccccccxxxccxccccxc
---------------
Apply:  Pos: [76, 97] xx => I
Apply:  Pos: [78, 91] xx => I
Apply:  Pos: [96, 99] cc => I
Apply:  Pos: [128, 130, 135] ccc => cc
Apply:  Pos: [138, 148] xx => I
Apply:  Pos: [139, 171] xx => I
Apply:  Pos: [141, 151, 169] xcx => c
Apply:  Pos: [147, 163] cc => I
Apply:  Pos: [156, 172] cc => I
Apply:  Pos: [161, 174] xx => I
---------------
Circuit after: xcccxcccxxxxccxxccccxcccxxccccxxcxxxcxcccxccccccxccccxxxcccxxxccccxccccccxccxccccccccxcccxcccxxccccxxccxxxcccccccccxcccccxccccccccccccxcccxcxcccxxccccccccxcccccxc

--------End Timer [apply mapping plan]:  0.0

[19], [15, 0], [5, 11], [6, 8], [8], [12, 7], [4, 13], [0, 9], [16], [17], [4], [1], [10, 2], [13, 5], [0], [12], [16, 14], [6, 9], [5, 15], [7, 8], [16], [12, 11], [3, 13], [4, 1], [2], [11], [16, 3], [5, 0], [14, 17], [1, 18], [9], [6], [13, 17], [10], [16], [5], [6, 8], [3], [7, 6], [11, 0], [4, 13], [6], [3, 5], [16, 14], [9, 8], [17, 11], [19, 18], [12, 7], [3], [13, 10], [1, 18], [5, 15], [12, 11], [5], [0], [18], [3, 10], [6, 9], [4, 17], [10], [19], [4], [0, 9], [18, 6], [3, 13], [14, 4], [7], [4, 17], [3, 5], [13, 10], [16, 3], [11, 15], [7, 8], [17], [3, 13], [9, 8], [4], [17, 12], [6, 8], [1, 12], [7, 9], [11, 7], [19, 12], [9, 8], [10, 5], [13], [4, 17], [15, 0], [7, 9], [1], [11, 7], [6, 9], [4, 13], [18], [4], [0, 9], [7, 8], [13, 10], [14, 4], [6], [8], [14, 17], [4, 1], [1], [10], [0], [3, 5], [12, 7], [14, 4], [3, 10], [5, 0], [11, 7], [6, 9], [12, 7], [4, 18], [9], [1, 18], [4, 17], [3, 13], [12, 18], [7, 6], [0], [16, 10], [17, 12], [3, 10], [13, 5], [12, 11], [1, 19], [1, 18], [9, 8], [5, 11], [13, 5], [0, 9], [12, 11], [10], [5, 11], [12, 18], [4, 13], [3], [19, 18], [5], [16, 3], [1, 12], [14, 13], [1], [13], [19, 12], [3, 10], [4, 1], [3, 5], [5, 15], [12, 18], [13, 10], [1, 19], [19], [13, 5], [10, 2], [18, 6], [11, 7], [0, 9], [11], [16, 3], ----End Timer [Execute Mapping]:  1.1715610027313232

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[132, 159]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[132, 159]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.1406223773956299

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [132, 159] cc => I, Pos: [132, 159] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [132, 159] cc => I]
Change: 1, Saving: 1

Circuit before: xcccxcccxxxxccxxccccxcccxxccccxxcxxxcxcccxccccccxccccxxxcccxxxccccxccccccxccxccccccccxcccxcccxxccccxxccxxxcccccccccxcccccxccccccccccccxcccxcxcccxxccccccccxcccccxc
---------------
Apply:  Pos: [132, 159] cc => I
---------------
Circuit after: xcccxcccxxxxccxxccccxcccxxccccxxcxxxcxcccxccccccxccccxxxcccxxxccccxccccccxccxccccccccxcccxcccxxccccxxccxxxcccccccccxcccccxcccccccccccxcccxcxcccxxccccccccxccccxc

--------End Timer [apply mapping plan]:  0.0

[19], [15, 0], [5, 11], [6, 8], [8], [12, 7], [4, 13], [0, 9], [16], [17], [4], [1], [10, 2], [13, 5], [0], [12], [16, 14], [6, 9], [5, 15], [7, 8], [16], [12, 11], [3, 13], [4, 1], [2], [11], [16, 3], [5, 0], [14, 17], [1, 18], [9], [6], [13, 17], [10], [16], [5], [6, 8], [3], [7, 6], [11, 0], [4, 13], [6], [3, 5], [16, 14], [9, 8], [17, 11], [19, 18], [12, 7], [3], [13, 10], [1, 18], [5, 15], [12, 11], [5], [0], [18], [3, 10], [6, 9], [4, 17], [10], [19], [4], [0, 9], [18, 6], [3, 13], [14, 4], [7], [4, 17], [3, 5], [13, 10], [16, 3], [11, 15], [7, 8], [17], [3, 13], [9, 8], [4], [17, 12], [6, 8], [1, 12], [7, 9], [11, 7], [19, 12], [9, 8], [10, 5], [13], [4, 17], [15, 0], [7, 9], [1], [11, 7], [6, 9], [4, 13], [18], [4], [0, 9], [7, 8], [13, 10], [14, 4], [6], [8], [14, 17], [4, 1], [1], [10], [0], [3, 5], [12, 7], [14, 4], [3, 10], [5, 0], [11, 7], [6, 9], [12, 7], [4, 18], [9], [1, 18], [4, 17], [3, 13], [12, 18], [7, 6], [0], [16, 10], [17, 12], [3, 10], [13, 5], [12, 11], [1, 18], [1, 19], [9, 8], [5, 11], [13, 5], [12, 11], [10], [5, 11], [12, 18], [4, 13], [3], [19, 18], [5], [16, 3], [1, 12], [14, 13], [1], [13], [19, 12], [3, 10], [4, 1], [3, 5], [5, 15], [12, 18], [13, 10], [1, 19], [19], [13, 5], [10, 2], [18, 6], [11, 7], [11], [16, 3], ----End Timer [Execute Mapping]:  1.1406223773956299

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.1094086170196533

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: xcccxcccxxxxccxxccccxcccxxccccxxcxxxcxcccxccccccxccccxxxcccxxxccccxccccccxccxccccccccxcccxcccxxccccxxccxxxcccccccccxcccccxcccccccccccxcccxcxcccxxccccccccxccccxc
---------------
---------------
Circuit after: xcccxcccxxxxccxxccccxcccxxccccxxcxxxcxcccxccccccxccccxxxcccxxxccccxccccccxccxccccccccxcccxcccxxccccxxccxxxcccccccccxcccccxcccccccccccxcccxcxcccxxccccccccxccccxc

--------End Timer [apply mapping plan]:  0.0

[19], [15, 0], [5, 11], [6, 8], [8], [12, 7], [4, 13], [0, 9], [16], [17], [4], [1], [10, 2], [13, 5], [0], [12], [16, 14], [6, 9], [5, 15], [7, 8], [16], [12, 11], [3, 13], [4, 1], [2], [11], [16, 3], [5, 0], [14, 17], [1, 18], [9], [6], [13, 17], [10], [16], [5], [6, 8], [3], [7, 6], [11, 0], [4, 13], [6], [3, 5], [16, 14], [9, 8], [17, 11], [19, 18], [12, 7], [3], [13, 10], [1, 18], [5, 15], [12, 11], [5], [0], [18], [3, 10], [6, 9], [4, 17], [10], [19], [4], [0, 9], [18, 6], [3, 13], [14, 4], [7], [4, 17], [3, 5], [13, 10], [16, 3], [11, 15], [7, 8], [17], [3, 13], [9, 8], [4], [17, 12], [6, 8], [1, 12], [7, 9], [11, 7], [19, 12], [9, 8], [10, 5], [13], [4, 17], [15, 0], [7, 9], [1], [11, 7], [6, 9], [4, 13], [18], [4], [0, 9], [7, 8], [13, 10], [14, 4], [6], [8], [14, 17], [4, 1], [1], [10], [0], [3, 5], [12, 7], [14, 4], [3, 10], [5, 0], [11, 7], [6, 9], [12, 7], [4, 18], [9], [1, 18], [4, 17], [3, 13], [12, 18], [7, 6], [0], [16, 10], [17, 12], [3, 10], [13, 5], [12, 11], [1, 19], [1, 18], [9, 8], [5, 11], [13, 5], [12, 11], [10], [5, 11], [12, 18], [4, 13], [3], [19, 18], [5], [16, 3], [1, 12], [14, 13], [1], [13], [19, 12], [3, 10], [4, 1], [3, 5], [5, 15], [12, 18], [13, 10], [1, 19], [19], [13, 5], [10, 2], [18, 6], [11, 7], [11], [16, 3], ----End Timer [Execute Mapping]:  1.1094086170196533

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-x-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-x-x-cx-cx-x-x-x-x-cx-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-x-x-x-x-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-x-cx-cx-cx-x-x-x-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-cx-x-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-x-cx-cx-cx-cx-cx-x-cx 
     => total size: [270] (IBM)
 --------------------
 - qubits_num: 20, using gates: [x,cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 450


>> Solved circuit: 
Circuit Info: 
 - circuit: x-cx-cx-cx-x-cx-cx-cx-x-x-x-x-cx-cx-x-x-cx-cx-cx-cx-x-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-cx-x-x-x-cx-x-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-x-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-x-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-cx-cx-x-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-x-cx-x-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-cx 
     => total size: [160] (IBM)
 --------------------
 - qubits_num: 20, using gates: [x,cx]
 - circuit depth: 31 - (small)
 - circuit cycle: 274

Reduced: 
 - size: 110 (40.74%)
 - depth: 14 (31.11%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.12493395805358887

[19], [16, 14], [15, 0], [5, 11], [6, 8], [8], [16, 14], [12, 7], [19, 18], [4, 13], [0, 9], [16], [17], [4], [1], [10, 2], [13, 5], [0], [12], [16, 14], [6, 9], [19, 18], [5, 15], [7, 8], [16], [12, 11], [7, 9], [3, 13], [4, 1], [2], [11], [16, 3], [5, 0], [14, 17], [7, 9], [1, 18], [3], [9], [6], [13, 17], [12, 18], [3], [10], [16], [5], [6, 8], [3], [2], [12, 18], [7, 6], [11, 0], [4, 13], [6], [3, 5], [16, 14], [9, 8], [17, 11], [19, 18], [12, 7], [3], [2], [7, 8], [13, 10], [1, 18], [5, 15], [12, 11], [5], [0], [18], [3, 10], [1, 12], [16, 14], [6, 9], [4, 17], [10], [19], [4], [1, 12], [0, 9], [18, 6], [3, 13], [16, 14], [10, 2], [6, 9], [1, 19], [4, 17], [7, 8], [7], [10, 2], [14, 4], [3, 5], [13, 10], [1, 19], [16, 3], [11, 15], [4, 17], [6, 9], [7, 8], [17], [3, 13], [9, 8], [3], [4], [14], [15], [17, 12], [6, 8], [11, 0], [3], [11, 0], [10, 2], [14, 17], [1, 19], [7, 9], [3], [15], [11, 7], [19, 12], [14, 17], [9, 8], [10, 5], [3], [13], [4, 17], [10, 2], [15, 0], [7, 9], [1, 19], [3], [14], [1], [11, 7], [6, 9], [4, 13], [2, 15], [17, 12], [3], [18], [15], [4], [0, 9], [7, 8], [3], [17, 12], [13, 10], [14, 4], [3], [6], [8], [14, 17], [4, 1], [2, 15], [15], [1], [10], [0], [3, 5], [12, 7], [14, 4], [3, 10], [5, 0], [11, 7], [16, 14], [6, 9], [3], [0], [6], [12, 7], [4, 1], [3], [9], [6], [0], [1, 18], [5, 15], [4, 17], [10, 2], [3, 13], [5, 15], [16, 14], [4, 1], [12, 18], [7, 6], [0], [16, 3], [7, 6], [17, 12], [10, 2], [3, 10], [13, 5], [12, 11], [1, 18], [19], [16, 3], [9, 8], [7, 6], [5, 11], [16], [7], [13, 5], [16], [9], [12, 11], [1, 19], [7, 6], [4, 17], [16], [19], [10], [5, 11], [12, 18], [4, 13], [7, 6], [2, 15], [16], [3], [19, 18], [0, 9], [4, 17], [11, 7], [5], [16, 3], [11, 15], [1, 12], [14, 13], [10, 2], [6, 8], [4, 17], [16], [1], [8], [13], [11, 15], [19, 12], [10, 2], [4, 17], [6, 9], [16], [8], [6, 9], [3, 10], [14, 17], [16], [0], [4, 1], [2, 15], [11, 7], [3, 5], [14, 17], [16], [0], [5, 15], [12, 18], [13, 10], [1, 19], [16], [9], [19], [7], [6, 8], [13, 5], [4, 17], [16], [4, 17], [10, 2], [18, 6], [11, 7], [0, 9], [11], [16, 3], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[1, 6]
[8, 21]
[26, 34]
[40, 48]
[54, 71]
[70, 77]
[71, 81]
[61, 86]
[82, 88]
[84, 92]
[83, 96]
[107, 109]
[92, 112]
[111, 118]
[110, 124]
[135, 143]
[174, 178]
[162, 179]
[182, 185]
[176, 187]
[185, 195]
[204, 212]
[205, 218]
[218, 227]
[222, 232]
[225, 234]
[227, 235]
[236, 239]
[219, 246]
[241, 248]
[261, 263]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[36, 41]
[41, 46]
[29, 47]
[47, 60]
[101, 108]
[108, 114]
[104, 115]
[114, 121]
[121, 128]
[128, 136]
[136, 142]
[142, 146]
[164, 169]
[166, 171]
[165, 172]
[172, 183]
[197, 200]
[200, 206]
[206, 214]
[228, 237]
[230, 238]
[237, 242]
[242, 249]
[243, 250]
[249, 255]
[255, 262]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[112, 117, 127]
[168, 173, 180]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 

[138, 151, 152]
[192, 203, 207]

------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[85, 89, 95]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[36, 41]
[41, 46]
[29, 47]
[47, 60]
[101, 108]
[108, 114]
[104, 115]
[114, 121]
[121, 128]
[128, 136]
[136, 142]
[142, 146]
[164, 169]
[166, 171]
[165, 172]
[172, 183]
[197, 200]
[200, 206]
[206, 214]
[228, 237]
[230, 238]
[237, 242]
[242, 249]
[243, 250]
[249, 255]
[255, 262]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[1, 6]
[8, 21]
[26, 34]
[40, 48]
[54, 71]
[70, 77]
[71, 81]
[61, 86]
[82, 88]
[84, 92]
[83, 96]
[107, 109]
[92, 112]
[111, 118]
[110, 124]
[135, 143]
[174, 178]
[162, 179]
[182, 185]
[176, 187]
[185, 195]
[204, 212]
[205, 218]
[218, 227]
[222, 232]
[225, 234]
[227, 235]
[236, 239]
[219, 246]
[241, 248]
[261, 263]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.6875128746032715

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [1, 6] cc => I, Pos: [1, 6] cc => I, Pos: [8, 21] cc => I, Pos: [8, 21] cc => I, Pos: [26, 34] cc => I, Pos: [26, 34] cc => I, Pos: [29, 47] xx => I, Pos: [29, 47] xx => I, Pos: [36, 41] xx => I, Pos: [36, 41] xx => I, Pos: [40, 48] cc => I, Pos: [40, 48] cc => I, Pos: [41, 46] xx => I, Pos: [41, 46] xx => I, Pos: [47, 60] xx => I, Pos: [47, 60] xx => I, Pos: [54, 71] cc => I, Pos: [54, 71] cc => I, Pos: [61, 86] cc => I, Pos: [61, 86] cc => I, Pos: [70, 77] cc => I, Pos: [70, 77] cc => I, Pos: [71, 81] cc => I, Pos: [71, 81] cc => I, Pos: [82, 88] cc => I, Pos: [82, 88] cc => I, Pos: [83, 96] cc => I, Pos: [83, 96] cc => I, Pos: [84, 92] cc => I, Pos: [84, 92] cc => I, Pos: [85, 89, 95] ccc => cc, Pos: [92, 112] cc => I, Pos: [92, 112] cc => I, Pos: [101, 108] xx => I, Pos: [101, 108] xx => I, Pos: [104, 115] xx => I, Pos: [104, 115] xx => I, Pos: [107, 109] cc => I, Pos: [107, 109] cc => I, Pos: [108, 114] xx => I, Pos: [108, 114] xx => I, Pos: [110, 124] cc => I, Pos: [110, 124] cc => I, Pos: [111, 118] cc => I, Pos: [111, 118] cc => I, Pos: [112, 117, 127] ccc => cc, Pos: [114, 121] xx => I, Pos: [114, 121] xx => I, Pos: [121, 128] xx => I, Pos: [121, 128] xx => I, Pos: [128, 136] xx => I, Pos: [128, 136] xx => I, Pos: [135, 143] cc => I, Pos: [135, 143] cc => I, Pos: [136, 142] xx => I, Pos: [136, 142] xx => I, Pos: [138, 151, 152] xcx => c, Pos: [142, 146] xx => I, Pos: [142, 146] xx => I, Pos: [162, 179] cc => I, Pos: [162, 179] cc => I, Pos: [164, 169] xx => I, Pos: [164, 169] xx => I, Pos: [165, 172] xx => I, Pos: [165, 172] xx => I, Pos: [166, 171] xx => I, Pos: [166, 171] xx => I, Pos: [168, 173, 180] ccc => cc, Pos: [172, 183] xx => I, Pos: [172, 183] xx => I, Pos: [174, 178] cc => I, Pos: [174, 178] cc => I, Pos: [176, 187] cc => I, Pos: [176, 187] cc => I, Pos: [182, 185] cc => I, Pos: [182, 185] cc => I, Pos: [185, 195] cc => I, Pos: [185, 195] cc => I, Pos: [192, 203, 207] xcx => c, Pos: [197, 200] xx => I, Pos: [197, 200] xx => I, Pos: [200, 206] xx => I, Pos: [200, 206] xx => I, Pos: [204, 212] cc => I, Pos: [204, 212] cc => I, Pos: [205, 218] cc => I, Pos: [205, 218] cc => I, Pos: [206, 214] xx => I, Pos: [206, 214] xx => I, Pos: [218, 227] cc => I, Pos: [218, 227] cc => I, Pos: [219, 246] cc => I, Pos: [219, 246] cc => I, Pos: [222, 232] cc => I, Pos: [222, 232] cc => I, Pos: [225, 234] cc => I, Pos: [225, 234] cc => I, Pos: [227, 235] cc => I, Pos: [227, 235] cc => I, Pos: [228, 237] xx => I, Pos: [228, 237] xx => I, Pos: [230, 238] xx => I, Pos: [230, 238] xx => I, Pos: [236, 239] cc => I, Pos: [236, 239] cc => I, Pos: [237, 242] xx => I, Pos: [237, 242] xx => I, Pos: [241, 248] cc => I, Pos: [241, 248] cc => I, Pos: [242, 249] xx => I, Pos: [242, 249] xx => I, Pos: [243, 250] xx => I, Pos: [243, 250] xx => I, Pos: [249, 255] xx => I, Pos: [249, 255] xx => I, Pos: [255, 262] xx => I, Pos: [255, 262] xx => I, Pos: [261, 263] cc => I, Pos: [261, 263] cc => I]

Plan: 1
[Pos: [1, 6] cc => I,
 Pos: [8, 21] cc => I,
 Pos: [26, 34] cc => I,
 Pos: [29, 47] xx => I,
 Pos: [36, 41] xx => I,
 Pos: [40, 48] cc => I,
 Pos: [54, 71] cc => I,
 Pos: [61, 86] cc => I,
 Pos: [70, 77] cc => I,
 Pos: [82, 88] cc => I,
 Pos: [83, 96] cc => I,
 Pos: [84, 92] cc => I,
 Pos: [85, 89, 95] ccc => cc,
 Pos: [101, 108] xx => I,
 Pos: [104, 115] xx => I,
 Pos: [107, 109] cc => I,
 Pos: [110, 124] cc => I,
 Pos: [111, 118] cc => I,
 Pos: [112, 117, 127] ccc => cc,
 Pos: [114, 121] xx => I,
 Pos: [128, 136] xx => I,
 Pos: [135, 143] cc => I,
 Pos: [138, 151, 152] xcx => c,
 Pos: [142, 146] xx => I,
 Pos: [162, 179] cc => I,
 Pos: [164, 169] xx => I,
 Pos: [165, 172] xx => I,
 Pos: [166, 171] xx => I,
 Pos: [168, 173, 180] ccc => cc,
 Pos: [174, 178] cc => I,
 Pos: [176, 187] cc => I,
 Pos: [182, 185] cc => I,
 Pos: [192, 203, 207] xcx => c,
 Pos: [197, 200] xx => I,
 Pos: [204, 212] cc => I,
 Pos: [205, 218] cc => I,
 Pos: [206, 214] xx => I,
 Pos: [219, 246] cc => I,
 Pos: [222, 232] cc => I,
 Pos: [225, 234] cc => I,
 Pos: [227, 235] cc => I,
 Pos: [228, 237] xx => I,
 Pos: [230, 238] xx => I,
 Pos: [236, 239] cc => I,
 Pos: [241, 248] cc => I,
 Pos: [242, 249] xx => I,
 Pos: [243, 250] xx => I,
 Pos: [255, 262] xx => I,
 Pos: [261, 263] cc => I]
Change: 49, Saving: 49

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.125169038772583

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [1, 6] cc => I,
 Pos: [8, 21] cc => I,
 Pos: [26, 34] cc => I,
 Pos: [29, 47] xx => I,
 Pos: [36, 41] xx => I,
 Pos: [40, 48] cc => I,
 Pos: [54, 71] cc => I,
 Pos: [61, 86] cc => I,
 Pos: [70, 77] cc => I,
 Pos: [82, 88] cc => I,
 Pos: [83, 96] cc => I,
 Pos: [84, 92] cc => I,
 Pos: [85, 89, 95] ccc => cc,
 Pos: [101, 108] xx => I,
 Pos: [104, 115] xx => I,
 Pos: [107, 109] cc => I,
 Pos: [110, 124] cc => I,
 Pos: [111, 118] cc => I,
 Pos: [112, 117, 127] ccc => cc,
 Pos: [114, 121] xx => I,
 Pos: [128, 136] xx => I,
 Pos: [135, 143] cc => I,
 Pos: [138, 151, 152] xcx => c,
 Pos: [142, 146] xx => I,
 Pos: [162, 179] cc => I,
 Pos: [164, 169] xx => I,
 Pos: [165, 172] xx => I,
 Pos: [166, 171] xx => I,
 Pos: [168, 173, 180] ccc => cc,
 Pos: [174, 178] cc => I,
 Pos: [176, 187] cc => I,
 Pos: [182, 185] cc => I,
 Pos: [192, 203, 207] xcx => c,
 Pos: [197, 200] xx => I,
 Pos: [204, 212] cc => I,
 Pos: [205, 218] cc => I,
 Pos: [206, 214] xx => I,
 Pos: [219, 246] cc => I,
 Pos: [222, 232] cc => I,
 Pos: [225, 234] cc => I,
 Pos: [227, 235] cc => I,
 Pos: [228, 237] xx => I,
 Pos: [230, 238] xx => I,
 Pos: [236, 239] cc => I,
 Pos: [241, 248] cc => I,
 Pos: [242, 249] xx => I,
 Pos: [243, 250] xx => I,
 Pos: [255, 262] xx => I,
 Pos: [261, 263] cc => I]
Change: 49, Saving: 49

Circuit before: xccccxcccccxxxxccxxcccccxccccxxcccccxxxccxxxxcxxccccxccccccxxcccccxxxcccccxxxccccccccccxccccccccccxccxxxxcccxcccccxxcccccxxcccccxxxcccccxxxxccxcccxxxcccxxxxccccccccxxxccxxxxccccccccccxccccccccxccccxxcxxccccxxxcccccxxccccxcccccccxxxxcccccxxcccxxcccccxxccccxxxxcccxcccccxc
---------------
Apply:  Pos: [1, 6] cc => I
Apply:  Pos: [8, 21] cc => I
Apply:  Pos: [26, 34] cc => I
Apply:  Pos: [29, 47] xx => I
Apply:  Pos: [36, 41] xx => I
Apply:  Pos: [40, 48] cc => I
Apply:  Pos: [54, 71] cc => I
Apply:  Pos: [61, 86] cc => I
Apply:  Pos: [70, 77] cc => I
Apply:  Pos: [82, 88] cc => I
Apply:  Pos: [83, 96] cc => I
Apply:  Pos: [84, 92] cc => I
Apply:  Pos: [85, 89, 95] ccc => cc
Apply:  Pos: [101, 108] xx => I
Apply:  Pos: [104, 115] xx => I
Apply:  Pos: [107, 109] cc => I
Apply:  Pos: [110, 124] cc => I
Apply:  Pos: [111, 118] cc => I
Apply:  Pos: [112, 117, 127] ccc => cc
Apply:  Pos: [114, 121] xx => I
Apply:  Pos: [128, 136] xx => I
Apply:  Pos: [135, 143] cc => I
Apply:  Pos: [138, 151, 152] xcx => c
Apply:  Pos: [142, 146] xx => I
Apply:  Pos: [162, 179] cc => I
Apply:  Pos: [164, 169] xx => I
Apply:  Pos: [165, 172] xx => I
Apply:  Pos: [166, 171] xx => I
Apply:  Pos: [168, 173, 180] ccc => cc
Apply:  Pos: [174, 178] cc => I
Apply:  Pos: [176, 187] cc => I
Apply:  Pos: [182, 185] cc => I
Apply:  Pos: [192, 203, 207] xcx => c
Apply:  Pos: [197, 200] xx => I
Apply:  Pos: [204, 212] cc => I
Apply:  Pos: [205, 218] cc => I
Apply:  Pos: [206, 214] xx => I
Apply:  Pos: [219, 246] cc => I
Apply:  Pos: [222, 232] cc => I
Apply:  Pos: [225, 234] cc => I
Apply:  Pos: [227, 235] cc => I
Apply:  Pos: [228, 237] xx => I
Apply:  Pos: [230, 238] xx => I
Apply:  Pos: [236, 239] cc => I
Apply:  Pos: [241, 248] cc => I
Apply:  Pos: [242, 249] xx => I
Apply:  Pos: [243, 250] xx => I
Apply:  Pos: [255, 262] xx => I
Apply:  Pos: [261, 263] cc => I
---------------
Circuit after: xcccxcccxxxxccxxccccxcccxccccxxcxxxcxcccxcccccxxccccxxxcccxxxcccccxccccccxccxxccccccccxcccxxccccxcxccccxxccxxxcccccccccxccccxcccccccccccxcxcxccccxccxccccxxcccccccccxxxccccccxc

--------End Timer [apply mapping plan]:  0.0

[19], [15, 0], [5, 11], [6, 8], [8], [12, 7], [4, 13], [0, 9], [16], [17], [4], [1], [10, 2], [13, 5], [0], [12], [16, 14], [6, 9], [5, 15], [7, 8], [16], [12, 11], [3, 13], [4, 1], [11], [16, 3], [5, 0], [14, 17], [1, 18], [9], [6], [13, 17], [10], [16], [5], [6, 8], [3], [7, 6], [11, 0], [4, 13], [6], [3, 5], [9, 8], [17, 11], [19, 18], [12, 7], [3], [2], [13, 10], [1, 18], [5, 15], [12, 11], [5], [0], [18], [3, 10], [6, 9], [4, 17], [10], [19], [4], [0, 9], [18, 6], [3, 13], [16, 14], [14, 4], [7], [4, 17], [3, 5], [13, 10], [16, 3], [11, 15], [7, 8], [17], [3, 13], [9, 8], [4], [14], [17, 12], [6, 8], [1, 12], [7, 9], [11, 7], [19, 12], [9, 8], [10, 5], [13], [4, 17], [15, 0], [7, 9], [14], [1], [11, 7], [6, 9], [4, 13], [2, 15], [18], [2, 15], [4], [0, 9], [7, 8], [13, 10], [14, 4], [6], [8], [14, 17], [4, 1], [1], [10], [0], [3, 5], [12, 7], [14, 4], [3, 10], [5, 0], [11, 7], [6, 9], [12, 7], [4, 18], [9], [1, 18], [4, 17], [3, 13], [12, 18], [0], [16, 3], [17, 12], [3, 10], [13, 5], [12, 11], [1, 18], [1, 19], [16, 3], [9, 8], [7, 6], [5, 11], [7], [13, 5], [9], [12, 11], [10], [5, 11], [12, 18], [4, 13], [2, 15], [3], [19, 18], [0, 9], [5], [16, 3], [1, 12], [14, 13], [6, 8], [1], [13], [19, 12], [3, 10], [4, 1], [2, 15], [3, 5], [5, 15], [12, 18], [13, 10], [1, 19], [9], [19], [7], [6, 8], [13, 5], [10, 2], [18, 6], [11, 7], [0, 9], [11], [16, 3], ----End Timer [Execute Mapping]:  1.8126819133758545

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[95, 97]
[97, 144]
[144, 158]
[152, 167]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[77, 90]
[136, 166]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[125, 127, 132]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 

[138, 147, 164]

------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[77, 90]
[136, 166]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[95, 97]
[97, 144]
[144, 158]
[152, 167]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.1873624324798584

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [77, 90] xx => I, Pos: [77, 90] xx => I, Pos: [95, 97] cc => I, Pos: [95, 97] cc => I, Pos: [97, 144] cc => I, Pos: [97, 144] cc => I, Pos: [125, 127, 132] ccc => cc, Pos: [136, 166] xx => I, Pos: [136, 166] xx => I, Pos: [138, 147, 164] xcx => c, Pos: [144, 158] cc => I, Pos: [144, 158] cc => I, Pos: [152, 167] cc => I, Pos: [152, 167] cc => I]

Plan: 1
[Pos: [77, 90] xx => I,
 Pos: [95, 97] cc => I,
 Pos: [125, 127, 132] ccc => cc,
 Pos: [136, 166] xx => I,
 Pos: [138, 147, 164] xcx => c,
 Pos: [144, 158] cc => I,
 Pos: [152, 167] cc => I]
Change: 7, Saving: 7

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.015605449676513672

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [77, 90] xx => I,
 Pos: [95, 97] cc => I,
 Pos: [125, 127, 132] ccc => cc,
 Pos: [136, 166] xx => I,
 Pos: [138, 147, 164] xcx => c,
 Pos: [144, 158] cc => I,
 Pos: [152, 167] cc => I]
Change: 7, Saving: 7

Circuit before: xcccxcccxxxxccxxccccxcccxccccxxcxxxcxcccxcccccxxccccxxxcccxxxcccccxccccccxccxxccccccccxcccxxccccxcxccccxxccxxxcccccccccxccccxcccccccccccxcxcxccccxccxccccxxcccccccccxxxccccccxc
---------------
Apply:  Pos: [77, 90] xx => I
Apply:  Pos: [95, 97] cc => I
Apply:  Pos: [125, 127, 132] ccc => cc
Apply:  Pos: [136, 166] xx => I
Apply:  Pos: [138, 147, 164] xcx => c
Apply:  Pos: [144, 158] cc => I
Apply:  Pos: [152, 167] cc => I
---------------
Circuit after: xcccxcccxxxxccxxccccxcccxccccxxcxxxcxcccxcccccxxccccxxxcccxxxcccccxccccccxccxccccccccxcccxcccxxccccxxccxxxcccccccccxccccxcccccccccccccxcccxcxcccxxccccccccxcccccxc

--------End Timer [apply mapping plan]:  0.0

[19], [15, 0], [5, 11], [6, 8], [8], [12, 7], [4, 13], [0, 9], [16], [17], [4], [1], [10, 2], [13, 5], [0], [12], [16, 14], [6, 9], [5, 15], [7, 8], [16], [12, 11], [3, 13], [4, 1], [11], [16, 3], [5, 0], [14, 17], [1, 18], [9], [6], [13, 17], [10], [16], [5], [6, 8], [3], [7, 6], [11, 0], [4, 13], [6], [3, 5], [9, 8], [17, 11], [19, 18], [12, 7], [3], [2], [13, 10], [1, 18], [5, 15], [12, 11], [5], [0], [18], [3, 10], [6, 9], [4, 17], [10], [19], [4], [0, 9], [18, 6], [3, 13], [16, 14], [14, 4], [7], [4, 17], [3, 5], [13, 10], [16, 3], [11, 15], [7, 8], [17], [3, 13], [9, 8], [4], [17, 12], [6, 8], [1, 12], [7, 9], [11, 7], [19, 12], [9, 8], [10, 5], [13], [4, 17], [15, 0], [7, 9], [1], [11, 7], [6, 9], [4, 13], [18], [4], [0, 9], [7, 8], [13, 10], [14, 4], [6], [8], [14, 17], [4, 1], [1], [10], [0], [3, 5], [12, 7], [14, 4], [3, 10], [5, 0], [11, 7], [6, 9], [12, 7], [4, 18], [9], [1, 18], [4, 17], [3, 13], [12, 18], [0], [16, 10], [17, 12], [3, 10], [13, 5], [12, 11], [1, 19], [1, 18], [9, 8], [7, 6], [5, 11], [13, 5], [0, 9], [12, 11], [10], [5, 11], [12, 18], [4, 13], [3], [19, 18], [5], [16, 3], [1, 12], [14, 13], [1], [13], [19, 12], [3, 10], [4, 1], [3, 5], [5, 15], [12, 18], [13, 10], [1, 19], [19], [13, 5], [10, 2], [18, 6], [11, 7], [0, 9], [11], [16, 3], ----End Timer [Execute Mapping]:  1.202967882156372

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[132, 159]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[132, 159]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.125453233718872

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [132, 159] cc => I, Pos: [132, 159] cc => I]

Plan: 1
[Pos: [132, 159] cc => I]
Change: 1, Saving: 1

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [132, 159] cc => I]
Change: 1, Saving: 1

Circuit before: xcccxcccxxxxccxxccccxcccxccccxxcxxxcxcccxcccccxxccccxxxcccxxxcccccxccccccxccxccccccccxcccxcccxxccccxxccxxxcccccccccxccccxcccccccccccccxcccxcxcccxxccccccccxcccccxc
---------------
Apply:  Pos: [132, 159] cc => I
---------------
Circuit after: xcccxcccxxxxccxxccccxcccxccccxxcxxxcxcccxcccccxxccccxxxcccxxxcccccxccccccxccxccccccccxcccxcccxxccccxxccxxxcccccccccxccccxccccccccccccxcccxcxcccxxccccccccxccccxc

--------End Timer [apply mapping plan]:  0.0

[19], [15, 0], [5, 11], [6, 8], [8], [12, 7], [4, 13], [0, 9], [16], [17], [4], [1], [10, 2], [13, 5], [0], [12], [16, 14], [6, 9], [5, 15], [7, 8], [16], [12, 11], [3, 13], [4, 1], [11], [16, 3], [5, 0], [14, 17], [1, 18], [9], [6], [13, 17], [10], [16], [5], [6, 8], [3], [7, 6], [11, 0], [4, 13], [6], [3, 5], [9, 8], [17, 11], [19, 18], [12, 7], [3], [2], [13, 10], [1, 18], [5, 15], [12, 11], [5], [0], [18], [3, 10], [6, 9], [4, 17], [10], [19], [4], [0, 9], [18, 6], [3, 13], [16, 14], [14, 4], [7], [4, 17], [3, 5], [13, 10], [16, 3], [11, 15], [7, 8], [17], [3, 13], [9, 8], [4], [17, 12], [6, 8], [1, 12], [7, 9], [11, 7], [19, 12], [9, 8], [10, 5], [13], [4, 17], [15, 0], [7, 9], [1], [11, 7], [6, 9], [4, 13], [18], [4], [0, 9], [7, 8], [13, 10], [14, 4], [6], [8], [14, 17], [4, 1], [1], [10], [0], [3, 5], [12, 7], [14, 4], [3, 10], [5, 0], [11, 7], [6, 9], [12, 7], [4, 18], [9], [1, 18], [4, 17], [3, 13], [12, 18], [0], [16, 10], [17, 12], [3, 10], [13, 5], [12, 11], [1, 18], [1, 19], [9, 8], [7, 6], [5, 11], [13, 5], [12, 11], [10], [5, 11], [12, 18], [4, 13], [3], [19, 18], [5], [16, 3], [1, 12], [14, 13], [1], [13], [19, 12], [3, 10], [4, 1], [3, 5], [5, 15], [12, 18], [13, 10], [1, 19], [19], [13, 5], [10, 2], [18, 6], [11, 7], [11], [16, 3], ----End Timer [Execute Mapping]:  1.125453233718872

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.0934474468231201

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

..........

Total Plans: 0

--------End Timer [Generate Plans]:  0.0

There's no mapping plan.
[19], [15, 0], [5, 11], [6, 8], [8], [12, 7], [4, 13], [0, 9], [16], [17], [4], [1], [10, 2], [13, 5], [0], [12], [16, 14], [6, 9], [5, 15], [7, 8], [16], [12, 11], [3, 13], [4, 1], [11], [16, 3], [5, 0], [14, 17], [1, 18], [9], [6], [13, 17], [10], [16], [5], [6, 8], [3], [7, 6], [11, 0], [4, 13], [6], [3, 5], [9, 8], [17, 11], [19, 18], [12, 7], [3], [2], [13, 10], [1, 18], [5, 15], [12, 11], [5], [0], [18], [3, 10], [6, 9], [4, 17], [10], [19], [4], [0, 9], [18, 6], [3, 13], [16, 14], [14, 4], [7], [4, 17], [3, 5], [13, 10], [16, 3], [11, 15], [7, 8], [17], [3, 13], [9, 8], [4], [17, 12], [6, 8], [1, 12], [7, 9], [11, 7], [19, 12], [9, 8], [10, 5], [13], [4, 17], [15, 0], [7, 9], [1], [11, 7], [6, 9], [4, 13], [18], [4], [0, 9], [7, 8], [13, 10], [14, 4], [6], [8], [14, 17], [4, 1], [1], [10], [0], [3, 5], [12, 7], [14, 4], [3, 10], [5, 0], [11, 7], [6, 9], [12, 7], [4, 18], [9], [1, 18], [4, 17], [3, 13], [12, 18], [0], [16, 10], [17, 12], [3, 10], [13, 5], [12, 11], [1, 19], [1, 18], [9, 8], [7, 6], [5, 11], [13, 5], [12, 11], [10], [5, 11], [12, 18], [4, 13], [3], [19, 18], [5], [16, 3], [1, 12], [14, 13], [1], [13], [19, 12], [3, 10], [4, 1], [3, 5], [5, 15], [12, 18], [13, 10], [1, 19], [19], [13, 5], [10, 2], [18, 6], [11, 7], [11], [16, 3], ----End Timer [Execute Mapping]:  1.0934474468231201

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-x-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-x-x-cx-cx-x-x-x-x-cx-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-x-x-x-x-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-x-cx-cx-cx-x-x-x-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-cx-x-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-x-cx-cx-cx-cx-cx-x-cx 
     => total size: [270] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx,x]
 - circuit depth: 45 - (small)
 - circuit cycle: 450


>> Solved circuit: 
Circuit Info: 
 - circuit: x-cx-cx-cx-x-cx-cx-cx-x-x-x-x-cx-cx-x-x-cx-cx-cx-cx-x-cx-cx-cx-x-cx-cx-cx-cx-x-x-cx-x-x-x-cx-x-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-x-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-cx-cx-x-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-x-cx-x-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-cx 
     => total size: [160] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx,x]
 - circuit depth: 31 - (small)
 - circuit cycle: 274

Reduced: 
 - size: 110 (40.74%)
 - depth: 14 (31.11%)

