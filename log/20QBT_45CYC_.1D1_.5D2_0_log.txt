----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.1403369903564453

[19], [18], [1, 13], [6, 8], [12, 7], [15, 11], [5, 4], [3, 16], [19], [17], [5, 4], [6, 2], [15, 11], [1, 7], [19], [10], [0, 12], [15, 18], [1, 7], [2, 8], [3], [16], [0, 19], [4, 18], [9, 5], [2, 17], [12, 1], [8, 15], [4], [0, 19], [11, 10], [15, 18], [1, 7], [13, 3], [2, 17], [19], [6], [14], [7, 8], [1, 13], [16, 4], [9, 5], [11, 10], [19], [17], [1], [7], [3], [8, 15], [4, 18], [13, 9], [19], [11], [3, 16], [2, 8], [12, 14], [4, 18], [15, 10], [18], [0, 19], [6, 8], [11, 10], [7, 15], [14, 1], [3, 5], [2], [0, 19], [8, 16], [1, 7], [17, 11], [13, 9], [19], [9, 5], [12, 7], [11, 10], [16, 15], [19, 3], [11, 18], [8, 15], [5, 4], [19], [12], [1, 7], [16, 5], [11, 18], [8, 15], [6, 2], [19], [13], [7, 16], [14, 1], [15, 11], [8, 17], [19], [12, 7], [14, 6], [13, 9], [1, 3], [2, 17], [11, 10], [19], [3, 4], [16, 5], [1, 13], [15, 11], [18, 10], [12, 14], [19], [6], [9], [16, 5], [12, 1], [15, 11], [4, 18], [3], [7], [16], [19, 1], [8, 17], [9, 5], [12, 14], [4, 18], [19], [12], [0], [10], [14, 6], [3, 5], [7, 15], [13, 9], [2, 8], [5], [9], [0], [13], [19, 3], [12, 7], [4, 18], [16, 15], [17], [14], [0, 19], [1, 13], [6, 8], [16, 15], [18, 10], [19], [6], [17], [13], [1, 3], [0, 12], [5, 4], [0, 19], [11, 10], [1, 13], [16, 4], [8, 15], [3, 5], [14, 7], [0], [15, 10], [6, 2], [14, 7], [13, 9], [11, 18], [19, 1], [0], [11], [10], [8], [14, 1], [19, 13], [15, 18], [6, 2], [7, 16], [0], [15, 10], [12, 14], [7, 8], [9, 5], [0], [3], [10], [12, 14], [7, 15], [2, 17], [16, 4], [19, 1], [0], [4], [15], [1, 13], [7, 16], [3, 5], [8, 17], [18, 10], [0], [4], [15, 10], [9, 5], [13, 3], [2, 8], [14, 1], [0], [6], [9], [2], [11, 10], [3, 4], [19, 13], [7, 16], [15, 18], [0], [8], [14, 6], [3, 5], [7, 15], [13, 9], [11, 10], [14], [6], [0, 19], [11, 18], [7, 16], [12, 1], [8, 17], [15, 10], [0], [15], [9], [16], [19, 1], [8, 17], [6, 2], [18, 10], [0], [2], [17, 11], [13, 3], [14, 6], [8, 16], [0, 19], [2, 17], [16, 15], [12, 7], [13, 9], [3, 4], [0], [15], [6], [18, 10], [2, 17], [16, 4], [7, 8], [11], [0, 12], [8, 15], [13, 3], [1, 7], [5, 4], [6, 2], [12], [8, 17], [3, 5], [14, 6], [15, 18], [13, 9], [12, 7], [6, 17], [3, 4], [16, 15], [12], [0], [17, 11], [3, 5], [16, 4], [18, 10], [19, 1], [12], [8], [19, 3], [1, 13], [16, 4], [6, 2], [12, 1], [8, 16], [2, 17], [11, 10], [5, 4], [14, 6], [15], [12, 14], [13, 9], [6, 2], [11, 10], [7, 8], [16, 4], [3, 5], [12], [4], [8, 17], [3, 16], [7, 15], [11, 10], [13], [14], [0, 12], [5, 4], [19, 3], [1, 7], [15, 11], [8, 17], [18, 10], [6, 2], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[6, 10]
[5, 12]
[13, 18]
[22, 29]
[25, 34]
[24, 41]
[30, 42]
[49, 56]
[59, 66]
[50, 70]
[77, 84]
[78, 85]
[102, 110]
[104, 112]
[106, 120]
[113, 121]
[121, 137]
[138, 144]
[159, 163]
[162, 174]
[178, 184]
[193, 211]
[208, 219]
[211, 224]
[226, 233]
[235, 251]
[243, 252]
[246, 267]
[264, 275]
[276, 283]
[288, 295]
[295, 304]
[301, 312]
[294, 314]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[0, 8]
[8, 14]
[35, 43]
[43, 51]
[80, 87]
[87, 93]
[93, 100]
[100, 107]
[124, 133]
[139, 148]
[160, 167]
[167, 176]
[176, 181]
[181, 189]
[189, 197]
[190, 198]
[197, 204]
[204, 213]
[228, 236]
[272, 279]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[91, 99, 104]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 

[134, 142, 149]
[169, 177, 183]

------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[18, 26, 32]
[61, 69, 74]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[0, 8]
[8, 14]
[35, 43]
[43, 51]
[80, 87]
[87, 93]
[93, 100]
[100, 107]
[124, 133]
[139, 148]
[160, 167]
[167, 176]
[176, 181]
[181, 189]
[189, 197]
[190, 198]
[197, 204]
[204, 213]
[228, 236]
[272, 279]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[6, 10]
[5, 12]
[13, 18]
[22, 29]
[25, 34]
[24, 41]
[30, 42]
[49, 56]
[59, 66]
[50, 70]
[77, 84]
[78, 85]
[102, 110]
[104, 112]
[106, 120]
[113, 121]
[121, 137]
[138, 144]
[159, 163]
[162, 174]
[178, 184]
[193, 211]
[208, 219]
[211, 224]
[226, 233]
[235, 251]
[243, 252]
[246, 267]
[264, 275]
[276, 283]
[288, 295]
[295, 304]
[301, 312]
[294, 314]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.391148567199707

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 8] xx => I, Pos: [0, 8] xx => I, Pos: [5, 12] cc => I, Pos: [5, 12] cc => I, Pos: [6, 10] cc => I, Pos: [6, 10] cc => I, Pos: [8, 14] xx => I, Pos: [8, 14] xx => I, Pos: [13, 18] cc => I, Pos: [13, 18] cc => I, Pos: [18, 26, 32] ccc => cc, Pos: [22, 29] cc => I, Pos: [22, 29] cc => I, Pos: [24, 41] cc => I, Pos: [24, 41] cc => I, Pos: [25, 34] cc => I, Pos: [25, 34] cc => I, Pos: [30, 42] cc => I, Pos: [30, 42] cc => I, Pos: [35, 43] xx => I, Pos: [35, 43] xx => I, Pos: [43, 51] xx => I, Pos: [43, 51] xx => I, Pos: [49, 56] cc => I, Pos: [49, 56] cc => I, Pos: [50, 70] cc => I, Pos: [50, 70] cc => I, Pos: [59, 66] cc => I, Pos: [59, 66] cc => I, Pos: [61, 69, 74] ccc => cc, Pos: [77, 84] cc => I, Pos: [77, 84] cc => I, Pos: [78, 85] cc => I, Pos: [78, 85] cc => I, Pos: [80, 87] xx => I, Pos: [80, 87] xx => I, Pos: [87, 93] xx => I, Pos: [87, 93] xx => I, Pos: [91, 99, 104] ccc => cc, Pos: [93, 100] xx => I, Pos: [93, 100] xx => I, Pos: [100, 107] xx => I, Pos: [100, 107] xx => I, Pos: [102, 110] cc => I, Pos: [102, 110] cc => I, Pos: [104, 112] cc => I, Pos: [104, 112] cc => I, Pos: [106, 120] cc => I, Pos: [106, 120] cc => I, Pos: [113, 121] cc => I, Pos: [113, 121] cc => I, Pos: [121, 137] cc => I, Pos: [121, 137] cc => I, Pos: [124, 133] xx => I, Pos: [124, 133] xx => I, Pos: [134, 142, 149] xcx => c, Pos: [138, 144] cc => I, Pos: [138, 144] cc => I, Pos: [139, 148] xx => I, Pos: [139, 148] xx => I, Pos: [159, 163] cc => I, Pos: [159, 163] cc => I, Pos: [160, 167] xx => I, Pos: [160, 167] xx => I, Pos: [162, 174] cc => I, Pos: [162, 174] cc => I, Pos: [167, 176] xx => I, Pos: [167, 176] xx => I, Pos: [169, 177, 183] xcx => c, Pos: [176, 181] xx => I, Pos: [176, 181] xx => I, Pos: [178, 184] cc => I, Pos: [178, 184] cc => I, Pos: [181, 189] xx => I, Pos: [181, 189] xx => I, Pos: [189, 197] xx => I, Pos: [189, 197] xx => I, Pos: [190, 198] xx => I, Pos: [190, 198] xx => I, Pos: [193, 211] cc => I, Pos: [193, 211] cc => I, Pos: [197, 204] xx => I, Pos: [197, 204] xx => I, Pos: [204, 213] xx => I, Pos: [204, 213] xx => I, Pos: [208, 219] cc => I, Pos: [208, 219] cc => I, Pos: [211, 224] cc => I, Pos: [211, 224] cc => I, Pos: [226, 233] cc => I, Pos: [226, 233] cc => I, Pos: [228, 236] xx => I, Pos: [228, 236] xx => I, Pos: [235, 251] cc => I, Pos: [235, 251] cc => I, Pos: [243, 252] cc => I, Pos: [243, 252] cc => I, Pos: [246, 267] cc => I, Pos: [246, 267] cc => I, Pos: [264, 275] cc => I, Pos: [264, 275] cc => I, Pos: [272, 279] xx => I, Pos: [272, 279] xx => I, Pos: [276, 283] cc => I, Pos: [276, 283] cc => I, Pos: [288, 295] cc => I, Pos: [288, 295] cc => I, Pos: [294, 314] cc => I, Pos: [294, 314] cc => I, Pos: [295, 304] cc => I, Pos: [295, 304] cc => I, Pos: [301, 312] cc => I, Pos: [301, 312] cc => I]

Plan: 1
[Pos: [0, 8] xx => I,
 Pos: [5, 12] cc => I,
 Pos: [6, 10] cc => I,
 Pos: [13, 18] cc => I,
 Pos: [22, 29] cc => I,
 Pos: [24, 41] cc => I,
 Pos: [25, 34] cc => I,
 Pos: [30, 42] cc => I,
 Pos: [35, 43] xx => I,
 Pos: [49, 56] cc => I,
 Pos: [50, 70] cc => I,
 Pos: [59, 66] cc => I,
 Pos: [61, 69, 74] ccc => cc,
 Pos: [77, 84] cc => I,
 Pos: [78, 85] cc => I,
 Pos: [80, 87] xx => I,
 Pos: [91, 99, 104] ccc => cc,
 Pos: [93, 100] xx => I,
 Pos: [102, 110] cc => I,
 Pos: [106, 120] cc => I,
 Pos: [113, 121] cc => I,
 Pos: [124, 133] xx => I,
 Pos: [134, 142, 149] xcx => c,
 Pos: [138, 144] cc => I,
 Pos: [139, 148] xx => I,
 Pos: [159, 163] cc => I,
 Pos: [160, 167] xx => I,
 Pos: [162, 174] cc => I,
 Pos: [169, 177, 183] xcx => c,
 Pos: [176, 181] xx => I,
 Pos: [178, 184] cc => I,
 Pos: [189, 197] xx => I,
 Pos: [190, 198] xx => I,
 Pos: [193, 211] cc => I,
 Pos: [204, 213] xx => I,
 Pos: [208, 219] cc => I,
 Pos: [226, 233] cc => I,
 Pos: [228, 236] xx => I,
 Pos: [235, 251] cc => I,
 Pos: [243, 252] cc => I,
 Pos: [246, 267] cc => I,
 Pos: [264, 275] cc => I,
 Pos: [272, 279] xx => I,
 Pos: [276, 283] cc => I,
 Pos: [288, 295] cc => I,
 Pos: [294, 314] cc => I,
 Pos: [301, 312] cc => I]
Change: 47, Saving: 154

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 8] xx => I,
 Pos: [5, 12] cc => I,
 Pos: [6, 10] cc => I,
 Pos: [13, 18] cc => I,
 Pos: [22, 29] cc => I,
 Pos: [24, 41] cc => I,
 Pos: [25, 34] cc => I,
 Pos: [30, 42] cc => I,
 Pos: [35, 43] xx => I,
 Pos: [49, 56] cc => I,
 Pos: [50, 70] cc => I,
 Pos: [59, 66] cc => I,
 Pos: [61, 69, 74] ccc => cc,
 Pos: [77, 84] cc => I,
 Pos: [78, 85] cc => I,
 Pos: [80, 87] xx => I,
 Pos: [91, 99, 104] ccc => cc,
 Pos: [93, 100] xx => I,
 Pos: [102, 110] cc => I,
 Pos: [106, 120] cc => I,
 Pos: [113, 121] cc => I,
 Pos: [124, 133] xx => I,
 Pos: [134, 142, 149] xcx => c,
 Pos: [138, 144] cc => I,
 Pos: [139, 148] xx => I,
 Pos: [159, 163] cc => I,
 Pos: [160, 167] xx => I,
 Pos: [162, 174] cc => I,
 Pos: [169, 177, 183] xcx => c,
 Pos: [176, 181] xx => I,
 Pos: [178, 184] cc => I,
 Pos: [189, 197] xx => I,
 Pos: [190, 198] xx => I,
 Pos: [193, 211] cc => I,
 Pos: [204, 213] xx => I,
 Pos: [208, 219] cc => I,
 Pos: [226, 233] cc => I,
 Pos: [228, 236] xx => I,
 Pos: [235, 251] cc => I,
 Pos: [243, 252] cc => I,
 Pos: [246, 267] cc => I,
 Pos: [264, 275] cc => I,
 Pos: [272, 279] xx => I,
 Pos: [276, 283] cc => I,
 Pos: [288, 295] cc => I,
 Pos: [294, 314] cc => I,
 Pos: [301, 312] cc => I]
Change: 47, Saving: 154

Circuit before: xxccccccxxccccxxccccxxccccccxccccccxxxcccccxxxxxcccxxcccccxccccccxcccccxccccccccxxcccccxxccccxccccccxccccccxxxccccxxxcccccxxxxcccccxxxxccccxxcccccxxxxccccccccccxccccccxxxxcccccxccccxxxcccccxxxcccccxxcccccxxxxcccccxxcccccxxccccccxxxxccccxxccccccccccxxxccccxccccccxcccccccccxxcccccxxccccccccccxcccccccxxccccxxcccccccc
---------------
Apply:  Pos: [0, 8] xx => I
Apply:  Pos: [5, 12] cc => I
Apply:  Pos: [6, 10] cc => I
Apply:  Pos: [13, 18] cc => I
Apply:  Pos: [22, 29] cc => I
Apply:  Pos: [24, 41] cc => I
Apply:  Pos: [25, 34] cc => I
Apply:  Pos: [30, 42] cc => I
Apply:  Pos: [35, 43] xx => I
Apply:  Pos: [49, 56] cc => I
Apply:  Pos: [50, 70] cc => I
Apply:  Pos: [59, 66] cc => I
Apply:  Pos: [61, 69, 74] ccc => cc
Apply:  Pos: [77, 84] cc => I
Apply:  Pos: [78, 85] cc => I
Apply:  Pos: [80, 87] xx => I
Apply:  Pos: [91, 99, 104] ccc => cc
Apply:  Pos: [93, 100] xx => I
Apply:  Pos: [102, 110] cc => I
Apply:  Pos: [106, 120] cc => I
Apply:  Pos: [113, 121] cc => I
Apply:  Pos: [124, 133] xx => I
Apply:  Pos: [134, 142, 149] xcx => c
Apply:  Pos: [138, 144] cc => I
Apply:  Pos: [139, 148] xx => I
Apply:  Pos: [159, 163] cc => I
Apply:  Pos: [160, 167] xx => I
Apply:  Pos: [162, 174] cc => I
Apply:  Pos: [169, 177, 183] xcx => c
Apply:  Pos: [176, 181] xx => I
Apply:  Pos: [178, 184] cc => I
Apply:  Pos: [189, 197] xx => I
Apply:  Pos: [190, 198] xx => I
Apply:  Pos: [193, 211] cc => I
Apply:  Pos: [204, 213] xx => I
Apply:  Pos: [208, 219] cc => I
Apply:  Pos: [226, 233] cc => I
Apply:  Pos: [228, 236] xx => I
Apply:  Pos: [235, 251] cc => I
Apply:  Pos: [243, 252] cc => I
Apply:  Pos: [246, 267] cc => I
Apply:  Pos: [264, 275] cc => I
Apply:  Pos: [272, 279] xx => I
Apply:  Pos: [276, 283] cc => I
Apply:  Pos: [288, 295] cc => I
Apply:  Pos: [294, 314] cc => I
Apply:  Pos: [301, 312] cc => I
---------------
Circuit after: xccccxcxxcccxxcccxcccxxcccxxxxcxxccccxcccccxcccxcccccxcccxcccccccccccccxxxccxxxcccxxxcccccxxccccxcccxxcccccccccccccxcxccccccxccccxcccccccccxxxcccxccccxxcccccxxxccxccccccccxxxccxccccccxcccccccxcccxccccccccxcccccxxcccxxcccccc

--------End Timer [apply mapping plan]:  0.0

[18], [1, 13], [6, 8], [12, 7], [3, 16], [17], [6, 2], [19], [10], [0, 12], [15, 18], [2, 8], [3], [16], [4, 18], [12, 1], [8, 15], [4], [15, 18], [1, 7], [13, 3], [6], [14], [7, 8], [1, 13], [16, 4], [17], [1], [7], [3], [8, 15], [19], [11], [3, 16], [2, 8], [12, 14], [15, 10], [18], [6, 8], [17, 11], [7, 15], [14, 1], [3, 5], [2], [8, 16], [1, 7], [11, 10], [19], [9, 5], [12, 7], [16, 15], [19, 3], [5, 4], [12], [1, 7], [16, 5], [6, 2], [13], [7, 16], [14, 1], [15, 10], [8, 17], [12, 7], [14, 6], [13, 9], [1, 3], [2, 17], [11, 10], [3, 4], [1, 13], [18, 10], [19], [6], [9], [12, 1], [15, 11], [3], [7], [16], [19, 1], [8, 17], [9, 5], [19], [12], [10], [14, 6], [3, 5], [7, 15], [13, 9], [2, 8], [5], [9], [1, 13], [19, 3], [12, 7], [4, 18], [14], [0, 19], [6, 8], [18, 10], [19], [6], [1, 3], [0, 12], [5, 4], [0, 19], [11, 10], [1, 13], [16, 4], [8, 15], [3, 5], [15, 10], [13, 9], [11, 18], [19, 1], [11], [15, 10], [8], [14, 1], [19, 13], [15, 18], [7, 16], [7, 8], [9, 5], [3], [7, 15], [2, 17], [16, 4], [19, 1], [15], [1, 13], [3, 5], [8, 17], [18, 10], [15, 10], [9, 5], [13, 3], [2, 8], [14, 1], [6], [9], [2], [3, 4], [19, 13], [15, 18], [8], [14, 6], [3, 5], [7, 15], [13, 9], [14], [6], [0, 19], [11, 18], [7, 16], [12, 1], [15, 10], [15], [9], [16], [19, 1], [6, 2], [2], [17, 11], [13, 3], [14, 6], [8, 16], [0, 19], [16, 15], [12, 7], [3, 4], [0], [15], [6], [16, 4], [7, 8], [11], [0, 12], [8, 15], [13, 3], [1, 7], [5, 4], [6, 2], [12], [8, 17], [14, 6], [15, 18], [12, 7], [6, 17], [3, 4], [16, 15], [0], [17, 11], [18, 10], [19, 1], [8], [19, 3], [1, 13], [6, 2], [12, 1], [8, 16], [2, 17], [5, 4], [14, 6], [15], [12, 14], [13, 9], [7, 8], [16, 4], [3, 5], [12], [4], [3, 16], [7, 15], [11, 10], [13], [14], [0, 12], [5, 4], [19, 3], [1, 7], [15, 11], [18, 10], ----End Timer [Execute Mapping]:  2.391148567199707

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[92, 107]
[111, 116]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[5, 26]
[7, 31]
[31, 47]
[101, 139]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[108, 122, 127]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[5, 26]
[7, 31]
[31, 47]
[101, 139]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[92, 107]
[111, 116]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.7340292930603027

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [5, 26] xx => I, Pos: [5, 26] xx => I, Pos: [7, 31] xx => I, Pos: [7, 31] xx => I, Pos: [31, 47] xx => I, Pos: [31, 47] xx => I, Pos: [92, 107] cc => I, Pos: [92, 107] cc => I, Pos: [101, 139] xx => I, Pos: [101, 139] xx => I, Pos: [108, 122, 127] ccc => cc, Pos: [111, 116] cc => I, Pos: [111, 116] cc => I]

Plan: 1
[Pos: [5, 26] xx => I,
 Pos: [7, 31] xx => I,
 Pos: [92, 107] cc => I,
 Pos: [101, 139] xx => I,
 Pos: [108, 122, 127] ccc => cc,
 Pos: [111, 116] cc => I]
Change: 6, Saving: 16

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [5, 26] xx => I,
 Pos: [7, 31] xx => I,
 Pos: [92, 107] cc => I,
 Pos: [101, 139] xx => I,
 Pos: [108, 122, 127] ccc => cc,
 Pos: [111, 116] cc => I]
Change: 6, Saving: 16

Circuit before: xccccxcxxcccxxcccxcccxxcccxxxxcxxccccxcccccxcccxcccccxcccxcccccccccccccxxxccxxxcccxxxcccccxxccccxcccxxcccccccccccccxcxccccccxccccxcccccccccxxxcccxccccxxcccccxxxccxccccccccxxxccxccccccxcccccccxcccxccccccccxcccccxxcccxxcccccc
---------------
Apply:  Pos: [5, 26] xx => I
Apply:  Pos: [7, 31] xx => I
Apply:  Pos: [92, 107] cc => I
Apply:  Pos: [101, 139] xx => I
Apply:  Pos: [108, 122, 127] ccc => cc
Apply:  Pos: [111, 116] cc => I
---------------
Circuit after: xcccccxcccxxcccxcccxxcccxxxcxccccxcccccxcccxcccccxcccxcccccccccccccxxxccxxxcccxxxcccccxxcccxcccxcccccccccccxxccccccxcccxcccccccccxxcccxccccxxcccccxxxccxccccccccxxxccxccccccxcccccccxcccxccccccccxcccccxxcccxxcccccc

--------End Timer [apply mapping plan]:  0.0

[18], [1, 13], [6, 8], [12, 7], [3, 16], [6, 2], [10], [0, 12], [15, 18], [2, 8], [3], [16], [4, 18], [12, 1], [8, 15], [4], [15, 18], [1, 7], [13, 3], [6], [14], [7, 8], [1, 13], [16, 4], [1], [7], [3], [8, 15], [11], [3, 16], [2, 8], [12, 14], [15, 10], [18], [6, 8], [17, 11], [7, 15], [14, 1], [3, 5], [2], [8, 16], [1, 7], [11, 10], [19], [9, 5], [12, 7], [16, 15], [19, 3], [5, 4], [12], [1, 7], [16, 5], [6, 2], [13], [7, 16], [14, 1], [15, 10], [8, 17], [12, 7], [14, 6], [13, 9], [1, 3], [2, 17], [11, 10], [3, 4], [1, 13], [18, 10], [19], [6], [9], [12, 1], [15, 11], [3], [7], [16], [19, 1], [8, 17], [9, 5], [19], [12], [10], [14, 6], [3, 5], [7, 15], [13, 9], [2, 8], [5], [9], [19, 3], [12, 7], [4, 18], [14], [0, 19], [6, 8], [18, 10], [19], [1, 3], [0, 12], [5, 4], [0, 19], [11, 10], [7, 16], [8, 15], [3, 5], [13, 9], [11, 18], [19, 1], [11], [8], [14, 1], [19, 13], [15, 18], [7, 8], [16, 4], [9, 5], [3], [7, 15], [2, 17], [19, 1], [15], [1, 13], [3, 5], [8, 17], [15, 10], [18, 10], [9, 5], [13, 3], [2, 8], [14, 1], [9], [2], [3, 4], [19, 13], [15, 18], [8], [14, 6], [3, 5], [7, 15], [13, 9], [14], [6], [0, 19], [11, 18], [7, 16], [12, 1], [15, 10], [15], [9], [16], [19, 1], [6, 2], [2], [17, 11], [13, 3], [14, 6], [8, 16], [0, 19], [16, 15], [12, 7], [3, 4], [0], [15], [6], [16, 4], [7, 8], [11], [0, 12], [8, 15], [13, 3], [1, 7], [5, 4], [6, 2], [12], [8, 17], [14, 6], [15, 18], [12, 7], [6, 17], [3, 4], [16, 15], [0], [17, 11], [18, 10], [19, 1], [8], [19, 3], [1, 13], [6, 2], [12, 1], [8, 16], [2, 17], [5, 4], [14, 6], [15], [12, 14], [13, 9], [7, 8], [16, 4], [3, 5], [12], [4], [3, 16], [7, 15], [11, 10], [13], [14], [0, 12], [5, 4], [19, 3], [1, 7], [15, 11], [18, 10], ----End Timer [Execute Mapping]:  1.7340292930603027

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[94, 100, 105]
[123, 124, 133]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.6870691776275635

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [94, 100, 105] ccc => cc, Pos: [123, 124, 133] ccc => cc]

Plan: 1
[Pos: [94, 100, 105] ccc => cc, Pos: [123, 124, 133] ccc => cc]
Change: 2, Saving: 4

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [94, 100, 105] ccc => cc, Pos: [123, 124, 133] ccc => cc]
Change: 2, Saving: 4

Circuit before: xcccccxcccxxcccxcccxxcccxxxcxccccxcccccxcccxcccccxcccxcccccccccccccxxxccxxxcccxxxcccccxxcccxcccxcccccccccccxxccccccxcccxcccccccccxxcccxccccxxcccccxxxccxccccccccxxxccxccccccxcccccccxcccxccccccccxcccccxxcccxxcccccc
---------------
Apply:  Pos: [94, 100, 105] ccc => cc
Apply:  Pos: [123, 124, 133] ccc => cc
---------------
Circuit after: xcccccxcccxxcccxcccxxcccxxxcxccccxcccccxcccxcccccxcccxcccccccccccccxxxccxxxcccxxxcccccxxcccxcccxccccccccccxxccccccxcccxcccccccccxxccxccccxxcccccxxxccxccccccccxxxccxccccccxcccccccxcccxccccccccxcccccxxcccxxcccccc

--------End Timer [apply mapping plan]:  0.0

[18], [1, 13], [6, 8], [12, 7], [3, 16], [6, 2], [10], [0, 12], [15, 18], [2, 8], [3], [16], [4, 18], [12, 1], [8, 15], [4], [15, 18], [1, 7], [13, 3], [6], [14], [7, 8], [1, 13], [16, 4], [1], [7], [3], [8, 15], [11], [3, 16], [2, 8], [12, 14], [15, 10], [18], [6, 8], [17, 11], [7, 15], [14, 1], [3, 5], [2], [8, 16], [1, 7], [11, 10], [19], [9, 5], [12, 7], [16, 15], [19, 3], [5, 4], [12], [1, 7], [16, 5], [6, 2], [13], [7, 16], [14, 1], [15, 10], [8, 17], [12, 7], [14, 6], [13, 9], [1, 3], [2, 17], [11, 10], [3, 4], [1, 13], [18, 10], [19], [6], [9], [12, 1], [15, 11], [3], [7], [16], [19, 1], [8, 17], [9, 5], [19], [12], [10], [14, 6], [3, 5], [7, 15], [13, 9], [2, 8], [5], [9], [19, 3], [12, 7], [4, 18], [14], [0, 19], [6, 8], [11, 18], [19], [1, 3], [0, 12], [5, 4], [0, 19], [18, 10], [7, 16], [8, 15], [3, 5], [13, 9], [19, 1], [11], [8], [14, 1], [19, 13], [15, 18], [7, 8], [16, 4], [9, 5], [3], [7, 15], [2, 17], [19, 1], [15], [1, 13], [3, 5], [8, 17], [15, 18], [18, 10], [9, 5], [13, 3], [2, 8], [14, 1], [9], [2], [3, 4], [19, 13], [8], [14, 6], [3, 5], [7, 15], [13, 9], [14], [6], [0, 19], [11, 18], [7, 16], [12, 1], [15, 10], [15], [9], [16], [19, 1], [6, 2], [2], [17, 11], [13, 3], [14, 6], [8, 16], [0, 19], [16, 15], [12, 7], [3, 4], [0], [15], [6], [16, 4], [7, 8], [11], [0, 12], [8, 15], [13, 3], [1, 7], [5, 4], [6, 2], [12], [8, 17], [14, 6], [15, 18], [12, 7], [6, 17], [3, 4], [16, 15], [0], [17, 11], [18, 10], [19, 1], [8], [19, 3], [1, 13], [6, 2], [12, 1], [8, 16], [2, 17], [5, 4], [14, 6], [15], [12, 14], [13, 9], [7, 8], [16, 4], [3, 5], [12], [4], [3, 16], [7, 15], [11, 10], [13], [14], [0, 12], [5, 4], [19, 3], [1, 7], [15, 11], [18, 10], ----End Timer [Execute Mapping]:  1.6870691776275635

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.6719353199005127

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

..........

Total Plans: 0

--------End Timer [Generate Plans]:  0.0

There's no mapping plan.
[18], [1, 13], [6, 8], [12, 7], [3, 16], [6, 2], [10], [0, 12], [15, 18], [2, 8], [3], [16], [4, 18], [12, 1], [8, 15], [4], [15, 18], [1, 7], [13, 3], [6], [14], [7, 8], [1, 13], [16, 4], [1], [7], [3], [8, 15], [11], [3, 16], [2, 8], [12, 14], [15, 10], [18], [6, 8], [17, 11], [7, 15], [14, 1], [3, 5], [2], [8, 16], [1, 7], [11, 10], [19], [9, 5], [12, 7], [16, 15], [19, 3], [5, 4], [12], [1, 7], [16, 5], [6, 2], [13], [7, 16], [14, 1], [15, 10], [8, 17], [12, 7], [14, 6], [13, 9], [1, 3], [2, 17], [11, 10], [3, 4], [1, 13], [18, 10], [19], [6], [9], [12, 1], [15, 11], [3], [7], [16], [19, 1], [8, 17], [9, 5], [19], [12], [10], [14, 6], [3, 5], [7, 15], [13, 9], [2, 8], [5], [9], [19, 3], [12, 7], [4, 18], [14], [0, 19], [6, 8], [11, 18], [19], [1, 3], [0, 12], [5, 4], [0, 19], [18, 10], [7, 16], [8, 15], [3, 5], [13, 9], [19, 1], [11], [8], [14, 1], [19, 13], [15, 18], [7, 8], [16, 4], [9, 5], [3], [7, 15], [2, 17], [19, 1], [15], [1, 13], [3, 5], [8, 17], [15, 18], [18, 10], [9, 5], [13, 3], [2, 8], [14, 1], [9], [2], [3, 4], [19, 13], [8], [14, 6], [3, 5], [7, 15], [13, 9], [14], [6], [0, 19], [11, 18], [7, 16], [12, 1], [15, 10], [15], [9], [16], [19, 1], [6, 2], [2], [17, 11], [13, 3], [14, 6], [8, 16], [0, 19], [16, 15], [12, 7], [3, 4], [0], [15], [6], [16, 4], [7, 8], [11], [0, 12], [8, 15], [13, 3], [1, 7], [5, 4], [6, 2], [12], [8, 17], [14, 6], [15, 18], [12, 7], [6, 17], [3, 4], [16, 15], [0], [17, 11], [18, 10], [19, 1], [8], [19, 3], [1, 13], [6, 2], [12, 1], [8, 16], [2, 17], [5, 4], [14, 6], [15], [12, 14], [13, 9], [7, 8], [16, 4], [3, 5], [12], [4], [3, 16], [7, 15], [11, 10], [13], [14], [0, 12], [5, 4], [19, 3], [1, 7], [15, 11], [18, 10], ----End Timer [Execute Mapping]:  1.6719353199005127

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: x-x-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-x-x-x-x-x-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [315] (IBM)
 --------------------
 - qubits_num: 20, using gates: [x,cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 540


>> Solved circuit: 
Circuit Info: 
 - circuit: x-cx-cx-cx-cx-cx-x-cx-cx-cx-x-x-cx-cx-cx-x-cx-cx-cx-x-x-cx-cx-cx-x-x-x-cx-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-cx-cx-cx-x-cx-cx-cx-cx-cx-x-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-x-x-x-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-x-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-x-x-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-x-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx 
     => total size: [210] (IBM)
 --------------------
 - qubits_num: 20, using gates: [x,cx]
 - circuit depth: 39 - (small)
 - circuit cycle: 366

Reduced: 
 - size: 105 (33.33%)
 - cycle: 174 (32.22%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.12478828430175781

[19], [18], [1, 13], [6, 8], [12, 7], [15, 11], [5, 4], [3, 16], [19], [17], [5, 4], [6, 2], [15, 11], [1, 7], [19], [10], [0, 12], [15, 18], [1, 7], [2, 8], [3], [16], [0, 19], [4, 18], [9, 5], [2, 17], [12, 1], [8, 15], [4], [0, 19], [11, 10], [15, 18], [1, 7], [13, 3], [2, 17], [19], [6], [14], [7, 8], [1, 13], [16, 4], [9, 5], [11, 10], [19], [17], [1], [7], [3], [8, 15], [4, 18], [13, 9], [19], [11], [3, 16], [2, 8], [12, 14], [4, 18], [15, 10], [18], [0, 19], [6, 8], [11, 10], [7, 15], [14, 1], [3, 5], [2], [0, 19], [8, 16], [1, 7], [17, 11], [13, 9], [19], [9, 5], [12, 7], [11, 10], [16, 15], [19, 3], [11, 18], [8, 15], [5, 4], [19], [12], [1, 7], [16, 5], [11, 18], [8, 15], [6, 2], [19], [13], [7, 16], [14, 1], [15, 11], [8, 17], [19], [12, 7], [14, 6], [13, 9], [1, 3], [2, 17], [11, 10], [19], [3, 4], [16, 5], [1, 13], [15, 11], [18, 10], [12, 14], [19], [6], [9], [16, 5], [12, 1], [15, 11], [4, 18], [3], [7], [16], [19, 1], [8, 17], [9, 5], [12, 14], [4, 18], [19], [12], [0], [10], [14, 6], [3, 5], [7, 15], [13, 9], [2, 8], [5], [9], [0], [13], [19, 3], [12, 7], [4, 18], [16, 15], [17], [14], [0, 19], [1, 13], [6, 8], [16, 15], [18, 10], [19], [6], [17], [13], [1, 3], [0, 12], [5, 4], [0, 19], [11, 10], [1, 13], [16, 4], [8, 15], [3, 5], [14, 7], [0], [15, 10], [6, 2], [14, 7], [13, 9], [11, 18], [19, 1], [0], [11], [10], [8], [14, 1], [19, 13], [15, 18], [6, 2], [7, 16], [0], [15, 10], [12, 14], [7, 8], [9, 5], [0], [3], [10], [12, 14], [7, 15], [2, 17], [16, 4], [19, 1], [0], [4], [15], [1, 13], [7, 16], [3, 5], [8, 17], [18, 10], [0], [4], [15, 10], [9, 5], [13, 3], [2, 8], [14, 1], [0], [6], [9], [2], [11, 10], [3, 4], [19, 13], [7, 16], [15, 18], [0], [8], [14, 6], [3, 5], [7, 15], [13, 9], [11, 10], [14], [6], [0, 19], [11, 18], [7, 16], [12, 1], [8, 17], [15, 10], [0], [15], [9], [16], [19, 1], [8, 17], [6, 2], [18, 10], [0], [2], [17, 11], [13, 3], [14, 6], [8, 16], [0, 19], [2, 17], [16, 15], [12, 7], [13, 9], [3, 4], [0], [15], [6], [18, 10], [2, 17], [16, 4], [7, 8], [11], [0, 12], [8, 15], [13, 3], [1, 7], [5, 4], [6, 2], [12], [8, 17], [3, 5], [14, 6], [15, 18], [13, 9], [12, 7], [6, 17], [3, 4], [16, 15], [12], [0], [17, 11], [3, 5], [16, 4], [18, 10], [19, 1], [12], [8], [19, 3], [1, 13], [16, 4], [6, 2], [12, 1], [8, 16], [2, 17], [11, 10], [5, 4], [14, 6], [15], [12, 14], [13, 9], [6, 2], [11, 10], [7, 8], [16, 4], [3, 5], [12], [4], [8, 17], [3, 16], [7, 15], [11, 10], [13], [14], [0, 12], [5, 4], [19, 3], [1, 7], [15, 11], [8, 17], [18, 10], [6, 2], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[6, 10]
[5, 12]
[13, 18]
[22, 29]
[25, 34]
[24, 41]
[30, 42]
[49, 56]
[59, 66]
[50, 70]
[77, 84]
[78, 85]
[102, 110]
[104, 112]
[106, 120]
[113, 121]
[121, 137]
[138, 144]
[159, 163]
[162, 174]
[178, 184]
[193, 211]
[208, 219]
[211, 224]
[226, 233]
[235, 251]
[243, 252]
[246, 267]
[264, 275]
[276, 283]
[288, 295]
[295, 304]
[301, 312]
[294, 314]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[0, 8]
[8, 14]
[35, 43]
[43, 51]
[80, 87]
[87, 93]
[93, 100]
[100, 107]
[124, 133]
[139, 148]
[160, 167]
[167, 176]
[176, 181]
[181, 189]
[189, 197]
[190, 198]
[197, 204]
[204, 213]
[228, 236]
[272, 279]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[91, 99, 104]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 

[134, 142, 149]
[169, 177, 183]

------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[18, 26, 32]
[61, 69, 74]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[0, 8]
[8, 14]
[35, 43]
[43, 51]
[80, 87]
[87, 93]
[93, 100]
[100, 107]
[124, 133]
[139, 148]
[160, 167]
[167, 176]
[176, 181]
[181, 189]
[189, 197]
[190, 198]
[197, 204]
[204, 213]
[228, 236]
[272, 279]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[6, 10]
[5, 12]
[13, 18]
[22, 29]
[25, 34]
[24, 41]
[30, 42]
[49, 56]
[59, 66]
[50, 70]
[77, 84]
[78, 85]
[102, 110]
[104, 112]
[106, 120]
[113, 121]
[121, 137]
[138, 144]
[159, 163]
[162, 174]
[178, 184]
[193, 211]
[208, 219]
[211, 224]
[226, 233]
[235, 251]
[243, 252]
[246, 267]
[264, 275]
[276, 283]
[288, 295]
[295, 304]
[301, 312]
[294, 314]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.3905811309814453

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 8] xx => I, Pos: [0, 8] xx => I, Pos: [5, 12] cc => I, Pos: [5, 12] cc => I, Pos: [6, 10] cc => I, Pos: [6, 10] cc => I, Pos: [8, 14] xx => I, Pos: [8, 14] xx => I, Pos: [13, 18] cc => I, Pos: [13, 18] cc => I, Pos: [18, 26, 32] ccc => cc, Pos: [22, 29] cc => I, Pos: [22, 29] cc => I, Pos: [24, 41] cc => I, Pos: [24, 41] cc => I, Pos: [25, 34] cc => I, Pos: [25, 34] cc => I, Pos: [30, 42] cc => I, Pos: [30, 42] cc => I, Pos: [35, 43] xx => I, Pos: [35, 43] xx => I, Pos: [43, 51] xx => I, Pos: [43, 51] xx => I, Pos: [49, 56] cc => I, Pos: [49, 56] cc => I, Pos: [50, 70] cc => I, Pos: [50, 70] cc => I, Pos: [59, 66] cc => I, Pos: [59, 66] cc => I, Pos: [61, 69, 74] ccc => cc, Pos: [77, 84] cc => I, Pos: [77, 84] cc => I, Pos: [78, 85] cc => I, Pos: [78, 85] cc => I, Pos: [80, 87] xx => I, Pos: [80, 87] xx => I, Pos: [87, 93] xx => I, Pos: [87, 93] xx => I, Pos: [91, 99, 104] ccc => cc, Pos: [93, 100] xx => I, Pos: [93, 100] xx => I, Pos: [100, 107] xx => I, Pos: [100, 107] xx => I, Pos: [102, 110] cc => I, Pos: [102, 110] cc => I, Pos: [104, 112] cc => I, Pos: [104, 112] cc => I, Pos: [106, 120] cc => I, Pos: [106, 120] cc => I, Pos: [113, 121] cc => I, Pos: [113, 121] cc => I, Pos: [121, 137] cc => I, Pos: [121, 137] cc => I, Pos: [124, 133] xx => I, Pos: [124, 133] xx => I, Pos: [134, 142, 149] xcx => c, Pos: [138, 144] cc => I, Pos: [138, 144] cc => I, Pos: [139, 148] xx => I, Pos: [139, 148] xx => I, Pos: [159, 163] cc => I, Pos: [159, 163] cc => I, Pos: [160, 167] xx => I, Pos: [160, 167] xx => I, Pos: [162, 174] cc => I, Pos: [162, 174] cc => I, Pos: [167, 176] xx => I, Pos: [167, 176] xx => I, Pos: [169, 177, 183] xcx => c, Pos: [176, 181] xx => I, Pos: [176, 181] xx => I, Pos: [178, 184] cc => I, Pos: [178, 184] cc => I, Pos: [181, 189] xx => I, Pos: [181, 189] xx => I, Pos: [189, 197] xx => I, Pos: [189, 197] xx => I, Pos: [190, 198] xx => I, Pos: [190, 198] xx => I, Pos: [193, 211] cc => I, Pos: [193, 211] cc => I, Pos: [197, 204] xx => I, Pos: [197, 204] xx => I, Pos: [204, 213] xx => I, Pos: [204, 213] xx => I, Pos: [208, 219] cc => I, Pos: [208, 219] cc => I, Pos: [211, 224] cc => I, Pos: [211, 224] cc => I, Pos: [226, 233] cc => I, Pos: [226, 233] cc => I, Pos: [228, 236] xx => I, Pos: [228, 236] xx => I, Pos: [235, 251] cc => I, Pos: [235, 251] cc => I, Pos: [243, 252] cc => I, Pos: [243, 252] cc => I, Pos: [246, 267] cc => I, Pos: [246, 267] cc => I, Pos: [264, 275] cc => I, Pos: [264, 275] cc => I, Pos: [272, 279] xx => I, Pos: [272, 279] xx => I, Pos: [276, 283] cc => I, Pos: [276, 283] cc => I, Pos: [288, 295] cc => I, Pos: [288, 295] cc => I, Pos: [294, 314] cc => I, Pos: [294, 314] cc => I, Pos: [295, 304] cc => I, Pos: [295, 304] cc => I, Pos: [301, 312] cc => I, Pos: [301, 312] cc => I]

Plan: 1
[Pos: [0, 8] xx => I,
 Pos: [5, 12] cc => I,
 Pos: [6, 10] cc => I,
 Pos: [13, 18] cc => I,
 Pos: [22, 29] cc => I,
 Pos: [24, 41] cc => I,
 Pos: [25, 34] cc => I,
 Pos: [30, 42] cc => I,
 Pos: [35, 43] xx => I,
 Pos: [49, 56] cc => I,
 Pos: [50, 70] cc => I,
 Pos: [59, 66] cc => I,
 Pos: [61, 69, 74] ccc => cc,
 Pos: [77, 84] cc => I,
 Pos: [78, 85] cc => I,
 Pos: [80, 87] xx => I,
 Pos: [91, 99, 104] ccc => cc,
 Pos: [93, 100] xx => I,
 Pos: [102, 110] cc => I,
 Pos: [106, 120] cc => I,
 Pos: [113, 121] cc => I,
 Pos: [124, 133] xx => I,
 Pos: [134, 142, 149] xcx => c,
 Pos: [138, 144] cc => I,
 Pos: [139, 148] xx => I,
 Pos: [159, 163] cc => I,
 Pos: [160, 167] xx => I,
 Pos: [162, 174] cc => I,
 Pos: [169, 177, 183] xcx => c,
 Pos: [176, 181] xx => I,
 Pos: [178, 184] cc => I,
 Pos: [189, 197] xx => I,
 Pos: [190, 198] xx => I,
 Pos: [193, 211] cc => I,
 Pos: [204, 213] xx => I,
 Pos: [208, 219] cc => I,
 Pos: [226, 233] cc => I,
 Pos: [228, 236] xx => I,
 Pos: [235, 251] cc => I,
 Pos: [243, 252] cc => I,
 Pos: [246, 267] cc => I,
 Pos: [264, 275] cc => I,
 Pos: [272, 279] xx => I,
 Pos: [276, 283] cc => I,
 Pos: [288, 295] cc => I,
 Pos: [294, 314] cc => I,
 Pos: [301, 312] cc => I]
Change: 47, Saving: 47

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.10936641693115234

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 8] xx => I,
 Pos: [5, 12] cc => I,
 Pos: [6, 10] cc => I,
 Pos: [13, 18] cc => I,
 Pos: [22, 29] cc => I,
 Pos: [24, 41] cc => I,
 Pos: [25, 34] cc => I,
 Pos: [30, 42] cc => I,
 Pos: [35, 43] xx => I,
 Pos: [49, 56] cc => I,
 Pos: [50, 70] cc => I,
 Pos: [59, 66] cc => I,
 Pos: [61, 69, 74] ccc => cc,
 Pos: [77, 84] cc => I,
 Pos: [78, 85] cc => I,
 Pos: [80, 87] xx => I,
 Pos: [91, 99, 104] ccc => cc,
 Pos: [93, 100] xx => I,
 Pos: [102, 110] cc => I,
 Pos: [106, 120] cc => I,
 Pos: [113, 121] cc => I,
 Pos: [124, 133] xx => I,
 Pos: [134, 142, 149] xcx => c,
 Pos: [138, 144] cc => I,
 Pos: [139, 148] xx => I,
 Pos: [159, 163] cc => I,
 Pos: [160, 167] xx => I,
 Pos: [162, 174] cc => I,
 Pos: [169, 177, 183] xcx => c,
 Pos: [176, 181] xx => I,
 Pos: [178, 184] cc => I,
 Pos: [189, 197] xx => I,
 Pos: [190, 198] xx => I,
 Pos: [193, 211] cc => I,
 Pos: [204, 213] xx => I,
 Pos: [208, 219] cc => I,
 Pos: [226, 233] cc => I,
 Pos: [228, 236] xx => I,
 Pos: [235, 251] cc => I,
 Pos: [243, 252] cc => I,
 Pos: [246, 267] cc => I,
 Pos: [264, 275] cc => I,
 Pos: [272, 279] xx => I,
 Pos: [276, 283] cc => I,
 Pos: [288, 295] cc => I,
 Pos: [294, 314] cc => I,
 Pos: [301, 312] cc => I]
Change: 47, Saving: 47

Circuit before: xxccccccxxccccxxccccxxccccccxccccccxxxcccccxxxxxcccxxcccccxccccccxcccccxccccccccxxcccccxxccccxccccccxccccccxxxccccxxxcccccxxxxcccccxxxxccccxxcccccxxxxccccccccccxccccccxxxxcccccxccccxxxcccccxxxcccccxxcccccxxxxcccccxxcccccxxccccccxxxxccccxxccccccccccxxxccccxccccccxcccccccccxxcccccxxccccccccccxcccccccxxccccxxcccccccc
---------------
Apply:  Pos: [0, 8] xx => I
Apply:  Pos: [5, 12] cc => I
Apply:  Pos: [6, 10] cc => I
Apply:  Pos: [13, 18] cc => I
Apply:  Pos: [22, 29] cc => I
Apply:  Pos: [24, 41] cc => I
Apply:  Pos: [25, 34] cc => I
Apply:  Pos: [30, 42] cc => I
Apply:  Pos: [35, 43] xx => I
Apply:  Pos: [49, 56] cc => I
Apply:  Pos: [50, 70] cc => I
Apply:  Pos: [59, 66] cc => I
Apply:  Pos: [61, 69, 74] ccc => cc
Apply:  Pos: [77, 84] cc => I
Apply:  Pos: [78, 85] cc => I
Apply:  Pos: [80, 87] xx => I
Apply:  Pos: [91, 99, 104] ccc => cc
Apply:  Pos: [93, 100] xx => I
Apply:  Pos: [102, 110] cc => I
Apply:  Pos: [106, 120] cc => I
Apply:  Pos: [113, 121] cc => I
Apply:  Pos: [124, 133] xx => I
Apply:  Pos: [134, 142, 149] xcx => c
Apply:  Pos: [138, 144] cc => I
Apply:  Pos: [139, 148] xx => I
Apply:  Pos: [159, 163] cc => I
Apply:  Pos: [160, 167] xx => I
Apply:  Pos: [162, 174] cc => I
Apply:  Pos: [169, 177, 183] xcx => c
Apply:  Pos: [176, 181] xx => I
Apply:  Pos: [178, 184] cc => I
Apply:  Pos: [189, 197] xx => I
Apply:  Pos: [190, 198] xx => I
Apply:  Pos: [193, 211] cc => I
Apply:  Pos: [204, 213] xx => I
Apply:  Pos: [208, 219] cc => I
Apply:  Pos: [226, 233] cc => I
Apply:  Pos: [228, 236] xx => I
Apply:  Pos: [235, 251] cc => I
Apply:  Pos: [243, 252] cc => I
Apply:  Pos: [246, 267] cc => I
Apply:  Pos: [264, 275] cc => I
Apply:  Pos: [272, 279] xx => I
Apply:  Pos: [276, 283] cc => I
Apply:  Pos: [288, 295] cc => I
Apply:  Pos: [294, 314] cc => I
Apply:  Pos: [301, 312] cc => I
---------------
Circuit after: xccccxcxxcccxxcccxcccxxcccxxxxcxxccccxcccccxcccxcccccxcccxcccccccccccccxxxccxxxcccxxxcccccxxccccxcccxxcccccccccccccxcxccccccxccccxcccccccccxxxcccxccccxxcccccxxxccxccccccccxxxccxccccccxcccccccxcccxccccccccxcccccxxcccxxcccccc

--------End Timer [apply mapping plan]:  0.0

[18], [1, 13], [6, 8], [12, 7], [3, 16], [17], [6, 2], [19], [10], [0, 12], [15, 18], [2, 8], [3], [16], [4, 18], [12, 1], [8, 15], [4], [15, 18], [1, 7], [13, 3], [6], [14], [7, 8], [1, 13], [16, 4], [17], [1], [7], [3], [8, 15], [19], [11], [3, 16], [2, 8], [12, 14], [15, 10], [18], [6, 8], [17, 11], [7, 15], [14, 1], [3, 5], [2], [8, 16], [1, 7], [11, 10], [19], [9, 5], [12, 7], [16, 15], [19, 3], [5, 4], [12], [1, 7], [16, 5], [6, 2], [13], [7, 16], [14, 1], [15, 10], [8, 17], [12, 7], [14, 6], [13, 9], [1, 3], [2, 17], [11, 10], [3, 4], [1, 13], [18, 10], [19], [6], [9], [12, 1], [15, 11], [3], [7], [16], [19, 1], [8, 17], [9, 5], [19], [12], [10], [14, 6], [3, 5], [7, 15], [13, 9], [2, 8], [5], [9], [1, 13], [19, 3], [12, 7], [4, 18], [14], [0, 19], [6, 8], [18, 10], [19], [6], [1, 3], [0, 12], [5, 4], [0, 19], [11, 10], [1, 13], [16, 4], [8, 15], [3, 5], [15, 10], [13, 9], [11, 18], [19, 1], [11], [15, 10], [8], [14, 1], [19, 13], [15, 18], [7, 16], [7, 8], [9, 5], [3], [7, 15], [2, 17], [16, 4], [19, 1], [15], [1, 13], [3, 5], [8, 17], [18, 10], [15, 10], [9, 5], [13, 3], [2, 8], [14, 1], [6], [9], [2], [3, 4], [19, 13], [15, 18], [8], [14, 6], [3, 5], [7, 15], [13, 9], [14], [6], [0, 19], [11, 18], [7, 16], [12, 1], [15, 10], [15], [9], [16], [19, 1], [6, 2], [2], [17, 11], [13, 3], [14, 6], [8, 16], [0, 19], [16, 15], [12, 7], [3, 4], [0], [15], [6], [16, 4], [7, 8], [11], [0, 12], [8, 15], [13, 3], [1, 7], [5, 4], [6, 2], [12], [8, 17], [14, 6], [15, 18], [12, 7], [6, 17], [3, 4], [16, 15], [0], [17, 11], [18, 10], [19, 1], [8], [19, 3], [1, 13], [6, 2], [12, 1], [8, 16], [2, 17], [5, 4], [14, 6], [15], [12, 14], [13, 9], [7, 8], [16, 4], [3, 5], [12], [4], [3, 16], [7, 15], [11, 10], [13], [14], [0, 12], [5, 4], [19, 3], [1, 7], [15, 11], [18, 10], ----End Timer [Execute Mapping]:  2.4999475479125977

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[92, 107]
[111, 116]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[5, 26]
[7, 31]
[31, 47]
[101, 139]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[108, 122, 127]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[5, 26]
[7, 31]
[31, 47]
[101, 139]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[92, 107]
[111, 116]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.7343711853027344

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [5, 26] xx => I, Pos: [5, 26] xx => I, Pos: [7, 31] xx => I, Pos: [7, 31] xx => I, Pos: [31, 47] xx => I, Pos: [31, 47] xx => I, Pos: [92, 107] cc => I, Pos: [92, 107] cc => I, Pos: [101, 139] xx => I, Pos: [101, 139] xx => I, Pos: [108, 122, 127] ccc => cc, Pos: [111, 116] cc => I, Pos: [111, 116] cc => I]

Plan: 1
[Pos: [5, 26] xx => I,
 Pos: [7, 31] xx => I,
 Pos: [92, 107] cc => I,
 Pos: [101, 139] xx => I,
 Pos: [108, 122, 127] ccc => cc,
 Pos: [111, 116] cc => I]
Change: 6, Saving: 6

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.015636920928955078

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [5, 26] xx => I,
 Pos: [7, 31] xx => I,
 Pos: [92, 107] cc => I,
 Pos: [101, 139] xx => I,
 Pos: [108, 122, 127] ccc => cc,
 Pos: [111, 116] cc => I]
Change: 6, Saving: 6

Circuit before: xccccxcxxcccxxcccxcccxxcccxxxxcxxccccxcccccxcccxcccccxcccxcccccccccccccxxxccxxxcccxxxcccccxxccccxcccxxcccccccccccccxcxccccccxccccxcccccccccxxxcccxccccxxcccccxxxccxccccccccxxxccxccccccxcccccccxcccxccccccccxcccccxxcccxxcccccc
---------------
Apply:  Pos: [5, 26] xx => I
Apply:  Pos: [7, 31] xx => I
Apply:  Pos: [92, 107] cc => I
Apply:  Pos: [101, 139] xx => I
Apply:  Pos: [108, 122, 127] ccc => cc
Apply:  Pos: [111, 116] cc => I
---------------
Circuit after: xcccccxcccxxcccxcccxxcccxxxcxccccxcccccxcccxcccccxcccxcccccccccccccxxxccxxxcccxxxcccccxxcccxcccxcccccccccccxxccccccxcccxcccccccccxxcccxccccxxcccccxxxccxccccccccxxxccxccccccxcccccccxcccxccccccccxcccccxxcccxxcccccc

--------End Timer [apply mapping plan]:  0.0

[18], [1, 13], [6, 8], [12, 7], [3, 16], [6, 2], [10], [0, 12], [15, 18], [2, 8], [3], [16], [4, 18], [12, 1], [8, 15], [4], [15, 18], [1, 7], [13, 3], [6], [14], [7, 8], [1, 13], [16, 4], [1], [7], [3], [8, 15], [11], [3, 16], [2, 8], [12, 14], [15, 10], [18], [6, 8], [17, 11], [7, 15], [14, 1], [3, 5], [2], [8, 16], [1, 7], [11, 10], [19], [9, 5], [12, 7], [16, 15], [19, 3], [5, 4], [12], [1, 7], [16, 5], [6, 2], [13], [7, 16], [14, 1], [15, 10], [8, 17], [12, 7], [14, 6], [13, 9], [1, 3], [2, 17], [11, 10], [3, 4], [1, 13], [18, 10], [19], [6], [9], [12, 1], [15, 11], [3], [7], [16], [19, 1], [8, 17], [9, 5], [19], [12], [10], [14, 6], [3, 5], [7, 15], [13, 9], [2, 8], [5], [9], [19, 3], [12, 7], [4, 18], [14], [0, 19], [6, 8], [18, 10], [19], [1, 3], [0, 12], [5, 4], [0, 19], [11, 10], [7, 16], [8, 15], [3, 5], [13, 9], [11, 18], [19, 1], [11], [8], [14, 1], [19, 13], [15, 18], [7, 8], [16, 4], [9, 5], [3], [7, 15], [2, 17], [19, 1], [15], [1, 13], [3, 5], [8, 17], [15, 10], [18, 10], [9, 5], [13, 3], [2, 8], [14, 1], [9], [2], [3, 4], [19, 13], [15, 18], [8], [14, 6], [3, 5], [7, 15], [13, 9], [14], [6], [0, 19], [11, 18], [7, 16], [12, 1], [15, 10], [15], [9], [16], [19, 1], [6, 2], [2], [17, 11], [13, 3], [14, 6], [8, 16], [0, 19], [16, 15], [12, 7], [3, 4], [0], [15], [6], [16, 4], [7, 8], [11], [0, 12], [8, 15], [13, 3], [1, 7], [5, 4], [6, 2], [12], [8, 17], [14, 6], [15, 18], [12, 7], [6, 17], [3, 4], [16, 15], [0], [17, 11], [18, 10], [19, 1], [8], [19, 3], [1, 13], [6, 2], [12, 1], [8, 16], [2, 17], [5, 4], [14, 6], [15], [12, 14], [13, 9], [7, 8], [16, 4], [3, 5], [12], [4], [3, 16], [7, 15], [11, 10], [13], [14], [0, 12], [5, 4], [19, 3], [1, 7], [15, 11], [18, 10], ----End Timer [Execute Mapping]:  1.7500081062316895

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[94, 100, 105]
[123, 124, 133]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.6720850467681885

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [94, 100, 105] ccc => cc, Pos: [123, 124, 133] ccc => cc]

Plan: 1
[Pos: [94, 100, 105] ccc => cc, Pos: [123, 124, 133] ccc => cc]
Change: 2, Saving: 3

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.015518903732299805

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [94, 100, 105] ccc => cc, Pos: [123, 124, 133] ccc => cc]
Change: 2, Saving: 3

Circuit before: xcccccxcccxxcccxcccxxcccxxxcxccccxcccccxcccxcccccxcccxcccccccccccccxxxccxxxcccxxxcccccxxcccxcccxcccccccccccxxccccccxcccxcccccccccxxcccxccccxxcccccxxxccxccccccccxxxccxccccccxcccccccxcccxccccccccxcccccxxcccxxcccccc
---------------
Apply:  Pos: [94, 100, 105] ccc => cc
Apply:  Pos: [123, 124, 133] ccc => cc
---------------
Circuit after: xcccccxcccxxcccxcccxxcccxxxcxccccxcccccxcccxcccccxcccxcccccccccccccxxxccxxxcccxxxcccccxxcccxcccxccccccccccxxccccccxcccxcccccccccxxccxccccxxcccccxxxccxccccccccxxxccxccccccxcccccccxcccxccccccccxcccccxxcccxxcccccc

--------End Timer [apply mapping plan]:  0.0

[18], [1, 13], [6, 8], [12, 7], [3, 16], [6, 2], [10], [0, 12], [15, 18], [2, 8], [3], [16], [4, 18], [12, 1], [8, 15], [4], [15, 18], [1, 7], [13, 3], [6], [14], [7, 8], [1, 13], [16, 4], [1], [7], [3], [8, 15], [11], [3, 16], [2, 8], [12, 14], [15, 10], [18], [6, 8], [17, 11], [7, 15], [14, 1], [3, 5], [2], [8, 16], [1, 7], [11, 10], [19], [9, 5], [12, 7], [16, 15], [19, 3], [5, 4], [12], [1, 7], [16, 5], [6, 2], [13], [7, 16], [14, 1], [15, 10], [8, 17], [12, 7], [14, 6], [13, 9], [1, 3], [2, 17], [11, 10], [3, 4], [1, 13], [18, 10], [19], [6], [9], [12, 1], [15, 11], [3], [7], [16], [19, 1], [8, 17], [9, 5], [19], [12], [10], [14, 6], [3, 5], [7, 15], [13, 9], [2, 8], [5], [9], [19, 3], [12, 7], [4, 18], [14], [0, 19], [6, 8], [11, 18], [19], [1, 3], [0, 12], [5, 4], [0, 19], [18, 10], [7, 16], [8, 15], [3, 5], [13, 9], [19, 1], [11], [8], [14, 1], [19, 13], [15, 18], [7, 8], [16, 4], [9, 5], [3], [7, 15], [2, 17], [19, 1], [15], [1, 13], [3, 5], [8, 17], [15, 18], [18, 10], [9, 5], [13, 3], [2, 8], [14, 1], [9], [2], [3, 4], [19, 13], [8], [14, 6], [3, 5], [7, 15], [13, 9], [14], [6], [0, 19], [11, 18], [7, 16], [12, 1], [15, 10], [15], [9], [16], [19, 1], [6, 2], [2], [17, 11], [13, 3], [14, 6], [8, 16], [0, 19], [16, 15], [12, 7], [3, 4], [0], [15], [6], [16, 4], [7, 8], [11], [0, 12], [8, 15], [13, 3], [1, 7], [5, 4], [6, 2], [12], [8, 17], [14, 6], [15, 18], [12, 7], [6, 17], [3, 4], [16, 15], [0], [17, 11], [18, 10], [19, 1], [8], [19, 3], [1, 13], [6, 2], [12, 1], [8, 16], [2, 17], [5, 4], [14, 6], [15], [12, 14], [13, 9], [7, 8], [16, 4], [3, 5], [12], [4], [3, 16], [7, 15], [11, 10], [13], [14], [0, 12], [5, 4], [19, 3], [1, 7], [15, 11], [18, 10], ----End Timer [Execute Mapping]:  1.6876039505004883

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.64064621925354

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

..........

Total Plans: 0

--------End Timer [Generate Plans]:  0.0

There's no mapping plan.
[18], [1, 13], [6, 8], [12, 7], [3, 16], [6, 2], [10], [0, 12], [15, 18], [2, 8], [3], [16], [4, 18], [12, 1], [8, 15], [4], [15, 18], [1, 7], [13, 3], [6], [14], [7, 8], [1, 13], [16, 4], [1], [7], [3], [8, 15], [11], [3, 16], [2, 8], [12, 14], [15, 10], [18], [6, 8], [17, 11], [7, 15], [14, 1], [3, 5], [2], [8, 16], [1, 7], [11, 10], [19], [9, 5], [12, 7], [16, 15], [19, 3], [5, 4], [12], [1, 7], [16, 5], [6, 2], [13], [7, 16], [14, 1], [15, 10], [8, 17], [12, 7], [14, 6], [13, 9], [1, 3], [2, 17], [11, 10], [3, 4], [1, 13], [18, 10], [19], [6], [9], [12, 1], [15, 11], [3], [7], [16], [19, 1], [8, 17], [9, 5], [19], [12], [10], [14, 6], [3, 5], [7, 15], [13, 9], [2, 8], [5], [9], [19, 3], [12, 7], [4, 18], [14], [0, 19], [6, 8], [11, 18], [19], [1, 3], [0, 12], [5, 4], [0, 19], [18, 10], [7, 16], [8, 15], [3, 5], [13, 9], [19, 1], [11], [8], [14, 1], [19, 13], [15, 18], [7, 8], [16, 4], [9, 5], [3], [7, 15], [2, 17], [19, 1], [15], [1, 13], [3, 5], [8, 17], [15, 18], [18, 10], [9, 5], [13, 3], [2, 8], [14, 1], [9], [2], [3, 4], [19, 13], [8], [14, 6], [3, 5], [7, 15], [13, 9], [14], [6], [0, 19], [11, 18], [7, 16], [12, 1], [15, 10], [15], [9], [16], [19, 1], [6, 2], [2], [17, 11], [13, 3], [14, 6], [8, 16], [0, 19], [16, 15], [12, 7], [3, 4], [0], [15], [6], [16, 4], [7, 8], [11], [0, 12], [8, 15], [13, 3], [1, 7], [5, 4], [6, 2], [12], [8, 17], [14, 6], [15, 18], [12, 7], [6, 17], [3, 4], [16, 15], [0], [17, 11], [18, 10], [19, 1], [8], [19, 3], [1, 13], [6, 2], [12, 1], [8, 16], [2, 17], [5, 4], [14, 6], [15], [12, 14], [13, 9], [7, 8], [16, 4], [3, 5], [12], [4], [3, 16], [7, 15], [11, 10], [13], [14], [0, 12], [5, 4], [19, 3], [1, 7], [15, 11], [18, 10], ----End Timer [Execute Mapping]:  1.64064621925354

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: x-x-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-x-x-x-x-x-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [315] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx,x]
 - circuit depth: 45 - (small)
 - circuit cycle: 540


>> Solved circuit: 
Circuit Info: 
 - circuit: x-cx-cx-cx-cx-cx-x-cx-cx-cx-x-x-cx-cx-cx-x-cx-cx-cx-x-x-cx-cx-cx-x-x-x-cx-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-cx-cx-cx-x-cx-cx-cx-cx-cx-x-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-x-x-x-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-x-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-x-x-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-x-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx 
     => total size: [210] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx,x]
 - circuit depth: 39 - (small)
 - circuit cycle: 366

Reduced: 
 - size: 105 (33.33%)
 - depth: 6 (13.33%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.12499213218688965

[19], [18], [1, 13], [6, 8], [12, 7], [15, 11], [5, 4], [3, 16], [19], [17], [5, 4], [6, 2], [15, 11], [1, 7], [19], [10], [0, 12], [15, 18], [1, 7], [2, 8], [3], [16], [0, 19], [4, 18], [9, 5], [2, 17], [12, 1], [8, 15], [4], [0, 19], [11, 10], [15, 18], [1, 7], [13, 3], [2, 17], [19], [6], [14], [7, 8], [1, 13], [16, 4], [9, 5], [11, 10], [19], [17], [1], [7], [3], [8, 15], [4, 18], [13, 9], [19], [11], [3, 16], [2, 8], [12, 14], [4, 18], [15, 10], [18], [0, 19], [6, 8], [11, 10], [7, 15], [14, 1], [3, 5], [2], [0, 19], [8, 16], [1, 7], [17, 11], [13, 9], [19], [9, 5], [12, 7], [11, 10], [16, 15], [19, 3], [11, 18], [8, 15], [5, 4], [19], [12], [1, 7], [16, 5], [11, 18], [8, 15], [6, 2], [19], [13], [7, 16], [14, 1], [15, 11], [8, 17], [19], [12, 7], [14, 6], [13, 9], [1, 3], [2, 17], [11, 10], [19], [3, 4], [16, 5], [1, 13], [15, 11], [18, 10], [12, 14], [19], [6], [9], [16, 5], [12, 1], [15, 11], [4, 18], [3], [7], [16], [19, 1], [8, 17], [9, 5], [12, 14], [4, 18], [19], [12], [0], [10], [14, 6], [3, 5], [7, 15], [13, 9], [2, 8], [5], [9], [0], [13], [19, 3], [12, 7], [4, 18], [16, 15], [17], [14], [0, 19], [1, 13], [6, 8], [16, 15], [18, 10], [19], [6], [17], [13], [1, 3], [0, 12], [5, 4], [0, 19], [11, 10], [1, 13], [16, 4], [8, 15], [3, 5], [14, 7], [0], [15, 10], [6, 2], [14, 7], [13, 9], [11, 18], [19, 1], [0], [11], [10], [8], [14, 1], [19, 13], [15, 18], [6, 2], [7, 16], [0], [15, 10], [12, 14], [7, 8], [9, 5], [0], [3], [10], [12, 14], [7, 15], [2, 17], [16, 4], [19, 1], [0], [4], [15], [1, 13], [7, 16], [3, 5], [8, 17], [18, 10], [0], [4], [15, 10], [9, 5], [13, 3], [2, 8], [14, 1], [0], [6], [9], [2], [11, 10], [3, 4], [19, 13], [7, 16], [15, 18], [0], [8], [14, 6], [3, 5], [7, 15], [13, 9], [11, 10], [14], [6], [0, 19], [11, 18], [7, 16], [12, 1], [8, 17], [15, 10], [0], [15], [9], [16], [19, 1], [8, 17], [6, 2], [18, 10], [0], [2], [17, 11], [13, 3], [14, 6], [8, 16], [0, 19], [2, 17], [16, 15], [12, 7], [13, 9], [3, 4], [0], [15], [6], [18, 10], [2, 17], [16, 4], [7, 8], [11], [0, 12], [8, 15], [13, 3], [1, 7], [5, 4], [6, 2], [12], [8, 17], [3, 5], [14, 6], [15, 18], [13, 9], [12, 7], [6, 17], [3, 4], [16, 15], [12], [0], [17, 11], [3, 5], [16, 4], [18, 10], [19, 1], [12], [8], [19, 3], [1, 13], [16, 4], [6, 2], [12, 1], [8, 16], [2, 17], [11, 10], [5, 4], [14, 6], [15], [12, 14], [13, 9], [6, 2], [11, 10], [7, 8], [16, 4], [3, 5], [12], [4], [8, 17], [3, 16], [7, 15], [11, 10], [13], [14], [0, 12], [5, 4], [19, 3], [1, 7], [15, 11], [8, 17], [18, 10], [6, 2], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[6, 10]
[5, 12]
[13, 18]
[22, 29]
[25, 34]
[24, 41]
[30, 42]
[49, 56]
[59, 66]
[50, 70]
[77, 84]
[78, 85]
[102, 110]
[104, 112]
[106, 120]
[113, 121]
[121, 137]
[138, 144]
[159, 163]
[162, 174]
[178, 184]
[193, 211]
[208, 219]
[211, 224]
[226, 233]
[235, 251]
[243, 252]
[246, 267]
[264, 275]
[276, 283]
[288, 295]
[295, 304]
[301, 312]
[294, 314]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[0, 8]
[8, 14]
[35, 43]
[43, 51]
[80, 87]
[87, 93]
[93, 100]
[100, 107]
[124, 133]
[139, 148]
[160, 167]
[167, 176]
[176, 181]
[181, 189]
[189, 197]
[190, 198]
[197, 204]
[204, 213]
[228, 236]
[272, 279]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[91, 99, 104]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 

[134, 142, 149]
[169, 177, 183]

------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[18, 26, 32]
[61, 69, 74]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[0, 8]
[8, 14]
[35, 43]
[43, 51]
[80, 87]
[87, 93]
[93, 100]
[100, 107]
[124, 133]
[139, 148]
[160, 167]
[167, 176]
[176, 181]
[181, 189]
[189, 197]
[190, 198]
[197, 204]
[204, 213]
[228, 236]
[272, 279]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[6, 10]
[5, 12]
[13, 18]
[22, 29]
[25, 34]
[24, 41]
[30, 42]
[49, 56]
[59, 66]
[50, 70]
[77, 84]
[78, 85]
[102, 110]
[104, 112]
[106, 120]
[113, 121]
[121, 137]
[138, 144]
[159, 163]
[162, 174]
[178, 184]
[193, 211]
[208, 219]
[211, 224]
[226, 233]
[235, 251]
[243, 252]
[246, 267]
[264, 275]
[276, 283]
[288, 295]
[295, 304]
[301, 312]
[294, 314]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.3567299842834473

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 8] xx => I, Pos: [0, 8] xx => I, Pos: [5, 12] cc => I, Pos: [5, 12] cc => I, Pos: [6, 10] cc => I, Pos: [6, 10] cc => I, Pos: [8, 14] xx => I, Pos: [8, 14] xx => I, Pos: [13, 18] cc => I, Pos: [13, 18] cc => I, Pos: [18, 26, 32] ccc => cc, Pos: [22, 29] cc => I, Pos: [22, 29] cc => I, Pos: [24, 41] cc => I, Pos: [24, 41] cc => I, Pos: [25, 34] cc => I, Pos: [25, 34] cc => I, Pos: [30, 42] cc => I, Pos: [30, 42] cc => I, Pos: [35, 43] xx => I, Pos: [35, 43] xx => I, Pos: [43, 51] xx => I, Pos: [43, 51] xx => I, Pos: [49, 56] cc => I, Pos: [49, 56] cc => I, Pos: [50, 70] cc => I, Pos: [50, 70] cc => I, Pos: [59, 66] cc => I, Pos: [59, 66] cc => I, Pos: [61, 69, 74] ccc => cc, Pos: [77, 84] cc => I, Pos: [77, 84] cc => I, Pos: [78, 85] cc => I, Pos: [78, 85] cc => I, Pos: [80, 87] xx => I, Pos: [80, 87] xx => I, Pos: [87, 93] xx => I, Pos: [87, 93] xx => I, Pos: [91, 99, 104] ccc => cc, Pos: [93, 100] xx => I, Pos: [93, 100] xx => I, Pos: [100, 107] xx => I, Pos: [100, 107] xx => I, Pos: [102, 110] cc => I, Pos: [102, 110] cc => I, Pos: [104, 112] cc => I, Pos: [104, 112] cc => I, Pos: [106, 120] cc => I, Pos: [106, 120] cc => I, Pos: [113, 121] cc => I, Pos: [113, 121] cc => I, Pos: [121, 137] cc => I, Pos: [121, 137] cc => I, Pos: [124, 133] xx => I, Pos: [124, 133] xx => I, Pos: [134, 142, 149] xcx => c, Pos: [138, 144] cc => I, Pos: [138, 144] cc => I, Pos: [139, 148] xx => I, Pos: [139, 148] xx => I, Pos: [159, 163] cc => I, Pos: [159, 163] cc => I, Pos: [160, 167] xx => I, Pos: [160, 167] xx => I, Pos: [162, 174] cc => I, Pos: [162, 174] cc => I, Pos: [167, 176] xx => I, Pos: [167, 176] xx => I, Pos: [169, 177, 183] xcx => c, Pos: [176, 181] xx => I, Pos: [176, 181] xx => I, Pos: [178, 184] cc => I, Pos: [178, 184] cc => I, Pos: [181, 189] xx => I, Pos: [181, 189] xx => I, Pos: [189, 197] xx => I, Pos: [189, 197] xx => I, Pos: [190, 198] xx => I, Pos: [190, 198] xx => I, Pos: [193, 211] cc => I, Pos: [193, 211] cc => I, Pos: [197, 204] xx => I, Pos: [197, 204] xx => I, Pos: [204, 213] xx => I, Pos: [204, 213] xx => I, Pos: [208, 219] cc => I, Pos: [208, 219] cc => I, Pos: [211, 224] cc => I, Pos: [211, 224] cc => I, Pos: [226, 233] cc => I, Pos: [226, 233] cc => I, Pos: [228, 236] xx => I, Pos: [228, 236] xx => I, Pos: [235, 251] cc => I, Pos: [235, 251] cc => I, Pos: [243, 252] cc => I, Pos: [243, 252] cc => I, Pos: [246, 267] cc => I, Pos: [246, 267] cc => I, Pos: [264, 275] cc => I, Pos: [264, 275] cc => I, Pos: [272, 279] xx => I, Pos: [272, 279] xx => I, Pos: [276, 283] cc => I, Pos: [276, 283] cc => I, Pos: [288, 295] cc => I, Pos: [288, 295] cc => I, Pos: [294, 314] cc => I, Pos: [294, 314] cc => I, Pos: [295, 304] cc => I, Pos: [295, 304] cc => I, Pos: [301, 312] cc => I, Pos: [301, 312] cc => I]

--------End Timer [Generate Plans]:  0.015605688095092773

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [8, 14] xx => I,
 Pos: [5, 12] cc => I,
 Pos: [6, 10] cc => I,
 Pos: [13, 18] cc => I,
 Pos: [22, 29] cc => I,
 Pos: [24, 41] cc => I,
 Pos: [25, 34] cc => I,
 Pos: [30, 42] cc => I,
 Pos: [43, 51] xx => I,
 Pos: [49, 56] cc => I,
 Pos: [50, 70] cc => I,
 Pos: [59, 66] cc => I,
 Pos: [61, 69, 74] ccc => cc,
 Pos: [77, 84] cc => I,
 Pos: [78, 85] cc => I,
 Pos: [87, 93] xx => I,
 Pos: [104, 112] cc => I,
 Pos: [100, 107] xx => I,
 Pos: [102, 110] cc => I,
 Pos: [106, 120] cc => I,
 Pos: [113, 121] cc => I,
 Pos: [124, 133] xx => I,
 Pos: [134, 142, 149] xcx => c,
 Pos: [138, 144] cc => I,
 Pos: [139, 148] xx => I,
 Pos: [159, 163] cc => I,
 Pos: [167, 176] xx => I,
 Pos: [162, 174] cc => I,
 Pos: [169, 177, 183] xcx => c,
 Pos: [178, 184] cc => I,
 Pos: [181, 189] xx => I,
 Pos: [190, 198] xx => I,
 Pos: [193, 211] cc => I,
 Pos: [197, 204] xx => I,
 Pos: [208, 219] cc => I,
 Pos: [226, 233] cc => I,
 Pos: [228, 236] xx => I,
 Pos: [235, 251] cc => I,
 Pos: [243, 252] cc => I,
 Pos: [246, 267] cc => I,
 Pos: [264, 275] cc => I,
 Pos: [272, 279] xx => I,
 Pos: [276, 283] cc => I,
 Pos: [288, 295] cc => I,
 Pos: [294, 314] cc => I,
 Pos: [301, 312] cc => I]
Change: 46, Saving: 154

Circuit before: xxccccccxxccccxxccccxxccccccxccccccxxxcccccxxxxxcccxxcccccxccccccxcccccxccccccccxxcccccxxccccxccccccxccccccxxxccccxxxcccccxxxxcccccxxxxccccxxcccccxxxxccccccccccxccccccxxxxcccccxccccxxxcccccxxxcccccxxcccccxxxxcccccxxcccccxxccccccxxxxccccxxccccccccccxxxccccxccccccxcccccccccxxcccccxxccccccccccxcccccccxxccccxxcccccccc
---------------
Apply:  Pos: [8, 14] xx => I
Apply:  Pos: [5, 12] cc => I
Apply:  Pos: [6, 10] cc => I
Apply:  Pos: [13, 18] cc => I
Apply:  Pos: [22, 29] cc => I
Apply:  Pos: [24, 41] cc => I
Apply:  Pos: [25, 34] cc => I
Apply:  Pos: [30, 42] cc => I
Apply:  Pos: [43, 51] xx => I
Apply:  Pos: [49, 56] cc => I
Apply:  Pos: [50, 70] cc => I
Apply:  Pos: [59, 66] cc => I
Apply:  Pos: [61, 69, 74] ccc => cc
Apply:  Pos: [77, 84] cc => I
Apply:  Pos: [78, 85] cc => I
Apply:  Pos: [87, 93] xx => I
Apply:  Pos: [104, 112] cc => I
Apply:  Pos: [100, 107] xx => I
Apply:  Pos: [102, 110] cc => I
Apply:  Pos: [106, 120] cc => I
Apply:  Pos: [113, 121] cc => I
Apply:  Pos: [124, 133] xx => I
Apply:  Pos: [134, 142, 149] xcx => c
Apply:  Pos: [138, 144] cc => I
Apply:  Pos: [139, 148] xx => I
Apply:  Pos: [159, 163] cc => I
Apply:  Pos: [167, 176] xx => I
Apply:  Pos: [162, 174] cc => I
Apply:  Pos: [169, 177, 183] xcx => c
Apply:  Pos: [178, 184] cc => I
Apply:  Pos: [181, 189] xx => I
Apply:  Pos: [190, 198] xx => I
Apply:  Pos: [193, 211] cc => I
Apply:  Pos: [197, 204] xx => I
Apply:  Pos: [208, 219] cc => I
Apply:  Pos: [226, 233] cc => I
Apply:  Pos: [228, 236] xx => I
Apply:  Pos: [235, 251] cc => I
Apply:  Pos: [243, 252] cc => I
Apply:  Pos: [246, 267] cc => I
Apply:  Pos: [264, 275] cc => I
Apply:  Pos: [272, 279] xx => I
Apply:  Pos: [276, 283] cc => I
Apply:  Pos: [288, 295] cc => I
Apply:  Pos: [294, 314] cc => I
Apply:  Pos: [301, 312] cc => I
---------------
Circuit after: xxccccxcxcccxxcccxcccxxxcccxxxxcxccccxcccccxcccxcccccxxcccxcccccccccccccxxcxxxcccxxxcccccxxccccxcccxxcccccccccxccccxcxccccccxccccxcccccccccxxxcccxxccccxxcccccxxxccxccccccccxxxccxccccccxcccccccxcccxccccccccxcccccxxcccxxcccccc

--------End Timer [apply mapping plan]:  0.0

[19], [18], [1, 13], [6, 8], [12, 7], [3, 16], [17], [6, 2], [10], [0, 12], [15, 18], [2, 8], [3], [16], [4, 18], [12, 1], [8, 15], [4], [15, 18], [1, 7], [13, 3], [19], [6], [14], [7, 8], [1, 13], [16, 4], [17], [1], [7], [3], [8, 15], [11], [3, 16], [2, 8], [12, 14], [15, 10], [18], [6, 8], [17, 11], [7, 15], [14, 1], [3, 5], [2], [8, 16], [1, 7], [11, 10], [19], [9, 5], [12, 7], [16, 15], [19, 3], [5, 4], [19], [12], [1, 7], [16, 5], [6, 2], [13], [7, 16], [14, 1], [15, 11], [8, 17], [12, 7], [14, 6], [13, 9], [1, 3], [2, 17], [11, 10], [3, 4], [1, 13], [18, 10], [6], [9], [12, 1], [3], [7], [16], [19, 1], [8, 17], [9, 5], [19], [12], [10], [14, 6], [3, 5], [7, 15], [13, 9], [2, 8], [5], [9], [1, 13], [19, 3], [12, 7], [4, 18], [14], [0, 19], [6, 8], [18, 10], [19], [6], [1, 3], [0, 12], [5, 4], [0, 19], [11, 10], [1, 13], [16, 4], [8, 15], [3, 5], [0], [15, 10], [13, 9], [11, 18], [19, 1], [11], [15, 10], [8], [14, 1], [19, 13], [15, 18], [7, 16], [7, 8], [9, 5], [3], [7, 15], [2, 17], [16, 4], [19, 1], [15], [1, 13], [3, 5], [8, 17], [18, 10], [15, 10], [9, 5], [13, 3], [2, 8], [14, 1], [6], [9], [2], [3, 4], [19, 13], [15, 18], [0], [8], [14, 6], [3, 5], [7, 15], [13, 9], [14], [6], [0, 19], [11, 18], [7, 16], [12, 1], [15, 10], [15], [9], [16], [19, 1], [6, 2], [2], [17, 11], [13, 3], [14, 6], [8, 16], [0, 19], [16, 15], [12, 7], [3, 4], [0], [15], [6], [16, 4], [7, 8], [11], [0, 12], [8, 15], [13, 3], [1, 7], [5, 4], [6, 2], [12], [8, 17], [14, 6], [15, 18], [12, 7], [6, 17], [3, 4], [16, 15], [0], [17, 11], [18, 10], [19, 1], [8], [19, 3], [1, 13], [6, 2], [12, 1], [8, 16], [2, 17], [5, 4], [14, 6], [15], [12, 14], [13, 9], [7, 8], [16, 4], [3, 5], [12], [4], [3, 16], [7, 15], [11, 10], [13], [14], [0, 12], [5, 4], [19, 3], [1, 7], [15, 11], [18, 10], ----End Timer [Execute Mapping]:  2.37233567237854

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[91, 106]
[111, 116]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[0, 21]
[6, 27]
[21, 47]
[100, 139]
[110, 145]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[107, 122, 127]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[0, 21]
[6, 27]
[21, 47]
[100, 139]
[110, 145]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[91, 106]
[111, 116]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.6887240409851074

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 21] xx => I, Pos: [0, 21] xx => I, Pos: [6, 27] xx => I, Pos: [6, 27] xx => I, Pos: [21, 47] xx => I, Pos: [21, 47] xx => I, Pos: [91, 106] cc => I, Pos: [91, 106] cc => I, Pos: [100, 139] xx => I, Pos: [100, 139] xx => I, Pos: [107, 122, 127] ccc => cc, Pos: [110, 145] xx => I, Pos: [110, 145] xx => I, Pos: [111, 116] cc => I, Pos: [111, 116] cc => I]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 21] xx => I,
 Pos: [6, 27] xx => I,
 Pos: [91, 106] cc => I,
 Pos: [100, 139] xx => I,
 Pos: [107, 122, 127] ccc => cc,
 Pos: [110, 145] xx => I,
 Pos: [111, 116] cc => I]
Change: 7, Saving: 18

Circuit before: xxccccxcxcccxxcccxcccxxxcccxxxxcxccccxcccccxcccxcccccxxcccxcccccccccccccxxcxxxcccxxxcccccxxccccxcccxxcccccccccxccccxcxccccccxccccxcccccccccxxxcccxxccccxxcccccxxxccxccccccccxxxccxccccccxcccccccxcccxccccccccxcccccxxcccxxcccccc
---------------
Apply:  Pos: [0, 21] xx => I
Apply:  Pos: [6, 27] xx => I
Apply:  Pos: [91, 106] cc => I
Apply:  Pos: [100, 139] xx => I
Apply:  Pos: [107, 122, 127] ccc => cc
Apply:  Pos: [110, 145] xx => I
Apply:  Pos: [111, 116] cc => I
---------------
Circuit after: xcccccxcccxxcccxcccxxcccxxxcxccccxcccccxcccxcccccxxcccxcccccccccccccxxcxxxcccxxxcccccxxcccxcccxcccccccccccxxccccccxcccxcccccccccxxcccxccccxxcccccxxxccxccccccccxxxccxccccccxcccccccxcccxccccccccxcccccxxcccxxcccccc

--------End Timer [apply mapping plan]:  0.0

[18], [1, 13], [6, 8], [12, 7], [3, 16], [6, 2], [10], [0, 12], [15, 18], [2, 8], [3], [16], [4, 18], [12, 1], [8, 15], [4], [15, 18], [1, 7], [13, 3], [6], [14], [7, 8], [1, 13], [16, 4], [1], [7], [3], [8, 15], [11], [3, 16], [2, 8], [12, 14], [15, 10], [18], [6, 8], [17, 11], [7, 15], [14, 1], [3, 5], [2], [8, 16], [1, 7], [11, 10], [19], [9, 5], [12, 7], [16, 15], [19, 3], [5, 4], [19], [12], [1, 7], [16, 5], [6, 2], [13], [7, 16], [14, 1], [15, 11], [8, 17], [12, 7], [14, 6], [13, 9], [1, 3], [2, 17], [11, 10], [3, 4], [1, 13], [18, 10], [6], [9], [12, 1], [3], [7], [16], [19, 1], [8, 17], [9, 5], [19], [12], [10], [14, 6], [3, 5], [7, 15], [13, 9], [2, 8], [5], [9], [19, 3], [12, 7], [4, 18], [14], [0, 19], [6, 8], [18, 10], [19], [1, 3], [0, 12], [5, 4], [0, 19], [11, 10], [7, 16], [8, 15], [3, 5], [13, 9], [11, 18], [19, 1], [11], [8], [14, 1], [19, 13], [15, 18], [7, 8], [16, 4], [9, 5], [3], [7, 15], [2, 17], [19, 1], [15], [1, 13], [3, 5], [8, 17], [15, 10], [18, 10], [9, 5], [13, 3], [2, 8], [14, 1], [9], [2], [3, 4], [19, 13], [15, 18], [8], [14, 6], [3, 5], [7, 15], [13, 9], [14], [6], [0, 19], [11, 18], [7, 16], [12, 1], [15, 10], [15], [9], [16], [19, 1], [6, 2], [2], [17, 11], [13, 3], [14, 6], [8, 16], [0, 19], [16, 15], [12, 7], [3, 4], [0], [15], [6], [16, 4], [7, 8], [11], [0, 12], [8, 15], [13, 3], [1, 7], [5, 4], [6, 2], [12], [8, 17], [14, 6], [15, 18], [12, 7], [6, 17], [3, 4], [16, 15], [0], [17, 11], [18, 10], [19, 1], [8], [19, 3], [1, 13], [6, 2], [12, 1], [8, 16], [2, 17], [5, 4], [14, 6], [15], [12, 14], [13, 9], [7, 8], [16, 4], [3, 5], [12], [4], [3, 16], [7, 15], [11, 10], [13], [14], [0, 12], [5, 4], [19, 3], [1, 7], [15, 11], [18, 10], ----End Timer [Execute Mapping]:  1.6887240409851074

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[93, 99, 104]
[122, 123, 132]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.6408748626708984

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [93, 99, 104] ccc => cc, Pos: [122, 123, 132] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [93, 99, 104] ccc => cc, Pos: [122, 123, 132] ccc => cc]
Change: 2, Saving: 4

Circuit before: xcccccxcccxxcccxcccxxcccxxxcxccccxcccccxcccxcccccxxcccxcccccccccccccxxcxxxcccxxxcccccxxcccxcccxcccccccccccxxccccccxcccxcccccccccxxcccxccccxxcccccxxxccxccccccccxxxccxccccccxcccccccxcccxccccccccxcccccxxcccxxcccccc
---------------
Apply:  Pos: [93, 99, 104] ccc => cc
Apply:  Pos: [122, 123, 132] ccc => cc
---------------
Circuit after: xcccccxcccxxcccxcccxxcccxxxcxccccxcccccxcccxcccccxxcccxcccccccccccccxxcxxxcccxxxcccccxxcccxcccxccccccccccxxccccccxcccxcccccccccxxccxccccxxcccccxxxccxccccccccxxxccxccccccxcccccccxcccxccccccccxcccccxxcccxxcccccc

--------End Timer [apply mapping plan]:  0.0

[18], [1, 13], [6, 8], [12, 7], [3, 16], [6, 2], [10], [0, 12], [15, 18], [2, 8], [3], [16], [4, 18], [12, 1], [8, 15], [4], [15, 18], [1, 7], [13, 3], [6], [14], [7, 8], [1, 13], [16, 4], [1], [7], [3], [8, 15], [11], [3, 16], [2, 8], [12, 14], [15, 10], [18], [6, 8], [17, 11], [7, 15], [14, 1], [3, 5], [2], [8, 16], [1, 7], [11, 10], [19], [9, 5], [12, 7], [16, 15], [19, 3], [5, 4], [19], [12], [1, 7], [16, 5], [6, 2], [13], [7, 16], [14, 1], [15, 11], [8, 17], [12, 7], [14, 6], [13, 9], [1, 3], [2, 17], [11, 10], [3, 4], [1, 13], [18, 10], [6], [9], [12, 1], [3], [7], [16], [19, 1], [8, 17], [9, 5], [19], [12], [10], [14, 6], [3, 5], [7, 15], [13, 9], [2, 8], [5], [9], [19, 3], [12, 7], [4, 18], [14], [0, 19], [6, 8], [11, 18], [19], [1, 3], [0, 12], [5, 4], [0, 19], [18, 10], [7, 16], [8, 15], [3, 5], [13, 9], [19, 1], [11], [8], [14, 1], [19, 13], [15, 18], [7, 8], [16, 4], [9, 5], [3], [7, 15], [2, 17], [19, 1], [15], [1, 13], [3, 5], [8, 17], [15, 18], [18, 10], [9, 5], [13, 3], [2, 8], [14, 1], [9], [2], [3, 4], [19, 13], [8], [14, 6], [3, 5], [7, 15], [13, 9], [14], [6], [0, 19], [11, 18], [7, 16], [12, 1], [15, 10], [15], [9], [16], [19, 1], [6, 2], [2], [17, 11], [13, 3], [14, 6], [8, 16], [0, 19], [16, 15], [12, 7], [3, 4], [0], [15], [6], [16, 4], [7, 8], [11], [0, 12], [8, 15], [13, 3], [1, 7], [5, 4], [6, 2], [12], [8, 17], [14, 6], [15, 18], [12, 7], [6, 17], [3, 4], [16, 15], [0], [17, 11], [18, 10], [19, 1], [8], [19, 3], [1, 13], [6, 2], [12, 1], [8, 16], [2, 17], [5, 4], [14, 6], [15], [12, 14], [13, 9], [7, 8], [16, 4], [3, 5], [12], [4], [3, 16], [7, 15], [11, 10], [13], [14], [0, 12], [5, 4], [19, 3], [1, 7], [15, 11], [18, 10], ----End Timer [Execute Mapping]:  1.6408748626708984

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.6252021789550781

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: xcccccxcccxxcccxcccxxcccxxxcxccccxcccccxcccxcccccxxcccxcccccccccccccxxcxxxcccxxxcccccxxcccxcccxccccccccccxxccccccxcccxcccccccccxxccxccccxxcccccxxxccxccccccccxxxccxccccccxcccccccxcccxccccccccxcccccxxcccxxcccccc
---------------
---------------
Circuit after: xcccccxcccxxcccxcccxxcccxxxcxccccxcccccxcccxcccccxxcccxcccccccccccccxxcxxxcccxxxcccccxxcccxcccxccccccccccxxccccccxcccxcccccccccxxccxccccxxcccccxxxccxccccccccxxxccxccccccxcccccccxcccxccccccccxcccccxxcccxxcccccc

--------End Timer [apply mapping plan]:  0.0

[18], [1, 13], [6, 8], [12, 7], [3, 16], [6, 2], [10], [0, 12], [15, 18], [2, 8], [3], [16], [4, 18], [12, 1], [8, 15], [4], [15, 18], [1, 7], [13, 3], [6], [14], [7, 8], [1, 13], [16, 4], [1], [7], [3], [8, 15], [11], [3, 16], [2, 8], [12, 14], [15, 10], [18], [6, 8], [17, 11], [7, 15], [14, 1], [3, 5], [2], [8, 16], [1, 7], [11, 10], [19], [9, 5], [12, 7], [16, 15], [19, 3], [5, 4], [19], [12], [1, 7], [16, 5], [6, 2], [13], [7, 16], [14, 1], [15, 11], [8, 17], [12, 7], [14, 6], [13, 9], [1, 3], [2, 17], [11, 10], [3, 4], [1, 13], [18, 10], [6], [9], [12, 1], [3], [7], [16], [19, 1], [8, 17], [9, 5], [19], [12], [10], [14, 6], [3, 5], [7, 15], [13, 9], [2, 8], [5], [9], [19, 3], [12, 7], [4, 18], [14], [0, 19], [6, 8], [11, 18], [19], [1, 3], [0, 12], [5, 4], [0, 19], [18, 10], [7, 16], [8, 15], [3, 5], [13, 9], [19, 1], [11], [8], [14, 1], [19, 13], [15, 18], [7, 8], [16, 4], [9, 5], [3], [7, 15], [2, 17], [19, 1], [15], [1, 13], [3, 5], [8, 17], [15, 18], [18, 10], [9, 5], [13, 3], [2, 8], [14, 1], [9], [2], [3, 4], [19, 13], [8], [14, 6], [3, 5], [7, 15], [13, 9], [14], [6], [0, 19], [11, 18], [7, 16], [12, 1], [15, 10], [15], [9], [16], [19, 1], [6, 2], [2], [17, 11], [13, 3], [14, 6], [8, 16], [0, 19], [16, 15], [12, 7], [3, 4], [0], [15], [6], [16, 4], [7, 8], [11], [0, 12], [8, 15], [13, 3], [1, 7], [5, 4], [6, 2], [12], [8, 17], [14, 6], [15, 18], [12, 7], [6, 17], [3, 4], [16, 15], [0], [17, 11], [18, 10], [19, 1], [8], [19, 3], [1, 13], [6, 2], [12, 1], [8, 16], [2, 17], [5, 4], [14, 6], [15], [12, 14], [13, 9], [7, 8], [16, 4], [3, 5], [12], [4], [3, 16], [7, 15], [11, 10], [13], [14], [0, 12], [5, 4], [19, 3], [1, 7], [15, 11], [18, 10], ----End Timer [Execute Mapping]:  1.6252021789550781

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: x-x-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-x-x-x-x-x-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [315] (IBM)
 --------------------
 - qubits_num: 20, using gates: [x,cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 540


>> Solved circuit: 
Circuit Info: 
 - circuit: x-cx-cx-cx-cx-cx-x-cx-cx-cx-x-x-cx-cx-cx-x-cx-cx-cx-x-x-cx-cx-cx-x-x-x-cx-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-cx-x-x-x-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-x-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-x-x-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-x-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx 
     => total size: [209] (IBM)
 --------------------
 - qubits_num: 20, using gates: [x,cx]
 - circuit depth: 39 - (small)
 - circuit cycle: 364

Reduced: 
 - size: 106 (33.65%)
 - cycle: 176 (32.59%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.12499141693115234

[19], [18], [1, 13], [6, 8], [12, 7], [15, 11], [5, 4], [3, 16], [19], [17], [5, 4], [6, 2], [15, 11], [1, 7], [19], [10], [0, 12], [15, 18], [1, 7], [2, 8], [3], [16], [0, 19], [4, 18], [9, 5], [2, 17], [12, 1], [8, 15], [4], [0, 19], [11, 10], [15, 18], [1, 7], [13, 3], [2, 17], [19], [6], [14], [7, 8], [1, 13], [16, 4], [9, 5], [11, 10], [19], [17], [1], [7], [3], [8, 15], [4, 18], [13, 9], [19], [11], [3, 16], [2, 8], [12, 14], [4, 18], [15, 10], [18], [0, 19], [6, 8], [11, 10], [7, 15], [14, 1], [3, 5], [2], [0, 19], [8, 16], [1, 7], [17, 11], [13, 9], [19], [9, 5], [12, 7], [11, 10], [16, 15], [19, 3], [11, 18], [8, 15], [5, 4], [19], [12], [1, 7], [16, 5], [11, 18], [8, 15], [6, 2], [19], [13], [7, 16], [14, 1], [15, 11], [8, 17], [19], [12, 7], [14, 6], [13, 9], [1, 3], [2, 17], [11, 10], [19], [3, 4], [16, 5], [1, 13], [15, 11], [18, 10], [12, 14], [19], [6], [9], [16, 5], [12, 1], [15, 11], [4, 18], [3], [7], [16], [19, 1], [8, 17], [9, 5], [12, 14], [4, 18], [19], [12], [0], [10], [14, 6], [3, 5], [7, 15], [13, 9], [2, 8], [5], [9], [0], [13], [19, 3], [12, 7], [4, 18], [16, 15], [17], [14], [0, 19], [1, 13], [6, 8], [16, 15], [18, 10], [19], [6], [17], [13], [1, 3], [0, 12], [5, 4], [0, 19], [11, 10], [1, 13], [16, 4], [8, 15], [3, 5], [14, 7], [0], [15, 10], [6, 2], [14, 7], [13, 9], [11, 18], [19, 1], [0], [11], [10], [8], [14, 1], [19, 13], [15, 18], [6, 2], [7, 16], [0], [15, 10], [12, 14], [7, 8], [9, 5], [0], [3], [10], [12, 14], [7, 15], [2, 17], [16, 4], [19, 1], [0], [4], [15], [1, 13], [7, 16], [3, 5], [8, 17], [18, 10], [0], [4], [15, 10], [9, 5], [13, 3], [2, 8], [14, 1], [0], [6], [9], [2], [11, 10], [3, 4], [19, 13], [7, 16], [15, 18], [0], [8], [14, 6], [3, 5], [7, 15], [13, 9], [11, 10], [14], [6], [0, 19], [11, 18], [7, 16], [12, 1], [8, 17], [15, 10], [0], [15], [9], [16], [19, 1], [8, 17], [6, 2], [18, 10], [0], [2], [17, 11], [13, 3], [14, 6], [8, 16], [0, 19], [2, 17], [16, 15], [12, 7], [13, 9], [3, 4], [0], [15], [6], [18, 10], [2, 17], [16, 4], [7, 8], [11], [0, 12], [8, 15], [13, 3], [1, 7], [5, 4], [6, 2], [12], [8, 17], [3, 5], [14, 6], [15, 18], [13, 9], [12, 7], [6, 17], [3, 4], [16, 15], [12], [0], [17, 11], [3, 5], [16, 4], [18, 10], [19, 1], [12], [8], [19, 3], [1, 13], [16, 4], [6, 2], [12, 1], [8, 16], [2, 17], [11, 10], [5, 4], [14, 6], [15], [12, 14], [13, 9], [6, 2], [11, 10], [7, 8], [16, 4], [3, 5], [12], [4], [8, 17], [3, 16], [7, 15], [11, 10], [13], [14], [0, 12], [5, 4], [19, 3], [1, 7], [15, 11], [8, 17], [18, 10], [6, 2], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[6, 10]
[5, 12]
[13, 18]
[22, 29]
[25, 34]
[24, 41]
[30, 42]
[49, 56]
[59, 66]
[50, 70]
[77, 84]
[78, 85]
[102, 110]
[104, 112]
[106, 120]
[113, 121]
[121, 137]
[138, 144]
[159, 163]
[162, 174]
[178, 184]
[193, 211]
[208, 219]
[211, 224]
[226, 233]
[235, 251]
[243, 252]
[246, 267]
[264, 275]
[276, 283]
[288, 295]
[295, 304]
[301, 312]
[294, 314]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[0, 8]
[8, 14]
[35, 43]
[43, 51]
[80, 87]
[87, 93]
[93, 100]
[100, 107]
[124, 133]
[139, 148]
[160, 167]
[167, 176]
[176, 181]
[181, 189]
[189, 197]
[190, 198]
[197, 204]
[204, 213]
[228, 236]
[272, 279]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[91, 99, 104]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 

[134, 142, 149]
[169, 177, 183]

------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[18, 26, 32]
[61, 69, 74]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[0, 8]
[8, 14]
[35, 43]
[43, 51]
[80, 87]
[87, 93]
[93, 100]
[100, 107]
[124, 133]
[139, 148]
[160, 167]
[167, 176]
[176, 181]
[181, 189]
[189, 197]
[190, 198]
[197, 204]
[204, 213]
[228, 236]
[272, 279]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[6, 10]
[5, 12]
[13, 18]
[22, 29]
[25, 34]
[24, 41]
[30, 42]
[49, 56]
[59, 66]
[50, 70]
[77, 84]
[78, 85]
[102, 110]
[104, 112]
[106, 120]
[113, 121]
[121, 137]
[138, 144]
[159, 163]
[162, 174]
[178, 184]
[193, 211]
[208, 219]
[211, 224]
[226, 233]
[235, 251]
[243, 252]
[246, 267]
[264, 275]
[276, 283]
[288, 295]
[295, 304]
[301, 312]
[294, 314]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.405496597290039

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 8] xx => I, Pos: [0, 8] xx => I, Pos: [5, 12] cc => I, Pos: [5, 12] cc => I, Pos: [6, 10] cc => I, Pos: [6, 10] cc => I, Pos: [8, 14] xx => I, Pos: [8, 14] xx => I, Pos: [13, 18] cc => I, Pos: [13, 18] cc => I, Pos: [18, 26, 32] ccc => cc, Pos: [22, 29] cc => I, Pos: [22, 29] cc => I, Pos: [24, 41] cc => I, Pos: [24, 41] cc => I, Pos: [25, 34] cc => I, Pos: [25, 34] cc => I, Pos: [30, 42] cc => I, Pos: [30, 42] cc => I, Pos: [35, 43] xx => I, Pos: [35, 43] xx => I, Pos: [43, 51] xx => I, Pos: [43, 51] xx => I, Pos: [49, 56] cc => I, Pos: [49, 56] cc => I, Pos: [50, 70] cc => I, Pos: [50, 70] cc => I, Pos: [59, 66] cc => I, Pos: [59, 66] cc => I, Pos: [61, 69, 74] ccc => cc, Pos: [77, 84] cc => I, Pos: [77, 84] cc => I, Pos: [78, 85] cc => I, Pos: [78, 85] cc => I, Pos: [80, 87] xx => I, Pos: [80, 87] xx => I, Pos: [87, 93] xx => I, Pos: [87, 93] xx => I, Pos: [91, 99, 104] ccc => cc, Pos: [93, 100] xx => I, Pos: [93, 100] xx => I, Pos: [100, 107] xx => I, Pos: [100, 107] xx => I, Pos: [102, 110] cc => I, Pos: [102, 110] cc => I, Pos: [104, 112] cc => I, Pos: [104, 112] cc => I, Pos: [106, 120] cc => I, Pos: [106, 120] cc => I, Pos: [113, 121] cc => I, Pos: [113, 121] cc => I, Pos: [121, 137] cc => I, Pos: [121, 137] cc => I, Pos: [124, 133] xx => I, Pos: [124, 133] xx => I, Pos: [134, 142, 149] xcx => c, Pos: [138, 144] cc => I, Pos: [138, 144] cc => I, Pos: [139, 148] xx => I, Pos: [139, 148] xx => I, Pos: [159, 163] cc => I, Pos: [159, 163] cc => I, Pos: [160, 167] xx => I, Pos: [160, 167] xx => I, Pos: [162, 174] cc => I, Pos: [162, 174] cc => I, Pos: [167, 176] xx => I, Pos: [167, 176] xx => I, Pos: [169, 177, 183] xcx => c, Pos: [176, 181] xx => I, Pos: [176, 181] xx => I, Pos: [178, 184] cc => I, Pos: [178, 184] cc => I, Pos: [181, 189] xx => I, Pos: [181, 189] xx => I, Pos: [189, 197] xx => I, Pos: [189, 197] xx => I, Pos: [190, 198] xx => I, Pos: [190, 198] xx => I, Pos: [193, 211] cc => I, Pos: [193, 211] cc => I, Pos: [197, 204] xx => I, Pos: [197, 204] xx => I, Pos: [204, 213] xx => I, Pos: [204, 213] xx => I, Pos: [208, 219] cc => I, Pos: [208, 219] cc => I, Pos: [211, 224] cc => I, Pos: [211, 224] cc => I, Pos: [226, 233] cc => I, Pos: [226, 233] cc => I, Pos: [228, 236] xx => I, Pos: [228, 236] xx => I, Pos: [235, 251] cc => I, Pos: [235, 251] cc => I, Pos: [243, 252] cc => I, Pos: [243, 252] cc => I, Pos: [246, 267] cc => I, Pos: [246, 267] cc => I, Pos: [264, 275] cc => I, Pos: [264, 275] cc => I, Pos: [272, 279] xx => I, Pos: [272, 279] xx => I, Pos: [276, 283] cc => I, Pos: [276, 283] cc => I, Pos: [288, 295] cc => I, Pos: [288, 295] cc => I, Pos: [294, 314] cc => I, Pos: [294, 314] cc => I, Pos: [295, 304] cc => I, Pos: [295, 304] cc => I, Pos: [301, 312] cc => I, Pos: [301, 312] cc => I]

--------End Timer [Generate Plans]:  0.10936880111694336

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 8] xx => I,
 Pos: [5, 12] cc => I,
 Pos: [6, 10] cc => I,
 Pos: [18, 26, 32] ccc => cc,
 Pos: [22, 29] cc => I,
 Pos: [24, 41] cc => I,
 Pos: [25, 34] cc => I,
 Pos: [30, 42] cc => I,
 Pos: [35, 43] xx => I,
 Pos: [49, 56] cc => I,
 Pos: [50, 70] cc => I,
 Pos: [59, 66] cc => I,
 Pos: [61, 69, 74] ccc => cc,
 Pos: [77, 84] cc => I,
 Pos: [78, 85] cc => I,
 Pos: [87, 93] xx => I,
 Pos: [104, 112] cc => I,
 Pos: [100, 107] xx => I,
 Pos: [102, 110] cc => I,
 Pos: [106, 120] cc => I,
 Pos: [113, 121] cc => I,
 Pos: [124, 133] xx => I,
 Pos: [134, 142, 149] xcx => c,
 Pos: [138, 144] cc => I,
 Pos: [139, 148] xx => I,
 Pos: [159, 163] cc => I,
 Pos: [167, 176] xx => I,
 Pos: [162, 174] cc => I,
 Pos: [169, 177, 183] xcx => c,
 Pos: [178, 184] cc => I,
 Pos: [181, 189] xx => I,
 Pos: [190, 198] xx => I,
 Pos: [211, 224] cc => I,
 Pos: [204, 213] xx => I,
 Pos: [208, 219] cc => I,
 Pos: [226, 233] cc => I,
 Pos: [228, 236] xx => I,
 Pos: [235, 251] cc => I,
 Pos: [243, 252] cc => I,
 Pos: [246, 267] cc => I,
 Pos: [264, 275] cc => I,
 Pos: [272, 279] xx => I,
 Pos: [276, 283] cc => I,
 Pos: [288, 295] cc => I,
 Pos: [294, 314] cc => I,
 Pos: [301, 312] cc => I]
Change: 46, Saving: 46

Circuit before: xxccccccxxccccxxccccxxccccccxccccccxxxcccccxxxxxcccxxcccccxccccccxcccccxccccccccxxcccccxxccccxccccccxccccccxxxccccxxxcccccxxxxcccccxxxxccccxxcccccxxxxccccccccccxccccccxxxxcccccxccccxxxcccccxxxcccccxxcccccxxxxcccccxxcccccxxccccccxxxxccccxxccccccccccxxxccccxccccccxcccccccccxxcccccxxccccccccccxcccccccxxccccxxcccccccc
---------------
Apply:  Pos: [0, 8] xx => I
Apply:  Pos: [5, 12] cc => I
Apply:  Pos: [6, 10] cc => I
Apply:  Pos: [18, 26, 32] ccc => cc
Apply:  Pos: [22, 29] cc => I
Apply:  Pos: [24, 41] cc => I
Apply:  Pos: [25, 34] cc => I
Apply:  Pos: [30, 42] cc => I
Apply:  Pos: [35, 43] xx => I
Apply:  Pos: [49, 56] cc => I
Apply:  Pos: [50, 70] cc => I
Apply:  Pos: [59, 66] cc => I
Apply:  Pos: [61, 69, 74] ccc => cc
Apply:  Pos: [77, 84] cc => I
Apply:  Pos: [78, 85] cc => I
Apply:  Pos: [87, 93] xx => I
Apply:  Pos: [104, 112] cc => I
Apply:  Pos: [100, 107] xx => I
Apply:  Pos: [102, 110] cc => I
Apply:  Pos: [106, 120] cc => I
Apply:  Pos: [113, 121] cc => I
Apply:  Pos: [124, 133] xx => I
Apply:  Pos: [134, 142, 149] xcx => c
Apply:  Pos: [138, 144] cc => I
Apply:  Pos: [139, 148] xx => I
Apply:  Pos: [159, 163] cc => I
Apply:  Pos: [167, 176] xx => I
Apply:  Pos: [162, 174] cc => I
Apply:  Pos: [169, 177, 183] xcx => c
Apply:  Pos: [178, 184] cc => I
Apply:  Pos: [181, 189] xx => I
Apply:  Pos: [190, 198] xx => I
Apply:  Pos: [211, 224] cc => I
Apply:  Pos: [204, 213] xx => I
Apply:  Pos: [208, 219] cc => I
Apply:  Pos: [226, 233] cc => I
Apply:  Pos: [228, 236] xx => I
Apply:  Pos: [235, 251] cc => I
Apply:  Pos: [243, 252] cc => I
Apply:  Pos: [246, 267] cc => I
Apply:  Pos: [264, 275] cc => I
Apply:  Pos: [272, 279] xx => I
Apply:  Pos: [276, 283] cc => I
Apply:  Pos: [288, 295] cc => I
Apply:  Pos: [294, 314] cc => I
Apply:  Pos: [301, 312] cc => I
---------------
Circuit after: xccccxccxxccccxxcccxccxxcccxxxxcxxccccxcccccxcccxcccccxxcccxcccccccccccccxxcxxxcccxxxcccccxxccccxcccxxcccccccccxccccxcxccccccxccccxcccccxcccccxxxcccxccccxxccccxxxccxccccccccxxxccxccccccxcccccccxcccxccccccccxcccccxxcccxxcccccc

--------End Timer [apply mapping plan]:  0.015623331069946289

[18], [1, 13], [6, 8], [12, 7], [3, 16], [17], [6, 2], [1, 7], [19], [10], [0, 12], [15, 18], [12, 1], [2, 8], [3], [16], [4, 18], [1, 7], [8, 15], [4], [15, 18], [13, 3], [6], [14], [7, 8], [1, 13], [16, 4], [17], [1], [7], [3], [8, 15], [19], [11], [3, 16], [2, 8], [12, 14], [15, 10], [18], [6, 8], [17, 11], [7, 15], [14, 1], [3, 5], [2], [8, 16], [1, 7], [11, 10], [19], [9, 5], [12, 7], [16, 15], [19, 3], [5, 4], [19], [12], [1, 7], [16, 5], [6, 2], [13], [7, 16], [14, 1], [15, 11], [8, 17], [12, 7], [14, 6], [13, 9], [1, 3], [2, 17], [11, 10], [3, 4], [1, 13], [18, 10], [6], [9], [12, 1], [3], [7], [16], [19, 1], [8, 17], [9, 5], [19], [12], [10], [14, 6], [3, 5], [7, 15], [13, 9], [2, 8], [5], [9], [1, 13], [19, 3], [12, 7], [4, 18], [14], [0, 19], [6, 8], [18, 10], [19], [6], [1, 3], [0, 12], [5, 4], [0, 19], [11, 10], [1, 13], [16, 4], [8, 15], [3, 5], [0], [15, 10], [13, 9], [11, 18], [19, 1], [11], [15, 10], [8], [14, 1], [19, 13], [15, 18], [7, 16], [7, 8], [9, 5], [3], [7, 15], [2, 17], [16, 4], [19, 1], [15], [1, 13], [7, 16], [3, 5], [8, 17], [18, 10], [0], [15, 10], [9, 5], [13, 3], [2, 8], [14, 1], [6], [9], [2], [3, 4], [19, 13], [15, 18], [8], [14, 6], [3, 5], [7, 15], [13, 9], [14], [6], [0, 19], [11, 18], [12, 1], [15, 10], [15], [9], [16], [19, 1], [6, 2], [2], [17, 11], [13, 3], [14, 6], [8, 16], [0, 19], [16, 15], [12, 7], [3, 4], [0], [15], [6], [16, 4], [7, 8], [11], [0, 12], [8, 15], [13, 3], [1, 7], [5, 4], [6, 2], [12], [8, 17], [14, 6], [15, 18], [12, 7], [6, 17], [3, 4], [16, 15], [0], [17, 11], [18, 10], [19, 1], [8], [19, 3], [1, 13], [6, 2], [12, 1], [8, 16], [2, 17], [5, 4], [14, 6], [15], [12, 14], [13, 9], [7, 8], [16, 4], [3, 5], [12], [4], [3, 16], [7, 15], [11, 10], [13], [14], [0, 12], [5, 4], [19, 3], [1, 7], [15, 11], [18, 10], ----End Timer [Execute Mapping]:  2.5304887294769287

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[92, 107]
[112, 117]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[5, 27]
[8, 32]
[32, 48]
[111, 136]
[101, 142]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[123, 128, 132]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[108, 123, 128]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[135, 137, 147]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[5, 27]
[8, 32]
[32, 48]
[111, 136]
[101, 142]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[92, 107]
[112, 117]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.71992826461792

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [5, 27] xx => I, Pos: [5, 27] xx => I, Pos: [8, 32] xx => I, Pos: [8, 32] xx => I, Pos: [32, 48] xx => I, Pos: [32, 48] xx => I, Pos: [92, 107] cc => I, Pos: [92, 107] cc => I, Pos: [101, 142] xx => I, Pos: [101, 142] xx => I, Pos: [108, 123, 128] ccc => cc, Pos: [111, 136] xx => I, Pos: [111, 136] xx => I, Pos: [112, 117] cc => I, Pos: [112, 117] cc => I, Pos: [123, 128, 132] ccc => cc, Pos: [135, 137, 147] ccc => cc]

--------End Timer [Generate Plans]:  0.031244277954101562

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [5, 27] xx => I,
 Pos: [32, 48] xx => I,
 Pos: [92, 107] cc => I,
 Pos: [101, 142] xx => I,
 Pos: [123, 128, 132] ccc => cc,
 Pos: [111, 136] xx => I,
 Pos: [112, 117] cc => I,
 Pos: [135, 137, 147] ccc => cc]
Change: 8, Saving: 9

Circuit before: xccccxccxxccccxxcccxccxxcccxxxxcxxccccxcccccxcccxcccccxxcccxcccccccccccccxxcxxxcccxxxcccccxxccccxcccxxcccccccccxccccxcxccccccxccccxcccccxcccccxxxcccxccccxxccccxxxccxccccccccxxxccxccccccxcccccccxcccxccccccccxcccccxxcccxxcccccc
---------------
Apply:  Pos: [5, 27] xx => I
Apply:  Pos: [32, 48] xx => I
Apply:  Pos: [92, 107] cc => I
Apply:  Pos: [101, 142] xx => I
Apply:  Pos: [123, 128, 132] ccc => cc
Apply:  Pos: [111, 136] xx => I
Apply:  Pos: [112, 117] cc => I
Apply:  Pos: [135, 137, 147] ccc => cc
---------------
Circuit after: xccccccxxccccxxcccxccxxcccxxxcxccccxcccccxccccccccxxcccxcccccccccccccxxcxxxcccxxxcccccxxcccxcccxcccccccccccxxccccccxccccxcccccccccxxccxccccxxccccxxxccxccccccccxxxccxccccccxcccccccxcccxccccccccxcccccxxcccxxcccccc

--------End Timer [apply mapping plan]:  0.0

[18], [1, 13], [6, 8], [12, 7], [3, 16], [6, 2], [1, 7], [19], [10], [0, 12], [15, 18], [12, 1], [2, 8], [3], [16], [4, 18], [1, 7], [8, 15], [4], [15, 18], [13, 3], [6], [14], [7, 8], [1, 13], [16, 4], [1], [7], [3], [8, 15], [11], [3, 16], [2, 8], [12, 14], [15, 10], [18], [6, 8], [17, 11], [7, 15], [14, 1], [3, 5], [2], [8, 16], [1, 7], [11, 10], [9, 5], [12, 7], [16, 15], [19, 3], [5, 4], [19], [12], [1, 7], [16, 5], [6, 2], [13], [7, 16], [14, 1], [15, 11], [8, 17], [12, 7], [14, 6], [13, 9], [1, 3], [2, 17], [11, 10], [3, 4], [1, 13], [18, 10], [6], [9], [12, 1], [3], [7], [16], [19, 1], [8, 17], [9, 5], [19], [12], [10], [14, 6], [3, 5], [7, 15], [13, 9], [2, 8], [5], [9], [19, 3], [12, 7], [4, 18], [14], [0, 19], [6, 8], [18, 10], [19], [1, 3], [0, 12], [5, 4], [0, 19], [11, 10], [16, 4], [8, 15], [3, 5], [13, 9], [11, 18], [19, 1], [11], [8], [14, 1], [19, 13], [15, 18], [7, 8], [7, 4], [9, 5], [3], [7, 15], [2, 17], [16, 4], [19, 1], [15], [1, 13], [3, 5], [8, 17], [15, 18], [18, 10], [9, 5], [13, 3], [2, 8], [14, 1], [9], [2], [3, 4], [19, 13], [8], [14, 6], [3, 5], [7, 15], [13, 9], [14], [6], [0, 19], [11, 18], [12, 1], [15, 10], [15], [9], [16], [19, 1], [6, 2], [2], [17, 11], [13, 3], [14, 6], [8, 16], [0, 19], [16, 15], [12, 7], [3, 4], [0], [15], [6], [16, 4], [7, 8], [11], [0, 12], [8, 15], [13, 3], [1, 7], [5, 4], [6, 2], [12], [8, 17], [14, 6], [15, 18], [12, 7], [6, 17], [3, 4], [16, 15], [0], [17, 11], [18, 10], [19, 1], [8], [19, 3], [1, 13], [6, 2], [12, 1], [8, 16], [2, 17], [5, 4], [14, 6], [15], [12, 14], [13, 9], [7, 8], [16, 4], [3, 5], [12], [4], [3, 16], [7, 15], [11, 10], [13], [14], [0, 12], [5, 4], [19, 3], [1, 7], [15, 11], [18, 10], ----End Timer [Execute Mapping]:  1.7511725425720215

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[94, 100, 105]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.7035868167877197

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [94, 100, 105] ccc => cc]

--------End Timer [Generate Plans]:  0.01562356948852539

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [94, 100, 105] ccc => cc]
Change: 1, Saving: 1

Circuit before: xccccccxxccccxxcccxccxxcccxxxcxccccxcccccxccccccccxxcccxcccccccccccccxxcxxxcccxxxcccccxxcccxcccxcccccccccccxxccccccxccccxcccccccccxxccxccccxxccccxxxccxccccccccxxxccxccccccxcccccccxcccxccccccccxcccccxxcccxxcccccc
---------------
Apply:  Pos: [94, 100, 105] ccc => cc
---------------
Circuit after: xccccccxxccccxxcccxccxxcccxxxcxccccxcccccxccccccccxxcccxcccccccccccccxxcxxxcccxxxcccccxxcccxcccxccccccccccxxccccccxccccxcccccccccxxccxccccxxccccxxxccxccccccccxxxccxccccccxcccccccxcccxccccccccxcccccxxcccxxcccccc

--------End Timer [apply mapping plan]:  0.0

[18], [1, 13], [6, 8], [12, 7], [3, 16], [6, 2], [1, 7], [19], [10], [0, 12], [15, 18], [12, 1], [2, 8], [3], [16], [4, 18], [1, 7], [8, 15], [4], [15, 18], [13, 3], [6], [14], [7, 8], [1, 13], [16, 4], [1], [7], [3], [8, 15], [11], [3, 16], [2, 8], [12, 14], [15, 10], [18], [6, 8], [17, 11], [7, 15], [14, 1], [3, 5], [2], [8, 16], [1, 7], [11, 10], [9, 5], [12, 7], [16, 15], [19, 3], [5, 4], [19], [12], [1, 7], [16, 5], [6, 2], [13], [7, 16], [14, 1], [15, 11], [8, 17], [12, 7], [14, 6], [13, 9], [1, 3], [2, 17], [11, 10], [3, 4], [1, 13], [18, 10], [6], [9], [12, 1], [3], [7], [16], [19, 1], [8, 17], [9, 5], [19], [12], [10], [14, 6], [3, 5], [7, 15], [13, 9], [2, 8], [5], [9], [19, 3], [12, 7], [4, 18], [14], [0, 19], [6, 8], [11, 18], [19], [1, 3], [0, 12], [5, 4], [0, 19], [18, 10], [16, 4], [8, 15], [3, 5], [13, 9], [19, 1], [11], [8], [14, 1], [19, 13], [15, 18], [7, 4], [7, 8], [9, 5], [3], [7, 15], [2, 17], [16, 4], [19, 1], [15], [1, 13], [3, 5], [8, 17], [15, 18], [18, 10], [9, 5], [13, 3], [2, 8], [14, 1], [9], [2], [3, 4], [19, 13], [8], [14, 6], [3, 5], [7, 15], [13, 9], [14], [6], [0, 19], [11, 18], [12, 1], [15, 10], [15], [9], [16], [19, 1], [6, 2], [2], [17, 11], [13, 3], [14, 6], [8, 16], [0, 19], [16, 15], [12, 7], [3, 4], [0], [15], [6], [16, 4], [7, 8], [11], [0, 12], [8, 15], [13, 3], [1, 7], [5, 4], [6, 2], [12], [8, 17], [14, 6], [15, 18], [12, 7], [6, 17], [3, 4], [16, 15], [0], [17, 11], [18, 10], [19, 1], [8], [19, 3], [1, 13], [6, 2], [12, 1], [8, 16], [2, 17], [5, 4], [14, 6], [15], [12, 14], [13, 9], [7, 8], [16, 4], [3, 5], [12], [4], [3, 16], [7, 15], [11, 10], [13], [14], [0, 12], [5, 4], [19, 3], [1, 7], [15, 11], [18, 10], ----End Timer [Execute Mapping]:  1.7192103862762451

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.6566553115844727

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: xccccccxxccccxxcccxccxxcccxxxcxccccxcccccxccccccccxxcccxcccccccccccccxxcxxxcccxxxcccccxxcccxcccxccccccccccxxccccccxccccxcccccccccxxccxccccxxccccxxxccxccccccccxxxccxccccccxcccccccxcccxccccccccxcccccxxcccxxcccccc
---------------
---------------
Circuit after: xccccccxxccccxxcccxccxxcccxxxcxccccxcccccxccccccccxxcccxcccccccccccccxxcxxxcccxxxcccccxxcccxcccxccccccccccxxccccccxccccxcccccccccxxccxccccxxccccxxxccxccccccccxxxccxccccccxcccccccxcccxccccccccxcccccxxcccxxcccccc

--------End Timer [apply mapping plan]:  0.0

[18], [1, 13], [6, 8], [12, 7], [3, 16], [6, 2], [1, 7], [19], [10], [0, 12], [15, 18], [12, 1], [2, 8], [3], [16], [4, 18], [1, 7], [8, 15], [4], [15, 18], [13, 3], [6], [14], [7, 8], [1, 13], [16, 4], [1], [7], [3], [8, 15], [11], [3, 16], [2, 8], [12, 14], [15, 10], [18], [6, 8], [17, 11], [7, 15], [14, 1], [3, 5], [2], [8, 16], [1, 7], [11, 10], [9, 5], [12, 7], [16, 15], [19, 3], [5, 4], [19], [12], [1, 7], [16, 5], [6, 2], [13], [7, 16], [14, 1], [15, 11], [8, 17], [12, 7], [14, 6], [13, 9], [1, 3], [2, 17], [11, 10], [3, 4], [1, 13], [18, 10], [6], [9], [12, 1], [3], [7], [16], [19, 1], [8, 17], [9, 5], [19], [12], [10], [14, 6], [3, 5], [7, 15], [13, 9], [2, 8], [5], [9], [19, 3], [12, 7], [4, 18], [14], [0, 19], [6, 8], [11, 18], [19], [1, 3], [0, 12], [5, 4], [0, 19], [18, 10], [16, 4], [8, 15], [3, 5], [13, 9], [19, 1], [11], [8], [14, 1], [19, 13], [15, 18], [7, 8], [7, 4], [9, 5], [3], [7, 15], [2, 17], [16, 4], [19, 1], [15], [1, 13], [3, 5], [8, 17], [15, 18], [18, 10], [9, 5], [13, 3], [2, 8], [14, 1], [9], [2], [3, 4], [19, 13], [8], [14, 6], [3, 5], [7, 15], [13, 9], [14], [6], [0, 19], [11, 18], [12, 1], [15, 10], [15], [9], [16], [19, 1], [6, 2], [2], [17, 11], [13, 3], [14, 6], [8, 16], [0, 19], [16, 15], [12, 7], [3, 4], [0], [15], [6], [16, 4], [7, 8], [11], [0, 12], [8, 15], [13, 3], [1, 7], [5, 4], [6, 2], [12], [8, 17], [14, 6], [15, 18], [12, 7], [6, 17], [3, 4], [16, 15], [0], [17, 11], [18, 10], [19, 1], [8], [19, 3], [1, 13], [6, 2], [12, 1], [8, 16], [2, 17], [5, 4], [14, 6], [15], [12, 14], [13, 9], [7, 8], [16, 4], [3, 5], [12], [4], [3, 16], [7, 15], [11, 10], [13], [14], [0, 12], [5, 4], [19, 3], [1, 7], [15, 11], [18, 10], ----End Timer [Execute Mapping]:  1.6566553115844727

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: x-x-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-x-x-x-x-x-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [315] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx,x]
 - circuit depth: 45 - (small)
 - circuit cycle: 540


>> Solved circuit: 
Circuit Info: 
 - circuit: x-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-x-cx-cx-x-x-cx-cx-cx-x-x-x-cx-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-cx-x-x-x-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-x-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-x-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-x-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx 
     => total size: [210] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx,x]
 - circuit depth: 39 - (small)
 - circuit cycle: 366

Reduced: 
 - size: 105 (33.33%)
 - depth: 6 (13.33%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.15625786781311035

[19], [18], [1, 13], [6, 8], [12, 7], [15, 11], [5, 4], [3, 16], [19], [17], [5, 4], [6, 2], [15, 11], [1, 7], [19], [10], [0, 12], [15, 18], [1, 7], [2, 8], [3], [16], [0, 19], [4, 18], [9, 5], [2, 17], [12, 1], [8, 15], [4], [0, 19], [11, 10], [15, 18], [1, 7], [13, 3], [2, 17], [19], [6], [14], [7, 8], [1, 13], [16, 4], [9, 5], [11, 10], [19], [17], [1], [7], [3], [8, 15], [4, 18], [13, 9], [19], [11], [3, 16], [2, 8], [12, 14], [4, 18], [15, 10], [18], [0, 19], [6, 8], [11, 10], [7, 15], [14, 1], [3, 5], [2], [0, 19], [8, 16], [1, 7], [17, 11], [13, 9], [19], [9, 5], [12, 7], [11, 10], [16, 15], [19, 3], [11, 18], [8, 15], [5, 4], [19], [12], [1, 7], [16, 5], [11, 18], [8, 15], [6, 2], [19], [13], [7, 16], [14, 1], [15, 11], [8, 17], [19], [12, 7], [14, 6], [13, 9], [1, 3], [2, 17], [11, 10], [19], [3, 4], [16, 5], [1, 13], [15, 11], [18, 10], [12, 14], [19], [6], [9], [16, 5], [12, 1], [15, 11], [4, 18], [3], [7], [16], [19, 1], [8, 17], [9, 5], [12, 14], [4, 18], [19], [12], [0], [10], [14, 6], [3, 5], [7, 15], [13, 9], [2, 8], [5], [9], [0], [13], [19, 3], [12, 7], [4, 18], [16, 15], [17], [14], [0, 19], [1, 13], [6, 8], [16, 15], [18, 10], [19], [6], [17], [13], [1, 3], [0, 12], [5, 4], [0, 19], [11, 10], [1, 13], [16, 4], [8, 15], [3, 5], [14, 7], [0], [15, 10], [6, 2], [14, 7], [13, 9], [11, 18], [19, 1], [0], [11], [10], [8], [14, 1], [19, 13], [15, 18], [6, 2], [7, 16], [0], [15, 10], [12, 14], [7, 8], [9, 5], [0], [3], [10], [12, 14], [7, 15], [2, 17], [16, 4], [19, 1], [0], [4], [15], [1, 13], [7, 16], [3, 5], [8, 17], [18, 10], [0], [4], [15, 10], [9, 5], [13, 3], [2, 8], [14, 1], [0], [6], [9], [2], [11, 10], [3, 4], [19, 13], [7, 16], [15, 18], [0], [8], [14, 6], [3, 5], [7, 15], [13, 9], [11, 10], [14], [6], [0, 19], [11, 18], [7, 16], [12, 1], [8, 17], [15, 10], [0], [15], [9], [16], [19, 1], [8, 17], [6, 2], [18, 10], [0], [2], [17, 11], [13, 3], [14, 6], [8, 16], [0, 19], [2, 17], [16, 15], [12, 7], [13, 9], [3, 4], [0], [15], [6], [18, 10], [2, 17], [16, 4], [7, 8], [11], [0, 12], [8, 15], [13, 3], [1, 7], [5, 4], [6, 2], [12], [8, 17], [3, 5], [14, 6], [15, 18], [13, 9], [12, 7], [6, 17], [3, 4], [16, 15], [12], [0], [17, 11], [3, 5], [16, 4], [18, 10], [19, 1], [12], [8], [19, 3], [1, 13], [16, 4], [6, 2], [12, 1], [8, 16], [2, 17], [11, 10], [5, 4], [14, 6], [15], [12, 14], [13, 9], [6, 2], [11, 10], [7, 8], [16, 4], [3, 5], [12], [4], [8, 17], [3, 16], [7, 15], [11, 10], [13], [14], [0, 12], [5, 4], [19, 3], [1, 7], [15, 11], [8, 17], [18, 10], [6, 2], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[6, 10]
[5, 12]
[13, 18]
[22, 29]
[25, 34]
[24, 41]
[30, 42]
[49, 56]
[59, 66]
[50, 70]
[77, 84]
[78, 85]
[102, 110]
[104, 112]
[106, 120]
[113, 121]
[121, 137]
[138, 144]
[159, 163]
[162, 174]
[178, 184]
[193, 211]
[208, 219]
[211, 224]
[226, 233]
[235, 251]
[243, 252]
[246, 267]
[264, 275]
[276, 283]
[288, 295]
[295, 304]
[301, 312]
[294, 314]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[0, 8]
[8, 14]
[35, 43]
[43, 51]
[80, 87]
[87, 93]
[93, 100]
[100, 107]
[124, 133]
[139, 148]
[160, 167]
[167, 176]
[176, 181]
[181, 189]
[189, 197]
[190, 198]
[197, 204]
[204, 213]
[228, 236]
[272, 279]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[91, 99, 104]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 

[134, 142, 149]
[169, 177, 183]

------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[18, 26, 32]
[61, 69, 74]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[0, 8]
[8, 14]
[35, 43]
[43, 51]
[80, 87]
[87, 93]
[93, 100]
[100, 107]
[124, 133]
[139, 148]
[160, 167]
[167, 176]
[176, 181]
[181, 189]
[189, 197]
[190, 198]
[197, 204]
[204, 213]
[228, 236]
[272, 279]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[6, 10]
[5, 12]
[13, 18]
[22, 29]
[25, 34]
[24, 41]
[30, 42]
[49, 56]
[59, 66]
[50, 70]
[77, 84]
[78, 85]
[102, 110]
[104, 112]
[106, 120]
[113, 121]
[121, 137]
[138, 144]
[159, 163]
[162, 174]
[178, 184]
[193, 211]
[208, 219]
[211, 224]
[226, 233]
[235, 251]
[243, 252]
[246, 267]
[264, 275]
[276, 283]
[288, 295]
[295, 304]
[301, 312]
[294, 314]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.406222105026245

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 8] xx => I, Pos: [0, 8] xx => I, Pos: [5, 12] cc => I, Pos: [5, 12] cc => I, Pos: [6, 10] cc => I, Pos: [6, 10] cc => I, Pos: [8, 14] xx => I, Pos: [8, 14] xx => I, Pos: [13, 18] cc => I, Pos: [13, 18] cc => I, Pos: [18, 26, 32] ccc => cc, Pos: [22, 29] cc => I, Pos: [22, 29] cc => I, Pos: [24, 41] cc => I, Pos: [24, 41] cc => I, Pos: [25, 34] cc => I, Pos: [25, 34] cc => I, Pos: [30, 42] cc => I, Pos: [30, 42] cc => I, Pos: [35, 43] xx => I, Pos: [35, 43] xx => I, Pos: [43, 51] xx => I, Pos: [43, 51] xx => I, Pos: [49, 56] cc => I, Pos: [49, 56] cc => I, Pos: [50, 70] cc => I, Pos: [50, 70] cc => I, Pos: [59, 66] cc => I, Pos: [59, 66] cc => I, Pos: [61, 69, 74] ccc => cc, Pos: [77, 84] cc => I, Pos: [77, 84] cc => I, Pos: [78, 85] cc => I, Pos: [78, 85] cc => I, Pos: [80, 87] xx => I, Pos: [80, 87] xx => I, Pos: [87, 93] xx => I, Pos: [87, 93] xx => I, Pos: [91, 99, 104] ccc => cc, Pos: [93, 100] xx => I, Pos: [93, 100] xx => I, Pos: [100, 107] xx => I, Pos: [100, 107] xx => I, Pos: [102, 110] cc => I, Pos: [102, 110] cc => I, Pos: [104, 112] cc => I, Pos: [104, 112] cc => I, Pos: [106, 120] cc => I, Pos: [106, 120] cc => I, Pos: [113, 121] cc => I, Pos: [113, 121] cc => I, Pos: [121, 137] cc => I, Pos: [121, 137] cc => I, Pos: [124, 133] xx => I, Pos: [124, 133] xx => I, Pos: [134, 142, 149] xcx => c, Pos: [138, 144] cc => I, Pos: [138, 144] cc => I, Pos: [139, 148] xx => I, Pos: [139, 148] xx => I, Pos: [159, 163] cc => I, Pos: [159, 163] cc => I, Pos: [160, 167] xx => I, Pos: [160, 167] xx => I, Pos: [162, 174] cc => I, Pos: [162, 174] cc => I, Pos: [167, 176] xx => I, Pos: [167, 176] xx => I, Pos: [169, 177, 183] xcx => c, Pos: [176, 181] xx => I, Pos: [176, 181] xx => I, Pos: [178, 184] cc => I, Pos: [178, 184] cc => I, Pos: [181, 189] xx => I, Pos: [181, 189] xx => I, Pos: [189, 197] xx => I, Pos: [189, 197] xx => I, Pos: [190, 198] xx => I, Pos: [190, 198] xx => I, Pos: [193, 211] cc => I, Pos: [193, 211] cc => I, Pos: [197, 204] xx => I, Pos: [197, 204] xx => I, Pos: [204, 213] xx => I, Pos: [204, 213] xx => I, Pos: [208, 219] cc => I, Pos: [208, 219] cc => I, Pos: [211, 224] cc => I, Pos: [211, 224] cc => I, Pos: [226, 233] cc => I, Pos: [226, 233] cc => I, Pos: [228, 236] xx => I, Pos: [228, 236] xx => I, Pos: [235, 251] cc => I, Pos: [235, 251] cc => I, Pos: [243, 252] cc => I, Pos: [243, 252] cc => I, Pos: [246, 267] cc => I, Pos: [246, 267] cc => I, Pos: [264, 275] cc => I, Pos: [264, 275] cc => I, Pos: [272, 279] xx => I, Pos: [272, 279] xx => I, Pos: [276, 283] cc => I, Pos: [276, 283] cc => I, Pos: [288, 295] cc => I, Pos: [288, 295] cc => I, Pos: [294, 314] cc => I, Pos: [294, 314] cc => I, Pos: [295, 304] cc => I, Pos: [295, 304] cc => I, Pos: [301, 312] cc => I, Pos: [301, 312] cc => I]

--------End Timer [Generate Plans]:  0.10935401916503906

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 8] xx => I,
 Pos: [5, 12] cc => I,
 Pos: [6, 10] cc => I,
 Pos: [18, 26, 32] ccc => cc,
 Pos: [22, 29] cc => I,
 Pos: [24, 41] cc => I,
 Pos: [25, 34] cc => I,
 Pos: [30, 42] cc => I,
 Pos: [35, 43] xx => I,
 Pos: [49, 56] cc => I,
 Pos: [50, 70] cc => I,
 Pos: [59, 66] cc => I,
 Pos: [61, 69, 74] ccc => cc,
 Pos: [77, 84] cc => I,
 Pos: [78, 85] cc => I,
 Pos: [80, 87] xx => I,
 Pos: [104, 112] cc => I,
 Pos: [100, 107] xx => I,
 Pos: [102, 110] cc => I,
 Pos: [106, 120] cc => I,
 Pos: [121, 137] cc => I,
 Pos: [124, 133] xx => I,
 Pos: [134, 142, 149] xcx => c,
 Pos: [138, 144] cc => I,
 Pos: [139, 148] xx => I,
 Pos: [159, 163] cc => I,
 Pos: [160, 167] xx => I,
 Pos: [162, 174] cc => I,
 Pos: [169, 177, 183] xcx => c,
 Pos: [181, 189] xx => I,
 Pos: [178, 184] cc => I,
 Pos: [190, 198] xx => I,
 Pos: [193, 211] cc => I,
 Pos: [197, 204] xx => I,
 Pos: [208, 219] cc => I,
 Pos: [226, 233] cc => I,
 Pos: [228, 236] xx => I,
 Pos: [235, 251] cc => I,
 Pos: [243, 252] cc => I,
 Pos: [246, 267] cc => I,
 Pos: [264, 275] cc => I,
 Pos: [272, 279] xx => I,
 Pos: [276, 283] cc => I,
 Pos: [295, 304] cc => I,
 Pos: [294, 314] cc => I,
 Pos: [301, 312] cc => I]
Change: 46, Saving: 46

Circuit before: xxccccccxxccccxxccccxxccccccxccccccxxxcccccxxxxxcccxxcccccxccccccxcccccxccccccccxxcccccxxccccxccccccxccccccxxxccccxxxcccccxxxxcccccxxxxccccxxcccccxxxxccccccccccxccccccxxxxcccccxccccxxxcccccxxxcccccxxcccccxxxxcccccxxcccccxxccccccxxxxccccxxccccccccccxxxccccxccccccxcccccccccxxcccccxxccccccccccxcccccccxxccccxxcccccccc
---------------
Apply:  Pos: [0, 8] xx => I
Apply:  Pos: [5, 12] cc => I
Apply:  Pos: [6, 10] cc => I
Apply:  Pos: [18, 26, 32] ccc => cc
Apply:  Pos: [22, 29] cc => I
Apply:  Pos: [24, 41] cc => I
Apply:  Pos: [25, 34] cc => I
Apply:  Pos: [30, 42] cc => I
Apply:  Pos: [35, 43] xx => I
Apply:  Pos: [49, 56] cc => I
Apply:  Pos: [50, 70] cc => I
Apply:  Pos: [59, 66] cc => I
Apply:  Pos: [61, 69, 74] ccc => cc
Apply:  Pos: [77, 84] cc => I
Apply:  Pos: [78, 85] cc => I
Apply:  Pos: [80, 87] xx => I
Apply:  Pos: [104, 112] cc => I
Apply:  Pos: [100, 107] xx => I
Apply:  Pos: [102, 110] cc => I
Apply:  Pos: [106, 120] cc => I
Apply:  Pos: [121, 137] cc => I
Apply:  Pos: [124, 133] xx => I
Apply:  Pos: [134, 142, 149] xcx => c
Apply:  Pos: [138, 144] cc => I
Apply:  Pos: [139, 148] xx => I
Apply:  Pos: [159, 163] cc => I
Apply:  Pos: [160, 167] xx => I
Apply:  Pos: [162, 174] cc => I
Apply:  Pos: [169, 177, 183] xcx => c
Apply:  Pos: [181, 189] xx => I
Apply:  Pos: [178, 184] cc => I
Apply:  Pos: [190, 198] xx => I
Apply:  Pos: [193, 211] cc => I
Apply:  Pos: [197, 204] xx => I
Apply:  Pos: [208, 219] cc => I
Apply:  Pos: [226, 233] cc => I
Apply:  Pos: [228, 236] xx => I
Apply:  Pos: [235, 251] cc => I
Apply:  Pos: [243, 252] cc => I
Apply:  Pos: [246, 267] cc => I
Apply:  Pos: [264, 275] cc => I
Apply:  Pos: [272, 279] xx => I
Apply:  Pos: [276, 283] cc => I
Apply:  Pos: [295, 304] cc => I
Apply:  Pos: [294, 314] cc => I
Apply:  Pos: [301, 312] cc => I
---------------
Circuit after: xccccxccxxccccxxcccxccxxcccxxxxcxxccccxcccccxcccxcccccxcccxccccxcccccccccxxccxxxcccxxxcccccxxcccxcccxxcccccccccccccxcxccccxccxccccxcccccccccxxxcccxxccccxxcccccxxxccxccccccccxxxccxccccccxcccccccxcccxcccccccccxcccccxxccxxcccccc

--------End Timer [apply mapping plan]:  0.0

[18], [1, 13], [6, 8], [12, 7], [3, 16], [17], [6, 2], [1, 7], [19], [10], [0, 12], [15, 18], [12, 1], [2, 8], [3], [16], [4, 18], [1, 7], [8, 15], [4], [15, 18], [13, 3], [6], [14], [7, 8], [1, 13], [16, 4], [17], [1], [7], [3], [8, 15], [19], [11], [3, 16], [2, 8], [12, 14], [15, 10], [18], [6, 8], [17, 11], [7, 15], [14, 1], [3, 5], [2], [8, 16], [1, 7], [11, 10], [19], [9, 5], [12, 7], [16, 15], [19, 3], [5, 4], [12], [1, 7], [16, 5], [6, 2], [13], [7, 16], [14, 1], [15, 11], [8, 17], [19], [12, 7], [14, 6], [13, 9], [1, 3], [2, 17], [11, 10], [3, 4], [1, 13], [18, 10], [6], [9], [12, 1], [4, 18], [3], [7], [16], [19, 1], [8, 17], [9, 5], [19], [12], [10], [14, 6], [3, 5], [7, 15], [13, 9], [2, 8], [5], [9], [1, 13], [19, 3], [12, 7], [14], [0, 19], [6, 8], [18, 10], [19], [6], [1, 3], [0, 12], [5, 4], [0, 19], [11, 10], [1, 13], [16, 4], [8, 15], [3, 5], [15, 10], [13, 9], [11, 18], [19, 1], [11], [15, 10], [8], [14, 1], [19, 13], [15, 18], [7, 16], [0], [7, 8], [9, 5], [3], [7, 15], [2, 17], [16, 4], [19, 1], [15], [1, 13], [3, 5], [8, 17], [18, 10], [15, 10], [9, 5], [13, 3], [2, 8], [14, 1], [6], [9], [2], [3, 4], [19, 13], [15, 18], [0], [8], [14, 6], [3, 5], [7, 15], [13, 9], [14], [6], [0, 19], [11, 18], [7, 16], [12, 1], [15, 10], [15], [9], [16], [19, 1], [6, 2], [2], [17, 11], [13, 3], [14, 6], [8, 16], [0, 19], [16, 15], [12, 7], [3, 4], [0], [15], [6], [16, 4], [7, 8], [11], [0, 12], [8, 15], [13, 3], [1, 7], [5, 4], [6, 2], [12], [8, 17], [14, 6], [15, 18], [12, 7], [6, 17], [3, 4], [16, 15], [0], [17, 11], [18, 10], [19, 1], [8], [19, 3], [1, 13], [6, 2], [12, 1], [8, 16], [2, 17], [11, 10], [5, 4], [14, 6], [15], [12, 14], [13, 9], [7, 8], [16, 4], [3, 5], [12], [4], [3, 16], [7, 15], [13], [14], [0, 12], [5, 4], [19, 3], [1, 7], [15, 11], [18, 10], ----End Timer [Execute Mapping]:  2.515576124191284

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[93, 107]
[111, 116]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[5, 27]
[8, 32]
[32, 48]
[101, 140]
[122, 146]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[108, 121, 128]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[5, 27]
[8, 32]
[32, 48]
[101, 140]
[122, 146]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[93, 107]
[111, 116]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.7031221389770508

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [5, 27] xx => I, Pos: [5, 27] xx => I, Pos: [8, 32] xx => I, Pos: [8, 32] xx => I, Pos: [32, 48] xx => I, Pos: [32, 48] xx => I, Pos: [93, 107] cc => I, Pos: [93, 107] cc => I, Pos: [101, 140] xx => I, Pos: [101, 140] xx => I, Pos: [108, 121, 128] ccc => cc, Pos: [111, 116] cc => I, Pos: [111, 116] cc => I, Pos: [122, 146] xx => I, Pos: [122, 146] xx => I]

--------End Timer [Generate Plans]:  0.031235694885253906

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [5, 27] xx => I,
 Pos: [8, 32] xx => I,
 Pos: [93, 107] cc => I,
 Pos: [101, 140] xx => I,
 Pos: [108, 121, 128] ccc => cc,
 Pos: [111, 116] cc => I,
 Pos: [122, 146] xx => I]
Change: 7, Saving: 7

Circuit before: xccccxccxxccccxxcccxccxxcccxxxxcxxccccxcccccxcccxcccccxcccxccccxcccccccccxxccxxxcccxxxcccccxxcccxcccxxcccccccccccccxcxccccxccxccccxcccccccccxxxcccxxccccxxcccccxxxccxccccccccxxxccxccccccxcccccccxcccxcccccccccxcccccxxccxxcccccc
---------------
Apply:  Pos: [5, 27] xx => I
Apply:  Pos: [8, 32] xx => I
Apply:  Pos: [93, 107] cc => I
Apply:  Pos: [101, 140] xx => I
Apply:  Pos: [108, 121, 128] ccc => cc
Apply:  Pos: [111, 116] cc => I
Apply:  Pos: [122, 146] xx => I
---------------
Circuit after: xccccccxccccxxcccxccxxcccxxxcxccccxcccccxcccxcccccxcccxccccxcccccccccxxccxxxcccxxxcccccxxccxcccxcccccccccccxxccccccxcccxcccccccccxxcccxccccxxcccccxxxccxccccccccxxxccxccccccxcccccccxcccxcccccccccxcccccxxccxxcccccc

--------End Timer [apply mapping plan]:  0.0

[18], [1, 13], [6, 8], [12, 7], [3, 16], [6, 2], [1, 7], [10], [0, 12], [15, 18], [12, 1], [2, 8], [3], [16], [4, 18], [1, 7], [8, 15], [4], [15, 18], [13, 3], [6], [14], [7, 8], [1, 13], [16, 4], [1], [7], [3], [8, 15], [11], [3, 16], [2, 8], [12, 14], [15, 10], [18], [6, 8], [17, 11], [7, 15], [14, 1], [3, 5], [2], [8, 16], [1, 7], [11, 10], [19], [9, 5], [12, 7], [16, 15], [19, 3], [5, 4], [12], [1, 7], [16, 5], [6, 2], [13], [7, 16], [14, 1], [15, 11], [8, 17], [19], [12, 7], [14, 6], [13, 9], [1, 3], [2, 17], [11, 10], [3, 4], [1, 13], [18, 10], [6], [9], [12, 1], [4, 18], [3], [7], [16], [19, 1], [8, 17], [9, 5], [19], [12], [10], [14, 6], [3, 5], [7, 15], [13, 9], [2, 8], [5], [9], [19, 3], [12, 7], [14], [0, 19], [6, 8], [18, 10], [19], [1, 3], [0, 12], [5, 4], [0, 19], [11, 10], [7, 16], [8, 15], [3, 5], [13, 9], [11, 18], [19, 1], [11], [8], [14, 1], [19, 13], [15, 18], [16, 4], [7, 8], [9, 5], [3], [7, 15], [2, 17], [19, 1], [15], [1, 13], [3, 5], [8, 17], [15, 10], [18, 10], [9, 5], [13, 3], [2, 8], [14, 1], [9], [2], [3, 4], [19, 13], [15, 18], [8], [14, 6], [3, 5], [7, 15], [13, 9], [14], [6], [0, 19], [11, 18], [7, 16], [12, 1], [15, 10], [15], [9], [16], [19, 1], [6, 2], [2], [17, 11], [13, 3], [14, 6], [8, 16], [0, 19], [16, 15], [12, 7], [3, 4], [0], [15], [6], [16, 4], [7, 8], [11], [0, 12], [8, 15], [13, 3], [1, 7], [5, 4], [6, 2], [12], [8, 17], [14, 6], [15, 18], [12, 7], [6, 17], [3, 4], [16, 15], [0], [17, 11], [18, 10], [19, 1], [8], [19, 3], [1, 13], [6, 2], [12, 1], [8, 16], [2, 17], [11, 10], [5, 4], [14, 6], [15], [12, 14], [13, 9], [7, 8], [16, 4], [3, 5], [12], [4], [3, 16], [7, 15], [13], [14], [0, 12], [5, 4], [19, 3], [1, 7], [15, 11], [18, 10], ----End Timer [Execute Mapping]:  1.7343578338623047

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[94, 100, 105]
[123, 124, 133]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.6872854232788086

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [94, 100, 105] ccc => cc, Pos: [123, 124, 133] ccc => cc]

--------End Timer [Generate Plans]:  0.015624761581420898

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [94, 100, 105] ccc => cc, Pos: [123, 124, 133] ccc => cc]
Change: 2, Saving: 3

Circuit before: xccccccxccccxxcccxccxxcccxxxcxccccxcccccxcccxcccccxcccxccccxcccccccccxxccxxxcccxxxcccccxxccxcccxcccccccccccxxccccccxcccxcccccccccxxcccxccccxxcccccxxxccxccccccccxxxccxccccccxcccccccxcccxcccccccccxcccccxxccxxcccccc
---------------
Apply:  Pos: [94, 100, 105] ccc => cc
Apply:  Pos: [123, 124, 133] ccc => cc
---------------
Circuit after: xccccccxccccxxcccxccxxcccxxxcxccccxcccccxcccxcccccxcccxccccxcccccccccxxccxxxcccxxxcccccxxccxcccxccccccccccxxccccccxcccxcccccccccxxccxccccxxcccccxxxccxccccccccxxxccxccccccxcccccccxcccxcccccccccxcccccxxccxxcccccc

--------End Timer [apply mapping plan]:  0.0

[18], [1, 13], [6, 8], [12, 7], [3, 16], [6, 2], [1, 7], [10], [0, 12], [15, 18], [12, 1], [2, 8], [3], [16], [4, 18], [1, 7], [8, 15], [4], [15, 18], [13, 3], [6], [14], [7, 8], [1, 13], [16, 4], [1], [7], [3], [8, 15], [11], [3, 16], [2, 8], [12, 14], [15, 10], [18], [6, 8], [17, 11], [7, 15], [14, 1], [3, 5], [2], [8, 16], [1, 7], [11, 10], [19], [9, 5], [12, 7], [16, 15], [19, 3], [5, 4], [12], [1, 7], [16, 5], [6, 2], [13], [7, 16], [14, 1], [15, 11], [8, 17], [19], [12, 7], [14, 6], [13, 9], [1, 3], [2, 17], [11, 10], [3, 4], [1, 13], [18, 10], [6], [9], [12, 1], [4, 18], [3], [7], [16], [19, 1], [8, 17], [9, 5], [19], [12], [10], [14, 6], [3, 5], [7, 15], [13, 9], [2, 8], [5], [9], [19, 3], [12, 7], [14], [0, 19], [6, 8], [11, 18], [19], [1, 3], [0, 12], [5, 4], [0, 19], [18, 10], [7, 16], [8, 15], [3, 5], [13, 9], [19, 1], [11], [8], [14, 1], [19, 13], [15, 18], [16, 4], [7, 8], [9, 5], [3], [7, 15], [2, 17], [19, 1], [15], [1, 13], [3, 5], [8, 17], [15, 18], [18, 10], [9, 5], [13, 3], [2, 8], [14, 1], [9], [2], [3, 4], [19, 13], [8], [14, 6], [3, 5], [7, 15], [13, 9], [14], [6], [0, 19], [11, 18], [7, 16], [12, 1], [15, 10], [15], [9], [16], [19, 1], [6, 2], [2], [17, 11], [13, 3], [14, 6], [8, 16], [0, 19], [16, 15], [12, 7], [3, 4], [0], [15], [6], [16, 4], [7, 8], [11], [0, 12], [8, 15], [13, 3], [1, 7], [5, 4], [6, 2], [12], [8, 17], [14, 6], [15, 18], [12, 7], [6, 17], [3, 4], [16, 15], [0], [17, 11], [18, 10], [19, 1], [8], [19, 3], [1, 13], [6, 2], [12, 1], [8, 16], [2, 17], [11, 10], [5, 4], [14, 6], [15], [12, 14], [13, 9], [7, 8], [16, 4], [3, 5], [12], [4], [3, 16], [7, 15], [13], [14], [0, 12], [5, 4], [19, 3], [1, 7], [15, 11], [18, 10], ----End Timer [Execute Mapping]:  1.7029101848602295

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.6562397480010986

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: xccccccxccccxxcccxccxxcccxxxcxccccxcccccxcccxcccccxcccxccccxcccccccccxxccxxxcccxxxcccccxxccxcccxccccccccccxxccccccxcccxcccccccccxxccxccccxxcccccxxxccxccccccccxxxccxccccccxcccccccxcccxcccccccccxcccccxxccxxcccccc
---------------
---------------
Circuit after: xccccccxccccxxcccxccxxcccxxxcxccccxcccccxcccxcccccxcccxccccxcccccccccxxccxxxcccxxxcccccxxccxcccxccccccccccxxccccccxcccxcccccccccxxccxccccxxcccccxxxccxccccccccxxxccxccccccxcccccccxcccxcccccccccxcccccxxccxxcccccc

--------End Timer [apply mapping plan]:  0.0

[18], [1, 13], [6, 8], [12, 7], [3, 16], [6, 2], [1, 7], [10], [0, 12], [15, 18], [12, 1], [2, 8], [3], [16], [4, 18], [1, 7], [8, 15], [4], [15, 18], [13, 3], [6], [14], [7, 8], [1, 13], [16, 4], [1], [7], [3], [8, 15], [11], [3, 16], [2, 8], [12, 14], [15, 10], [18], [6, 8], [17, 11], [7, 15], [14, 1], [3, 5], [2], [8, 16], [1, 7], [11, 10], [19], [9, 5], [12, 7], [16, 15], [19, 3], [5, 4], [12], [1, 7], [16, 5], [6, 2], [13], [7, 16], [14, 1], [15, 11], [8, 17], [19], [12, 7], [14, 6], [13, 9], [1, 3], [2, 17], [11, 10], [3, 4], [1, 13], [18, 10], [6], [9], [12, 1], [4, 18], [3], [7], [16], [19, 1], [8, 17], [9, 5], [19], [12], [10], [14, 6], [3, 5], [7, 15], [13, 9], [2, 8], [5], [9], [19, 3], [12, 7], [14], [0, 19], [6, 8], [11, 18], [19], [1, 3], [0, 12], [5, 4], [0, 19], [18, 10], [7, 16], [8, 15], [3, 5], [13, 9], [19, 1], [11], [8], [14, 1], [19, 13], [15, 18], [16, 4], [7, 8], [9, 5], [3], [7, 15], [2, 17], [19, 1], [15], [1, 13], [3, 5], [8, 17], [15, 18], [18, 10], [9, 5], [13, 3], [2, 8], [14, 1], [9], [2], [3, 4], [19, 13], [8], [14, 6], [3, 5], [7, 15], [13, 9], [14], [6], [0, 19], [11, 18], [7, 16], [12, 1], [15, 10], [15], [9], [16], [19, 1], [6, 2], [2], [17, 11], [13, 3], [14, 6], [8, 16], [0, 19], [16, 15], [12, 7], [3, 4], [0], [15], [6], [16, 4], [7, 8], [11], [0, 12], [8, 15], [13, 3], [1, 7], [5, 4], [6, 2], [12], [8, 17], [14, 6], [15, 18], [12, 7], [6, 17], [3, 4], [16, 15], [0], [17, 11], [18, 10], [19, 1], [8], [19, 3], [1, 13], [6, 2], [12, 1], [8, 16], [2, 17], [11, 10], [5, 4], [14, 6], [15], [12, 14], [13, 9], [7, 8], [16, 4], [3, 5], [12], [4], [3, 16], [7, 15], [13], [14], [0, 12], [5, 4], [19, 3], [1, 7], [15, 11], [18, 10], ----End Timer [Execute Mapping]:  1.6562397480010986

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: x-x-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-x-x-x-x-x-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [315] (IBM)
 --------------------
 - qubits_num: 20, using gates: [x,cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 540


>> Solved circuit: 
Circuit Info: 
 - circuit: x-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-cx-cx-cx-x-cx-cx-x-x-cx-cx-cx-x-x-x-cx-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-cx-cx-cx-x-cx-cx-cx-cx-cx-x-cx-cx-cx-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-x-x-x-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-x-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-x-x-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-x-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-cx-cx-x-x-cx-cx-cx-cx-cx-cx 
     => total size: [210] (IBM)
 --------------------
 - qubits_num: 20, using gates: [x,cx]
 - circuit depth: 39 - (small)
 - circuit cycle: 366

Reduced: 
 - size: 105 (33.33%)
 - depth: 6 (13.33%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.14061498641967773

[19], [18], [1, 13], [6, 8], [12, 7], [15, 11], [5, 4], [3, 16], [19], [17], [5, 4], [6, 2], [15, 11], [1, 7], [19], [10], [0, 12], [15, 18], [1, 7], [2, 8], [3], [16], [0, 19], [4, 18], [9, 5], [2, 17], [12, 1], [8, 15], [4], [0, 19], [11, 10], [15, 18], [1, 7], [13, 3], [2, 17], [19], [6], [14], [7, 8], [1, 13], [16, 4], [9, 5], [11, 10], [19], [17], [1], [7], [3], [8, 15], [4, 18], [13, 9], [19], [11], [3, 16], [2, 8], [12, 14], [4, 18], [15, 10], [18], [0, 19], [6, 8], [11, 10], [7, 15], [14, 1], [3, 5], [2], [0, 19], [8, 16], [1, 7], [17, 11], [13, 9], [19], [9, 5], [12, 7], [11, 10], [16, 15], [19, 3], [11, 18], [8, 15], [5, 4], [19], [12], [1, 7], [16, 5], [11, 18], [8, 15], [6, 2], [19], [13], [7, 16], [14, 1], [15, 11], [8, 17], [19], [12, 7], [14, 6], [13, 9], [1, 3], [2, 17], [11, 10], [19], [3, 4], [16, 5], [1, 13], [15, 11], [18, 10], [12, 14], [19], [6], [9], [16, 5], [12, 1], [15, 11], [4, 18], [3], [7], [16], [19, 1], [8, 17], [9, 5], [12, 14], [4, 18], [19], [12], [0], [10], [14, 6], [3, 5], [7, 15], [13, 9], [2, 8], [5], [9], [0], [13], [19, 3], [12, 7], [4, 18], [16, 15], [17], [14], [0, 19], [1, 13], [6, 8], [16, 15], [18, 10], [19], [6], [17], [13], [1, 3], [0, 12], [5, 4], [0, 19], [11, 10], [1, 13], [16, 4], [8, 15], [3, 5], [14, 7], [0], [15, 10], [6, 2], [14, 7], [13, 9], [11, 18], [19, 1], [0], [11], [10], [8], [14, 1], [19, 13], [15, 18], [6, 2], [7, 16], [0], [15, 10], [12, 14], [7, 8], [9, 5], [0], [3], [10], [12, 14], [7, 15], [2, 17], [16, 4], [19, 1], [0], [4], [15], [1, 13], [7, 16], [3, 5], [8, 17], [18, 10], [0], [4], [15, 10], [9, 5], [13, 3], [2, 8], [14, 1], [0], [6], [9], [2], [11, 10], [3, 4], [19, 13], [7, 16], [15, 18], [0], [8], [14, 6], [3, 5], [7, 15], [13, 9], [11, 10], [14], [6], [0, 19], [11, 18], [7, 16], [12, 1], [8, 17], [15, 10], [0], [15], [9], [16], [19, 1], [8, 17], [6, 2], [18, 10], [0], [2], [17, 11], [13, 3], [14, 6], [8, 16], [0, 19], [2, 17], [16, 15], [12, 7], [13, 9], [3, 4], [0], [15], [6], [18, 10], [2, 17], [16, 4], [7, 8], [11], [0, 12], [8, 15], [13, 3], [1, 7], [5, 4], [6, 2], [12], [8, 17], [3, 5], [14, 6], [15, 18], [13, 9], [12, 7], [6, 17], [3, 4], [16, 15], [12], [0], [17, 11], [3, 5], [16, 4], [18, 10], [19, 1], [12], [8], [19, 3], [1, 13], [16, 4], [6, 2], [12, 1], [8, 16], [2, 17], [11, 10], [5, 4], [14, 6], [15], [12, 14], [13, 9], [6, 2], [11, 10], [7, 8], [16, 4], [3, 5], [12], [4], [8, 17], [3, 16], [7, 15], [11, 10], [13], [14], [0, 12], [5, 4], [19, 3], [1, 7], [15, 11], [8, 17], [18, 10], [6, 2], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[6, 10]
[5, 12]
[13, 18]
[22, 29]
[25, 34]
[24, 41]
[30, 42]
[49, 56]
[59, 66]
[50, 70]
[77, 84]
[78, 85]
[102, 110]
[104, 112]
[106, 120]
[113, 121]
[121, 137]
[138, 144]
[159, 163]
[162, 174]
[178, 184]
[193, 211]
[208, 219]
[211, 224]
[226, 233]
[235, 251]
[243, 252]
[246, 267]
[264, 275]
[276, 283]
[288, 295]
[295, 304]
[301, 312]
[294, 314]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[0, 8]
[8, 14]
[35, 43]
[43, 51]
[80, 87]
[87, 93]
[93, 100]
[100, 107]
[124, 133]
[139, 148]
[160, 167]
[167, 176]
[176, 181]
[181, 189]
[189, 197]
[190, 198]
[197, 204]
[204, 213]
[228, 236]
[272, 279]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[91, 99, 104]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 

[134, 142, 149]
[169, 177, 183]

------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[18, 26, 32]
[61, 69, 74]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[0, 8]
[8, 14]
[35, 43]
[43, 51]
[80, 87]
[87, 93]
[93, 100]
[100, 107]
[124, 133]
[139, 148]
[160, 167]
[167, 176]
[176, 181]
[181, 189]
[189, 197]
[190, 198]
[197, 204]
[204, 213]
[228, 236]
[272, 279]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[6, 10]
[5, 12]
[13, 18]
[22, 29]
[25, 34]
[24, 41]
[30, 42]
[49, 56]
[59, 66]
[50, 70]
[77, 84]
[78, 85]
[102, 110]
[104, 112]
[106, 120]
[113, 121]
[121, 137]
[138, 144]
[159, 163]
[162, 174]
[178, 184]
[193, 211]
[208, 219]
[211, 224]
[226, 233]
[235, 251]
[243, 252]
[246, 267]
[264, 275]
[276, 283]
[288, 295]
[295, 304]
[301, 312]
[294, 314]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.3283567428588867

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 8] xx => I, Pos: [0, 8] xx => I, Pos: [5, 12] cc => I, Pos: [5, 12] cc => I, Pos: [6, 10] cc => I, Pos: [6, 10] cc => I, Pos: [8, 14] xx => I, Pos: [8, 14] xx => I, Pos: [13, 18] cc => I, Pos: [13, 18] cc => I, Pos: [18, 26, 32] ccc => cc, Pos: [22, 29] cc => I, Pos: [22, 29] cc => I, Pos: [24, 41] cc => I, Pos: [24, 41] cc => I, Pos: [25, 34] cc => I, Pos: [25, 34] cc => I, Pos: [30, 42] cc => I, Pos: [30, 42] cc => I, Pos: [35, 43] xx => I, Pos: [35, 43] xx => I, Pos: [43, 51] xx => I, Pos: [43, 51] xx => I, Pos: [49, 56] cc => I, Pos: [49, 56] cc => I, Pos: [50, 70] cc => I, Pos: [50, 70] cc => I, Pos: [59, 66] cc => I, Pos: [59, 66] cc => I, Pos: [61, 69, 74] ccc => cc, Pos: [77, 84] cc => I, Pos: [77, 84] cc => I, Pos: [78, 85] cc => I, Pos: [78, 85] cc => I, Pos: [80, 87] xx => I, Pos: [80, 87] xx => I, Pos: [87, 93] xx => I, Pos: [87, 93] xx => I, Pos: [91, 99, 104] ccc => cc, Pos: [93, 100] xx => I, Pos: [93, 100] xx => I, Pos: [100, 107] xx => I, Pos: [100, 107] xx => I, Pos: [102, 110] cc => I, Pos: [102, 110] cc => I, Pos: [104, 112] cc => I, Pos: [104, 112] cc => I, Pos: [106, 120] cc => I, Pos: [106, 120] cc => I, Pos: [113, 121] cc => I, Pos: [113, 121] cc => I, Pos: [121, 137] cc => I, Pos: [121, 137] cc => I, Pos: [124, 133] xx => I, Pos: [124, 133] xx => I, Pos: [134, 142, 149] xcx => c, Pos: [138, 144] cc => I, Pos: [138, 144] cc => I, Pos: [139, 148] xx => I, Pos: [139, 148] xx => I, Pos: [159, 163] cc => I, Pos: [159, 163] cc => I, Pos: [160, 167] xx => I, Pos: [160, 167] xx => I, Pos: [162, 174] cc => I, Pos: [162, 174] cc => I, Pos: [167, 176] xx => I, Pos: [167, 176] xx => I, Pos: [169, 177, 183] xcx => c, Pos: [176, 181] xx => I, Pos: [176, 181] xx => I, Pos: [178, 184] cc => I, Pos: [178, 184] cc => I, Pos: [181, 189] xx => I, Pos: [181, 189] xx => I, Pos: [189, 197] xx => I, Pos: [189, 197] xx => I, Pos: [190, 198] xx => I, Pos: [190, 198] xx => I, Pos: [193, 211] cc => I, Pos: [193, 211] cc => I, Pos: [197, 204] xx => I, Pos: [197, 204] xx => I, Pos: [204, 213] xx => I, Pos: [204, 213] xx => I, Pos: [208, 219] cc => I, Pos: [208, 219] cc => I, Pos: [211, 224] cc => I, Pos: [211, 224] cc => I, Pos: [226, 233] cc => I, Pos: [226, 233] cc => I, Pos: [228, 236] xx => I, Pos: [228, 236] xx => I, Pos: [235, 251] cc => I, Pos: [235, 251] cc => I, Pos: [243, 252] cc => I, Pos: [243, 252] cc => I, Pos: [246, 267] cc => I, Pos: [246, 267] cc => I, Pos: [264, 275] cc => I, Pos: [264, 275] cc => I, Pos: [272, 279] xx => I, Pos: [272, 279] xx => I, Pos: [276, 283] cc => I, Pos: [276, 283] cc => I, Pos: [288, 295] cc => I, Pos: [288, 295] cc => I, Pos: [294, 314] cc => I, Pos: [294, 314] cc => I, Pos: [295, 304] cc => I, Pos: [295, 304] cc => I, Pos: [301, 312] cc => I, Pos: [301, 312] cc => I]

--------End Timer [Generate Plans]:  0.10936760902404785

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 8] xx => I,
 Pos: [5, 12] cc => I,
 Pos: [6, 10] cc => I,
 Pos: [13, 18] cc => I,
 Pos: [22, 29] cc => I,
 Pos: [24, 41] cc => I,
 Pos: [25, 34] cc => I,
 Pos: [30, 42] cc => I,
 Pos: [43, 51] xx => I,
 Pos: [49, 56] cc => I,
 Pos: [50, 70] cc => I,
 Pos: [59, 66] cc => I,
 Pos: [61, 69, 74] ccc => cc,
 Pos: [77, 84] cc => I,
 Pos: [78, 85] cc => I,
 Pos: [87, 93] xx => I,
 Pos: [104, 112] cc => I,
 Pos: [100, 107] xx => I,
 Pos: [102, 110] cc => I,
 Pos: [106, 120] cc => I,
 Pos: [121, 137] cc => I,
 Pos: [124, 133] xx => I,
 Pos: [134, 142, 149] xcx => c,
 Pos: [138, 144] cc => I,
 Pos: [139, 148] xx => I,
 Pos: [159, 163] cc => I,
 Pos: [167, 176] xx => I,
 Pos: [162, 174] cc => I,
 Pos: [169, 177, 183] xcx => c,
 Pos: [178, 184] cc => I,
 Pos: [189, 197] xx => I,
 Pos: [190, 198] xx => I,
 Pos: [193, 211] cc => I,
 Pos: [204, 213] xx => I,
 Pos: [208, 219] cc => I,
 Pos: [226, 233] cc => I,
 Pos: [228, 236] xx => I,
 Pos: [235, 251] cc => I,
 Pos: [243, 252] cc => I,
 Pos: [246, 267] cc => I,
 Pos: [264, 275] cc => I,
 Pos: [272, 279] xx => I,
 Pos: [276, 283] cc => I,
 Pos: [288, 295] cc => I,
 Pos: [294, 314] cc => I,
 Pos: [301, 312] cc => I]
Change: 46, Saving: 46

Circuit before: xxccccccxxccccxxccccxxccccccxccccccxxxcccccxxxxxcccxxcccccxccccccxcccccxccccccccxxcccccxxccccxccccccxccccccxxxccccxxxcccccxxxxcccccxxxxccccxxcccccxxxxccccccccccxccccccxxxxcccccxccccxxxcccccxxxcccccxxcccccxxxxcccccxxcccccxxccccccxxxxccccxxccccccccccxxxccccxccccccxcccccccccxxcccccxxccccccccccxcccccccxxccccxxcccccccc
---------------
Apply:  Pos: [0, 8] xx => I
Apply:  Pos: [5, 12] cc => I
Apply:  Pos: [6, 10] cc => I
Apply:  Pos: [13, 18] cc => I
Apply:  Pos: [22, 29] cc => I
Apply:  Pos: [24, 41] cc => I
Apply:  Pos: [25, 34] cc => I
Apply:  Pos: [30, 42] cc => I
Apply:  Pos: [43, 51] xx => I
Apply:  Pos: [49, 56] cc => I
Apply:  Pos: [50, 70] cc => I
Apply:  Pos: [59, 66] cc => I
Apply:  Pos: [61, 69, 74] ccc => cc
Apply:  Pos: [77, 84] cc => I
Apply:  Pos: [78, 85] cc => I
Apply:  Pos: [87, 93] xx => I
Apply:  Pos: [104, 112] cc => I
Apply:  Pos: [100, 107] xx => I
Apply:  Pos: [102, 110] cc => I
Apply:  Pos: [106, 120] cc => I
Apply:  Pos: [121, 137] cc => I
Apply:  Pos: [124, 133] xx => I
Apply:  Pos: [134, 142, 149] xcx => c
Apply:  Pos: [138, 144] cc => I
Apply:  Pos: [139, 148] xx => I
Apply:  Pos: [159, 163] cc => I
Apply:  Pos: [167, 176] xx => I
Apply:  Pos: [162, 174] cc => I
Apply:  Pos: [169, 177, 183] xcx => c
Apply:  Pos: [178, 184] cc => I
Apply:  Pos: [189, 197] xx => I
Apply:  Pos: [190, 198] xx => I
Apply:  Pos: [193, 211] cc => I
Apply:  Pos: [204, 213] xx => I
Apply:  Pos: [208, 219] cc => I
Apply:  Pos: [226, 233] cc => I
Apply:  Pos: [228, 236] xx => I
Apply:  Pos: [235, 251] cc => I
Apply:  Pos: [243, 252] cc => I
Apply:  Pos: [246, 267] cc => I
Apply:  Pos: [264, 275] cc => I
Apply:  Pos: [272, 279] xx => I
Apply:  Pos: [276, 283] cc => I
Apply:  Pos: [288, 295] cc => I
Apply:  Pos: [294, 314] cc => I
Apply:  Pos: [301, 312] cc => I
---------------
Circuit after: xccccxcxxcccxxcccxcccxxxcccxxxxcxccccxcccccxcccxcccccxxcccxcccccccccccccxxccxxxcccxxxcccccxxcccxcccxxcccccccccxccccxcxccccccxxccccxcccccccccxxxcccxccccxxcccccxxxccxccccccccxxxccxccccccxcccccccxcccxccccccccxcccccxxcccxxcccccc

--------End Timer [apply mapping plan]:  0.015624284744262695

[18], [1, 13], [6, 8], [12, 7], [3, 16], [17], [6, 2], [19], [10], [0, 12], [15, 18], [2, 8], [3], [16], [4, 18], [12, 1], [8, 15], [4], [15, 18], [1, 7], [13, 3], [19], [6], [14], [7, 8], [1, 13], [16, 4], [17], [1], [7], [3], [8, 15], [11], [3, 16], [2, 8], [12, 14], [15, 10], [18], [6, 8], [17, 11], [7, 15], [14, 1], [3, 5], [2], [8, 16], [1, 7], [11, 10], [19], [9, 5], [12, 7], [16, 15], [19, 3], [5, 4], [19], [12], [1, 7], [16, 5], [6, 2], [13], [7, 16], [14, 1], [15, 11], [8, 17], [12, 7], [14, 6], [13, 9], [1, 3], [2, 17], [11, 10], [3, 4], [1, 13], [18, 10], [6], [9], [12, 1], [4, 18], [3], [7], [16], [19, 1], [8, 17], [9, 5], [19], [12], [10], [14, 6], [3, 5], [7, 15], [13, 9], [2, 8], [5], [9], [1, 13], [19, 3], [12, 7], [14], [0, 19], [6, 8], [18, 10], [19], [6], [1, 3], [0, 12], [5, 4], [0, 19], [11, 10], [1, 13], [16, 4], [8, 15], [3, 5], [0], [15, 10], [13, 9], [11, 18], [19, 1], [11], [15, 10], [8], [14, 1], [19, 13], [15, 18], [7, 16], [7, 8], [9, 5], [0], [3], [7, 15], [2, 17], [16, 4], [19, 1], [15], [1, 13], [3, 5], [8, 17], [18, 10], [15, 10], [9, 5], [13, 3], [2, 8], [14, 1], [6], [9], [2], [3, 4], [19, 13], [15, 18], [8], [14, 6], [3, 5], [7, 15], [13, 9], [14], [6], [0, 19], [11, 18], [7, 16], [12, 1], [15, 10], [15], [9], [16], [19, 1], [6, 2], [2], [17, 11], [13, 3], [14, 6], [8, 16], [0, 19], [16, 15], [12, 7], [3, 4], [0], [15], [6], [16, 4], [7, 8], [11], [0, 12], [8, 15], [13, 3], [1, 7], [5, 4], [6, 2], [12], [8, 17], [14, 6], [15, 18], [12, 7], [6, 17], [3, 4], [16, 15], [0], [17, 11], [18, 10], [19, 1], [8], [19, 3], [1, 13], [6, 2], [12, 1], [8, 16], [2, 17], [5, 4], [14, 6], [15], [12, 14], [13, 9], [7, 8], [16, 4], [3, 5], [12], [4], [3, 16], [7, 15], [11, 10], [13], [14], [0, 12], [5, 4], [19, 3], [1, 7], [15, 11], [18, 10], ----End Timer [Execute Mapping]:  2.4533486366271973

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[92, 106]
[111, 116]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[7, 21]
[5, 27]
[21, 47]
[110, 124]
[100, 140]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[107, 122, 128]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[7, 21]
[5, 27]
[21, 47]
[110, 124]
[100, 140]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[92, 106]
[111, 116]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.6719012260437012

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [5, 27] xx => I, Pos: [5, 27] xx => I, Pos: [7, 21] xx => I, Pos: [7, 21] xx => I, Pos: [21, 47] xx => I, Pos: [21, 47] xx => I, Pos: [92, 106] cc => I, Pos: [92, 106] cc => I, Pos: [100, 140] xx => I, Pos: [100, 140] xx => I, Pos: [107, 122, 128] ccc => cc, Pos: [110, 124] xx => I, Pos: [110, 124] xx => I, Pos: [111, 116] cc => I, Pos: [111, 116] cc => I]

--------End Timer [Generate Plans]:  0.01561880111694336

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [5, 27] xx => I,
 Pos: [7, 21] xx => I,
 Pos: [92, 106] cc => I,
 Pos: [100, 140] xx => I,
 Pos: [107, 122, 128] ccc => cc,
 Pos: [110, 124] xx => I,
 Pos: [111, 116] cc => I]
Change: 7, Saving: 7

Circuit before: xccccxcxxcccxxcccxcccxxxcccxxxxcxccccxcccccxcccxcccccxxcccxcccccccccccccxxccxxxcccxxxcccccxxcccxcccxxcccccccccxccccxcxccccccxxccccxcccccccccxxxcccxccccxxcccccxxxccxccccccccxxxccxccccccxcccccccxcccxccccccccxcccccxxcccxxcccccc
---------------
Apply:  Pos: [5, 27] xx => I
Apply:  Pos: [7, 21] xx => I
Apply:  Pos: [92, 106] cc => I
Apply:  Pos: [100, 140] xx => I
Apply:  Pos: [107, 122, 128] ccc => cc
Apply:  Pos: [110, 124] xx => I
Apply:  Pos: [111, 116] cc => I
---------------
Circuit after: xcccccxcccxxcccxcccxxcccxxxcxccccxcccccxcccxcccccxxcccxcccccccccccccxxccxxxcccxxxcccccxxccxcccxcccccccccccxxccccccxcccxcccccccccxxcccxccccxxcccccxxxccxccccccccxxxccxccccccxcccccccxcccxccccccccxcccccxxcccxxcccccc

--------End Timer [apply mapping plan]:  0.0

[18], [1, 13], [6, 8], [12, 7], [3, 16], [6, 2], [10], [0, 12], [15, 18], [2, 8], [3], [16], [4, 18], [12, 1], [8, 15], [4], [15, 18], [1, 7], [13, 3], [6], [14], [7, 8], [1, 13], [16, 4], [1], [7], [3], [8, 15], [11], [3, 16], [2, 8], [12, 14], [15, 10], [18], [6, 8], [17, 11], [7, 15], [14, 1], [3, 5], [2], [8, 16], [1, 7], [11, 10], [19], [9, 5], [12, 7], [16, 15], [19, 3], [5, 4], [19], [12], [1, 7], [16, 5], [6, 2], [13], [7, 16], [14, 1], [15, 11], [8, 17], [12, 7], [14, 6], [13, 9], [1, 3], [2, 17], [11, 10], [3, 4], [1, 13], [18, 10], [6], [9], [12, 1], [4, 18], [3], [7], [16], [19, 1], [8, 17], [9, 5], [19], [12], [10], [14, 6], [3, 5], [7, 15], [13, 9], [2, 8], [5], [9], [19, 3], [12, 7], [14], [0, 19], [6, 8], [18, 10], [19], [1, 3], [0, 12], [5, 4], [0, 19], [11, 10], [7, 16], [8, 15], [3, 5], [13, 9], [11, 18], [19, 1], [11], [8], [14, 1], [19, 13], [15, 18], [7, 8], [16, 4], [9, 5], [3], [7, 15], [2, 17], [19, 1], [15], [1, 13], [3, 5], [8, 17], [15, 10], [18, 10], [9, 5], [13, 3], [2, 8], [14, 1], [9], [2], [3, 4], [19, 13], [15, 18], [8], [14, 6], [3, 5], [7, 15], [13, 9], [14], [6], [0, 19], [11, 18], [7, 16], [12, 1], [15, 10], [15], [9], [16], [19, 1], [6, 2], [2], [17, 11], [13, 3], [14, 6], [8, 16], [0, 19], [16, 15], [12, 7], [3, 4], [0], [15], [6], [16, 4], [7, 8], [11], [0, 12], [8, 15], [13, 3], [1, 7], [5, 4], [6, 2], [12], [8, 17], [14, 6], [15, 18], [12, 7], [6, 17], [3, 4], [16, 15], [0], [17, 11], [18, 10], [19, 1], [8], [19, 3], [1, 13], [6, 2], [12, 1], [8, 16], [2, 17], [5, 4], [14, 6], [15], [12, 14], [13, 9], [7, 8], [16, 4], [3, 5], [12], [4], [3, 16], [7, 15], [11, 10], [13], [14], [0, 12], [5, 4], [19, 3], [1, 7], [15, 11], [18, 10], ----End Timer [Execute Mapping]:  1.6875200271606445

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[93, 99, 104]
[122, 123, 132]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.6408271789550781

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [93, 99, 104] ccc => cc, Pos: [122, 123, 132] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [93, 99, 104] ccc => cc, Pos: [122, 123, 132] ccc => cc]
Change: 2, Saving: 3

Circuit before: xcccccxcccxxcccxcccxxcccxxxcxccccxcccccxcccxcccccxxcccxcccccccccccccxxccxxxcccxxxcccccxxccxcccxcccccccccccxxccccccxcccxcccccccccxxcccxccccxxcccccxxxccxccccccccxxxccxccccccxcccccccxcccxccccccccxcccccxxcccxxcccccc
---------------
Apply:  Pos: [93, 99, 104] ccc => cc
Apply:  Pos: [122, 123, 132] ccc => cc
---------------
Circuit after: xcccccxcccxxcccxcccxxcccxxxcxccccxcccccxcccxcccccxxcccxcccccccccccccxxccxxxcccxxxcccccxxccxcccxccccccccccxxccccccxcccxcccccccccxxccxccccxxcccccxxxccxccccccccxxxccxccccccxcccccccxcccxccccccccxcccccxxcccxxcccccc

--------End Timer [apply mapping plan]:  0.0

[18], [1, 13], [6, 8], [12, 7], [3, 16], [6, 2], [10], [0, 12], [15, 18], [2, 8], [3], [16], [4, 18], [12, 1], [8, 15], [4], [15, 18], [1, 7], [13, 3], [6], [14], [7, 8], [1, 13], [16, 4], [1], [7], [3], [8, 15], [11], [3, 16], [2, 8], [12, 14], [15, 10], [18], [6, 8], [17, 11], [7, 15], [14, 1], [3, 5], [2], [8, 16], [1, 7], [11, 10], [19], [9, 5], [12, 7], [16, 15], [19, 3], [5, 4], [19], [12], [1, 7], [16, 5], [6, 2], [13], [7, 16], [14, 1], [15, 11], [8, 17], [12, 7], [14, 6], [13, 9], [1, 3], [2, 17], [11, 10], [3, 4], [1, 13], [18, 10], [6], [9], [12, 1], [4, 18], [3], [7], [16], [19, 1], [8, 17], [9, 5], [19], [12], [10], [14, 6], [3, 5], [7, 15], [13, 9], [2, 8], [5], [9], [19, 3], [12, 7], [14], [0, 19], [6, 8], [11, 18], [19], [1, 3], [0, 12], [5, 4], [0, 19], [18, 10], [7, 16], [8, 15], [3, 5], [13, 9], [19, 1], [11], [8], [14, 1], [19, 13], [15, 18], [7, 8], [16, 4], [9, 5], [3], [7, 15], [2, 17], [19, 1], [15], [1, 13], [3, 5], [8, 17], [15, 18], [18, 10], [9, 5], [13, 3], [2, 8], [14, 1], [9], [2], [3, 4], [19, 13], [8], [14, 6], [3, 5], [7, 15], [13, 9], [14], [6], [0, 19], [11, 18], [7, 16], [12, 1], [15, 10], [15], [9], [16], [19, 1], [6, 2], [2], [17, 11], [13, 3], [14, 6], [8, 16], [0, 19], [16, 15], [12, 7], [3, 4], [0], [15], [6], [16, 4], [7, 8], [11], [0, 12], [8, 15], [13, 3], [1, 7], [5, 4], [6, 2], [12], [8, 17], [14, 6], [15, 18], [12, 7], [6, 17], [3, 4], [16, 15], [0], [17, 11], [18, 10], [19, 1], [8], [19, 3], [1, 13], [6, 2], [12, 1], [8, 16], [2, 17], [5, 4], [14, 6], [15], [12, 14], [13, 9], [7, 8], [16, 4], [3, 5], [12], [4], [3, 16], [7, 15], [11, 10], [13], [14], [0, 12], [5, 4], [19, 3], [1, 7], [15, 11], [18, 10], ----End Timer [Execute Mapping]:  1.6408271789550781

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.5939090251922607

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: xcccccxcccxxcccxcccxxcccxxxcxccccxcccccxcccxcccccxxcccxcccccccccccccxxccxxxcccxxxcccccxxccxcccxccccccccccxxccccccxcccxcccccccccxxccxccccxxcccccxxxccxccccccccxxxccxccccccxcccccccxcccxccccccccxcccccxxcccxxcccccc
---------------
---------------
Circuit after: xcccccxcccxxcccxcccxxcccxxxcxccccxcccccxcccxcccccxxcccxcccccccccccccxxccxxxcccxxxcccccxxccxcccxccccccccccxxccccccxcccxcccccccccxxccxccccxxcccccxxxccxccccccccxxxccxccccccxcccccccxcccxccccccccxcccccxxcccxxcccccc

--------End Timer [apply mapping plan]:  0.0

[18], [1, 13], [6, 8], [12, 7], [3, 16], [6, 2], [10], [0, 12], [15, 18], [2, 8], [3], [16], [4, 18], [12, 1], [8, 15], [4], [15, 18], [1, 7], [13, 3], [6], [14], [7, 8], [1, 13], [16, 4], [1], [7], [3], [8, 15], [11], [3, 16], [2, 8], [12, 14], [15, 10], [18], [6, 8], [17, 11], [7, 15], [14, 1], [3, 5], [2], [8, 16], [1, 7], [11, 10], [19], [9, 5], [12, 7], [16, 15], [19, 3], [5, 4], [19], [12], [1, 7], [16, 5], [6, 2], [13], [7, 16], [14, 1], [15, 11], [8, 17], [12, 7], [14, 6], [13, 9], [1, 3], [2, 17], [11, 10], [3, 4], [1, 13], [18, 10], [6], [9], [12, 1], [4, 18], [3], [7], [16], [19, 1], [8, 17], [9, 5], [19], [12], [10], [14, 6], [3, 5], [7, 15], [13, 9], [2, 8], [5], [9], [19, 3], [12, 7], [14], [0, 19], [6, 8], [11, 18], [19], [1, 3], [0, 12], [5, 4], [0, 19], [18, 10], [7, 16], [8, 15], [3, 5], [13, 9], [19, 1], [11], [8], [14, 1], [19, 13], [15, 18], [7, 8], [16, 4], [9, 5], [3], [7, 15], [2, 17], [19, 1], [15], [1, 13], [3, 5], [8, 17], [15, 18], [18, 10], [9, 5], [13, 3], [2, 8], [14, 1], [9], [2], [3, 4], [19, 13], [8], [14, 6], [3, 5], [7, 15], [13, 9], [14], [6], [0, 19], [11, 18], [7, 16], [12, 1], [15, 10], [15], [9], [16], [19, 1], [6, 2], [2], [17, 11], [13, 3], [14, 6], [8, 16], [0, 19], [16, 15], [12, 7], [3, 4], [0], [15], [6], [16, 4], [7, 8], [11], [0, 12], [8, 15], [13, 3], [1, 7], [5, 4], [6, 2], [12], [8, 17], [14, 6], [15, 18], [12, 7], [6, 17], [3, 4], [16, 15], [0], [17, 11], [18, 10], [19, 1], [8], [19, 3], [1, 13], [6, 2], [12, 1], [8, 16], [2, 17], [5, 4], [14, 6], [15], [12, 14], [13, 9], [7, 8], [16, 4], [3, 5], [12], [4], [3, 16], [7, 15], [11, 10], [13], [14], [0, 12], [5, 4], [19, 3], [1, 7], [15, 11], [18, 10], ----End Timer [Execute Mapping]:  1.5939090251922607

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: x-x-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-x-x-x-x-x-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [315] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx,x]
 - circuit depth: 45 - (small)
 - circuit cycle: 540


>> Solved circuit: 
Circuit Info: 
 - circuit: x-cx-cx-cx-cx-cx-x-cx-cx-cx-x-x-cx-cx-cx-x-cx-cx-cx-x-x-cx-cx-cx-x-x-x-cx-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-x-x-x-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-x-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-x-x-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-x-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx 
     => total size: [209] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx,x]
 - circuit depth: 39 - (small)
 - circuit cycle: 364

Reduced: 
 - size: 106 (33.65%)
 - depth: 6 (13.33%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.12499070167541504

[19], [18], [1, 13], [6, 8], [12, 7], [15, 11], [5, 4], [3, 16], [19], [17], [5, 4], [6, 2], [15, 11], [1, 7], [19], [10], [0, 12], [15, 18], [1, 7], [2, 8], [3], [16], [0, 19], [4, 18], [9, 5], [2, 17], [12, 1], [8, 15], [4], [0, 19], [11, 10], [15, 18], [1, 7], [13, 3], [2, 17], [19], [6], [14], [7, 8], [1, 13], [16, 4], [9, 5], [11, 10], [19], [17], [1], [7], [3], [8, 15], [4, 18], [13, 9], [19], [11], [3, 16], [2, 8], [12, 14], [4, 18], [15, 10], [18], [0, 19], [6, 8], [11, 10], [7, 15], [14, 1], [3, 5], [2], [0, 19], [8, 16], [1, 7], [17, 11], [13, 9], [19], [9, 5], [12, 7], [11, 10], [16, 15], [19, 3], [11, 18], [8, 15], [5, 4], [19], [12], [1, 7], [16, 5], [11, 18], [8, 15], [6, 2], [19], [13], [7, 16], [14, 1], [15, 11], [8, 17], [19], [12, 7], [14, 6], [13, 9], [1, 3], [2, 17], [11, 10], [19], [3, 4], [16, 5], [1, 13], [15, 11], [18, 10], [12, 14], [19], [6], [9], [16, 5], [12, 1], [15, 11], [4, 18], [3], [7], [16], [19, 1], [8, 17], [9, 5], [12, 14], [4, 18], [19], [12], [0], [10], [14, 6], [3, 5], [7, 15], [13, 9], [2, 8], [5], [9], [0], [13], [19, 3], [12, 7], [4, 18], [16, 15], [17], [14], [0, 19], [1, 13], [6, 8], [16, 15], [18, 10], [19], [6], [17], [13], [1, 3], [0, 12], [5, 4], [0, 19], [11, 10], [1, 13], [16, 4], [8, 15], [3, 5], [14, 7], [0], [15, 10], [6, 2], [14, 7], [13, 9], [11, 18], [19, 1], [0], [11], [10], [8], [14, 1], [19, 13], [15, 18], [6, 2], [7, 16], [0], [15, 10], [12, 14], [7, 8], [9, 5], [0], [3], [10], [12, 14], [7, 15], [2, 17], [16, 4], [19, 1], [0], [4], [15], [1, 13], [7, 16], [3, 5], [8, 17], [18, 10], [0], [4], [15, 10], [9, 5], [13, 3], [2, 8], [14, 1], [0], [6], [9], [2], [11, 10], [3, 4], [19, 13], [7, 16], [15, 18], [0], [8], [14, 6], [3, 5], [7, 15], [13, 9], [11, 10], [14], [6], [0, 19], [11, 18], [7, 16], [12, 1], [8, 17], [15, 10], [0], [15], [9], [16], [19, 1], [8, 17], [6, 2], [18, 10], [0], [2], [17, 11], [13, 3], [14, 6], [8, 16], [0, 19], [2, 17], [16, 15], [12, 7], [13, 9], [3, 4], [0], [15], [6], [18, 10], [2, 17], [16, 4], [7, 8], [11], [0, 12], [8, 15], [13, 3], [1, 7], [5, 4], [6, 2], [12], [8, 17], [3, 5], [14, 6], [15, 18], [13, 9], [12, 7], [6, 17], [3, 4], [16, 15], [12], [0], [17, 11], [3, 5], [16, 4], [18, 10], [19, 1], [12], [8], [19, 3], [1, 13], [16, 4], [6, 2], [12, 1], [8, 16], [2, 17], [11, 10], [5, 4], [14, 6], [15], [12, 14], [13, 9], [6, 2], [11, 10], [7, 8], [16, 4], [3, 5], [12], [4], [8, 17], [3, 16], [7, 15], [11, 10], [13], [14], [0, 12], [5, 4], [19, 3], [1, 7], [15, 11], [8, 17], [18, 10], [6, 2], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[6, 10]
[5, 12]
[13, 18]
[22, 29]
[25, 34]
[24, 41]
[30, 42]
[49, 56]
[59, 66]
[50, 70]
[77, 84]
[78, 85]
[102, 110]
[104, 112]
[106, 120]
[113, 121]
[121, 137]
[138, 144]
[159, 163]
[162, 174]
[178, 184]
[193, 211]
[208, 219]
[211, 224]
[226, 233]
[235, 251]
[243, 252]
[246, 267]
[264, 275]
[276, 283]
[288, 295]
[295, 304]
[301, 312]
[294, 314]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[0, 8]
[8, 14]
[35, 43]
[43, 51]
[80, 87]
[87, 93]
[93, 100]
[100, 107]
[124, 133]
[139, 148]
[160, 167]
[167, 176]
[176, 181]
[181, 189]
[189, 197]
[190, 198]
[197, 204]
[204, 213]
[228, 236]
[272, 279]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[91, 99, 104]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 

[134, 142, 149]
[169, 177, 183]

------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[18, 26, 32]
[61, 69, 74]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[0, 8]
[8, 14]
[35, 43]
[43, 51]
[80, 87]
[87, 93]
[93, 100]
[100, 107]
[124, 133]
[139, 148]
[160, 167]
[167, 176]
[176, 181]
[181, 189]
[189, 197]
[190, 198]
[197, 204]
[204, 213]
[228, 236]
[272, 279]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[6, 10]
[5, 12]
[13, 18]
[22, 29]
[25, 34]
[24, 41]
[30, 42]
[49, 56]
[59, 66]
[50, 70]
[77, 84]
[78, 85]
[102, 110]
[104, 112]
[106, 120]
[113, 121]
[121, 137]
[138, 144]
[159, 163]
[162, 174]
[178, 184]
[193, 211]
[208, 219]
[211, 224]
[226, 233]
[235, 251]
[243, 252]
[246, 267]
[264, 275]
[276, 283]
[288, 295]
[295, 304]
[301, 312]
[294, 314]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.422281503677368

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 8] xx => I, Pos: [0, 8] xx => I, Pos: [5, 12] cc => I, Pos: [5, 12] cc => I, Pos: [6, 10] cc => I, Pos: [6, 10] cc => I, Pos: [8, 14] xx => I, Pos: [8, 14] xx => I, Pos: [13, 18] cc => I, Pos: [13, 18] cc => I, Pos: [18, 26, 32] ccc => cc, Pos: [22, 29] cc => I, Pos: [22, 29] cc => I, Pos: [24, 41] cc => I, Pos: [24, 41] cc => I, Pos: [25, 34] cc => I, Pos: [25, 34] cc => I, Pos: [30, 42] cc => I, Pos: [30, 42] cc => I, Pos: [35, 43] xx => I, Pos: [35, 43] xx => I, Pos: [43, 51] xx => I, Pos: [43, 51] xx => I, Pos: [49, 56] cc => I, Pos: [49, 56] cc => I, Pos: [50, 70] cc => I, Pos: [50, 70] cc => I, Pos: [59, 66] cc => I, Pos: [59, 66] cc => I, Pos: [61, 69, 74] ccc => cc, Pos: [77, 84] cc => I, Pos: [77, 84] cc => I, Pos: [78, 85] cc => I, Pos: [78, 85] cc => I, Pos: [80, 87] xx => I, Pos: [80, 87] xx => I, Pos: [87, 93] xx => I, Pos: [87, 93] xx => I, Pos: [91, 99, 104] ccc => cc, Pos: [93, 100] xx => I, Pos: [93, 100] xx => I, Pos: [100, 107] xx => I, Pos: [100, 107] xx => I, Pos: [102, 110] cc => I, Pos: [102, 110] cc => I, Pos: [104, 112] cc => I, Pos: [104, 112] cc => I, Pos: [106, 120] cc => I, Pos: [106, 120] cc => I, Pos: [113, 121] cc => I, Pos: [113, 121] cc => I, Pos: [121, 137] cc => I, Pos: [121, 137] cc => I, Pos: [124, 133] xx => I, Pos: [124, 133] xx => I, Pos: [134, 142, 149] xcx => c, Pos: [138, 144] cc => I, Pos: [138, 144] cc => I, Pos: [139, 148] xx => I, Pos: [139, 148] xx => I, Pos: [159, 163] cc => I, Pos: [159, 163] cc => I, Pos: [160, 167] xx => I, Pos: [160, 167] xx => I, Pos: [162, 174] cc => I, Pos: [162, 174] cc => I, Pos: [167, 176] xx => I, Pos: [167, 176] xx => I, Pos: [169, 177, 183] xcx => c, Pos: [176, 181] xx => I, Pos: [176, 181] xx => I, Pos: [178, 184] cc => I, Pos: [178, 184] cc => I, Pos: [181, 189] xx => I, Pos: [181, 189] xx => I, Pos: [189, 197] xx => I, Pos: [189, 197] xx => I, Pos: [190, 198] xx => I, Pos: [190, 198] xx => I, Pos: [193, 211] cc => I, Pos: [193, 211] cc => I, Pos: [197, 204] xx => I, Pos: [197, 204] xx => I, Pos: [204, 213] xx => I, Pos: [204, 213] xx => I, Pos: [208, 219] cc => I, Pos: [208, 219] cc => I, Pos: [211, 224] cc => I, Pos: [211, 224] cc => I, Pos: [226, 233] cc => I, Pos: [226, 233] cc => I, Pos: [228, 236] xx => I, Pos: [228, 236] xx => I, Pos: [235, 251] cc => I, Pos: [235, 251] cc => I, Pos: [243, 252] cc => I, Pos: [243, 252] cc => I, Pos: [246, 267] cc => I, Pos: [246, 267] cc => I, Pos: [264, 275] cc => I, Pos: [264, 275] cc => I, Pos: [272, 279] xx => I, Pos: [272, 279] xx => I, Pos: [276, 283] cc => I, Pos: [276, 283] cc => I, Pos: [288, 295] cc => I, Pos: [288, 295] cc => I, Pos: [294, 314] cc => I, Pos: [294, 314] cc => I, Pos: [295, 304] cc => I, Pos: [295, 304] cc => I, Pos: [301, 312] cc => I, Pos: [301, 312] cc => I]

--------End Timer [Generate Plans]:  0.10936737060546875

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 8] xx => I,
 Pos: [5, 12] cc => I,
 Pos: [6, 10] cc => I,
 Pos: [13, 18] cc => I,
 Pos: [22, 29] cc => I,
 Pos: [24, 41] cc => I,
 Pos: [25, 34] cc => I,
 Pos: [30, 42] cc => I,
 Pos: [43, 51] xx => I,
 Pos: [49, 56] cc => I,
 Pos: [50, 70] cc => I,
 Pos: [59, 66] cc => I,
 Pos: [61, 69, 74] ccc => cc,
 Pos: [77, 84] cc => I,
 Pos: [78, 85] cc => I,
 Pos: [80, 87] xx => I,
 Pos: [104, 112] cc => I,
 Pos: [100, 107] xx => I,
 Pos: [102, 110] cc => I,
 Pos: [106, 120] cc => I,
 Pos: [113, 121] cc => I,
 Pos: [124, 133] xx => I,
 Pos: [134, 142, 149] xcx => c,
 Pos: [138, 144] cc => I,
 Pos: [139, 148] xx => I,
 Pos: [159, 163] cc => I,
 Pos: [160, 167] xx => I,
 Pos: [162, 174] cc => I,
 Pos: [169, 177, 183] xcx => c,
 Pos: [176, 181] xx => I,
 Pos: [178, 184] cc => I,
 Pos: [189, 197] xx => I,
 Pos: [190, 198] xx => I,
 Pos: [193, 211] cc => I,
 Pos: [204, 213] xx => I,
 Pos: [208, 219] cc => I,
 Pos: [226, 233] cc => I,
 Pos: [228, 236] xx => I,
 Pos: [235, 251] cc => I,
 Pos: [243, 252] cc => I,
 Pos: [246, 267] cc => I,
 Pos: [264, 275] cc => I,
 Pos: [272, 279] xx => I,
 Pos: [276, 283] cc => I,
 Pos: [295, 304] cc => I,
 Pos: [294, 314] cc => I,
 Pos: [301, 312] cc => I]
Change: 47, Saving: 47

Circuit before: xxccccccxxccccxxccccxxccccccxccccccxxxcccccxxxxxcccxxcccccxccccccxcccccxccccccccxxcccccxxccccxccccccxccccccxxxccccxxxcccccxxxxcccccxxxxccccxxcccccxxxxccccccccccxccccccxxxxcccccxccccxxxcccccxxxcccccxxcccccxxxxcccccxxcccccxxccccccxxxxccccxxccccccccccxxxccccxccccccxcccccccccxxcccccxxccccccccccxcccccccxxccccxxcccccccc
---------------
Apply:  Pos: [0, 8] xx => I
Apply:  Pos: [5, 12] cc => I
Apply:  Pos: [6, 10] cc => I
Apply:  Pos: [13, 18] cc => I
Apply:  Pos: [22, 29] cc => I
Apply:  Pos: [24, 41] cc => I
Apply:  Pos: [25, 34] cc => I
Apply:  Pos: [30, 42] cc => I
Apply:  Pos: [43, 51] xx => I
Apply:  Pos: [49, 56] cc => I
Apply:  Pos: [50, 70] cc => I
Apply:  Pos: [59, 66] cc => I
Apply:  Pos: [61, 69, 74] ccc => cc
Apply:  Pos: [77, 84] cc => I
Apply:  Pos: [78, 85] cc => I
Apply:  Pos: [80, 87] xx => I
Apply:  Pos: [104, 112] cc => I
Apply:  Pos: [100, 107] xx => I
Apply:  Pos: [102, 110] cc => I
Apply:  Pos: [106, 120] cc => I
Apply:  Pos: [113, 121] cc => I
Apply:  Pos: [124, 133] xx => I
Apply:  Pos: [134, 142, 149] xcx => c
Apply:  Pos: [138, 144] cc => I
Apply:  Pos: [139, 148] xx => I
Apply:  Pos: [159, 163] cc => I
Apply:  Pos: [160, 167] xx => I
Apply:  Pos: [162, 174] cc => I
Apply:  Pos: [169, 177, 183] xcx => c
Apply:  Pos: [176, 181] xx => I
Apply:  Pos: [178, 184] cc => I
Apply:  Pos: [189, 197] xx => I
Apply:  Pos: [190, 198] xx => I
Apply:  Pos: [193, 211] cc => I
Apply:  Pos: [204, 213] xx => I
Apply:  Pos: [208, 219] cc => I
Apply:  Pos: [226, 233] cc => I
Apply:  Pos: [228, 236] xx => I
Apply:  Pos: [235, 251] cc => I
Apply:  Pos: [243, 252] cc => I
Apply:  Pos: [246, 267] cc => I
Apply:  Pos: [264, 275] cc => I
Apply:  Pos: [272, 279] xx => I
Apply:  Pos: [276, 283] cc => I
Apply:  Pos: [295, 304] cc => I
Apply:  Pos: [294, 314] cc => I
Apply:  Pos: [301, 312] cc => I
---------------
Circuit after: xccccxcxxcccxxcccxcccxxxcccxxxxcxccccxcccccxcccxcccccxcccxccccxcccccccccxxcxxxcccxxxcccccxxccccxcccxxcccccccccccccxcxccccccxccccxcccccccccxxxcccxccccxxcccccxxxccxccccccccxxxccxccccccxcccccccxcccxcccccccccxcccccxxccxxcccccc

--------End Timer [apply mapping plan]:  0.0

[18], [1, 13], [6, 8], [12, 7], [3, 16], [17], [6, 2], [19], [10], [0, 12], [15, 18], [2, 8], [3], [16], [4, 18], [12, 1], [8, 15], [4], [15, 18], [1, 7], [13, 3], [19], [6], [14], [7, 8], [1, 13], [16, 4], [17], [1], [7], [3], [8, 15], [11], [3, 16], [2, 8], [12, 14], [15, 10], [18], [6, 8], [17, 11], [7, 15], [14, 1], [3, 5], [2], [8, 16], [1, 7], [11, 10], [19], [9, 5], [12, 7], [16, 15], [19, 3], [5, 4], [12], [1, 7], [16, 5], [6, 2], [13], [7, 16], [14, 1], [15, 11], [8, 17], [19], [12, 7], [14, 6], [13, 9], [1, 3], [2, 17], [11, 10], [3, 4], [1, 13], [18, 10], [6], [9], [12, 1], [3], [7], [16], [19, 1], [8, 17], [9, 5], [19], [12], [10], [14, 6], [3, 5], [7, 15], [13, 9], [2, 8], [5], [9], [1, 13], [19, 3], [12, 7], [4, 18], [14], [0, 19], [6, 8], [18, 10], [19], [6], [1, 3], [0, 12], [5, 4], [0, 19], [11, 10], [1, 13], [16, 4], [8, 15], [3, 5], [15, 10], [13, 9], [11, 18], [19, 1], [11], [15, 10], [8], [14, 1], [19, 13], [15, 18], [7, 16], [7, 8], [9, 5], [3], [7, 15], [2, 17], [16, 4], [19, 1], [15], [1, 13], [3, 5], [8, 17], [18, 10], [15, 10], [9, 5], [13, 3], [2, 8], [14, 1], [6], [9], [2], [3, 4], [19, 13], [15, 18], [8], [14, 6], [3, 5], [7, 15], [13, 9], [14], [6], [0, 19], [11, 18], [7, 16], [12, 1], [15, 10], [15], [9], [16], [19, 1], [6, 2], [2], [17, 11], [13, 3], [14, 6], [8, 16], [0, 19], [16, 15], [12, 7], [3, 4], [0], [15], [6], [16, 4], [7, 8], [11], [0, 12], [8, 15], [13, 3], [1, 7], [5, 4], [6, 2], [12], [8, 17], [14, 6], [15, 18], [12, 7], [6, 17], [3, 4], [16, 15], [0], [17, 11], [18, 10], [19, 1], [8], [19, 3], [1, 13], [6, 2], [12, 1], [8, 16], [2, 17], [11, 10], [5, 4], [14, 6], [15], [12, 14], [13, 9], [7, 8], [16, 4], [3, 5], [12], [4], [3, 16], [7, 15], [13], [14], [0, 12], [5, 4], [19, 3], [1, 7], [15, 11], [18, 10], ----End Timer [Execute Mapping]:  2.531648874282837

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[91, 106]
[110, 115]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[7, 21]
[5, 27]
[21, 47]
[100, 138]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[107, 121, 126]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[7, 21]
[5, 27]
[21, 47]
[100, 138]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[91, 106]
[110, 115]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.7344393730163574

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [5, 27] xx => I, Pos: [5, 27] xx => I, Pos: [7, 21] xx => I, Pos: [7, 21] xx => I, Pos: [21, 47] xx => I, Pos: [21, 47] xx => I, Pos: [91, 106] cc => I, Pos: [91, 106] cc => I, Pos: [100, 138] xx => I, Pos: [100, 138] xx => I, Pos: [107, 121, 126] ccc => cc, Pos: [110, 115] cc => I, Pos: [110, 115] cc => I]

--------End Timer [Generate Plans]:  0.015624046325683594

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [5, 27] xx => I,
 Pos: [21, 47] xx => I,
 Pos: [91, 106] cc => I,
 Pos: [100, 138] xx => I,
 Pos: [107, 121, 126] ccc => cc,
 Pos: [110, 115] cc => I]
Change: 6, Saving: 6

Circuit before: xccccxcxxcccxxcccxcccxxxcccxxxxcxccccxcccccxcccxcccccxcccxccccxcccccccccxxcxxxcccxxxcccccxxccccxcccxxcccccccccccccxcxccccccxccccxcccccccccxxxcccxccccxxcccccxxxccxccccccccxxxccxccccccxcccccccxcccxcccccccccxcccccxxccxxcccccc
---------------
Apply:  Pos: [5, 27] xx => I
Apply:  Pos: [21, 47] xx => I
Apply:  Pos: [91, 106] cc => I
Apply:  Pos: [100, 138] xx => I
Apply:  Pos: [107, 121, 126] ccc => cc
Apply:  Pos: [110, 115] cc => I
---------------
Circuit after: xcccccxxcccxxcccxcccxxcccxxxcxccccxcccccxccccccccxcccxccccxcccccccccxxcxxxcccxxxcccccxxcccxcccxcccccccccccxxccccccxcccxcccccccccxxcccxccccxxcccccxxxccxccccccccxxxccxccccccxcccccccxcccxcccccccccxcccccxxccxxcccccc

--------End Timer [apply mapping plan]:  0.0

[18], [1, 13], [6, 8], [12, 7], [3, 16], [6, 2], [19], [10], [0, 12], [15, 18], [2, 8], [3], [16], [4, 18], [12, 1], [8, 15], [4], [15, 18], [1, 7], [13, 3], [6], [14], [7, 8], [1, 13], [16, 4], [1], [7], [3], [8, 15], [11], [3, 16], [2, 8], [12, 14], [15, 10], [18], [6, 8], [17, 11], [7, 15], [14, 1], [3, 5], [2], [8, 16], [1, 7], [11, 10], [9, 5], [12, 7], [16, 15], [19, 3], [5, 4], [12], [1, 7], [16, 5], [6, 2], [13], [7, 16], [14, 1], [15, 11], [8, 17], [19], [12, 7], [14, 6], [13, 9], [1, 3], [2, 17], [11, 10], [3, 4], [1, 13], [18, 10], [6], [9], [12, 1], [3], [7], [16], [19, 1], [8, 17], [9, 5], [19], [12], [10], [14, 6], [3, 5], [7, 15], [13, 9], [2, 8], [5], [9], [19, 3], [12, 7], [4, 18], [14], [0, 19], [6, 8], [18, 10], [19], [1, 3], [0, 12], [5, 4], [0, 19], [11, 10], [7, 16], [8, 15], [3, 5], [13, 9], [11, 18], [19, 1], [11], [8], [14, 1], [19, 13], [15, 18], [7, 8], [16, 4], [9, 5], [3], [7, 15], [2, 17], [19, 1], [15], [1, 13], [3, 5], [8, 17], [15, 10], [18, 10], [9, 5], [13, 3], [2, 8], [14, 1], [9], [2], [3, 4], [19, 13], [15, 18], [8], [14, 6], [3, 5], [7, 15], [13, 9], [14], [6], [0, 19], [11, 18], [7, 16], [12, 1], [15, 10], [15], [9], [16], [19, 1], [6, 2], [2], [17, 11], [13, 3], [14, 6], [8, 16], [0, 19], [16, 15], [12, 7], [3, 4], [0], [15], [6], [16, 4], [7, 8], [11], [0, 12], [8, 15], [13, 3], [1, 7], [5, 4], [6, 2], [12], [8, 17], [14, 6], [15, 18], [12, 7], [6, 17], [3, 4], [16, 15], [0], [17, 11], [18, 10], [19, 1], [8], [19, 3], [1, 13], [6, 2], [12, 1], [8, 16], [2, 17], [11, 10], [5, 4], [14, 6], [15], [12, 14], [13, 9], [7, 8], [16, 4], [3, 5], [12], [4], [3, 16], [7, 15], [13], [14], [0, 12], [5, 4], [19, 3], [1, 7], [15, 11], [18, 10], ----End Timer [Execute Mapping]:  1.750063419342041

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[93, 99, 104]
[122, 123, 132]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.6878089904785156

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [93, 99, 104] ccc => cc, Pos: [122, 123, 132] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [93, 99, 104] ccc => cc, Pos: [122, 123, 132] ccc => cc]
Change: 2, Saving: 3

Circuit before: xcccccxxcccxxcccxcccxxcccxxxcxccccxcccccxccccccccxcccxccccxcccccccccxxcxxxcccxxxcccccxxcccxcccxcccccccccccxxccccccxcccxcccccccccxxcccxccccxxcccccxxxccxccccccccxxxccxccccccxcccccccxcccxcccccccccxcccccxxccxxcccccc
---------------
Apply:  Pos: [93, 99, 104] ccc => cc
Apply:  Pos: [122, 123, 132] ccc => cc
---------------
Circuit after: xcccccxxcccxxcccxcccxxcccxxxcxccccxcccccxccccccccxcccxccccxcccccccccxxcxxxcccxxxcccccxxcccxcccxccccccccccxxccccccxcccxcccccccccxxccxccccxxcccccxxxccxccccccccxxxccxccccccxcccccccxcccxcccccccccxcccccxxccxxcccccc

--------End Timer [apply mapping plan]:  0.0

[18], [1, 13], [6, 8], [12, 7], [3, 16], [6, 2], [19], [10], [0, 12], [15, 18], [2, 8], [3], [16], [4, 18], [12, 1], [8, 15], [4], [15, 18], [1, 7], [13, 3], [6], [14], [7, 8], [1, 13], [16, 4], [1], [7], [3], [8, 15], [11], [3, 16], [2, 8], [12, 14], [15, 10], [18], [6, 8], [17, 11], [7, 15], [14, 1], [3, 5], [2], [8, 16], [1, 7], [11, 10], [9, 5], [12, 7], [16, 15], [19, 3], [5, 4], [12], [1, 7], [16, 5], [6, 2], [13], [7, 16], [14, 1], [15, 11], [8, 17], [19], [12, 7], [14, 6], [13, 9], [1, 3], [2, 17], [11, 10], [3, 4], [1, 13], [18, 10], [6], [9], [12, 1], [3], [7], [16], [19, 1], [8, 17], [9, 5], [19], [12], [10], [14, 6], [3, 5], [7, 15], [13, 9], [2, 8], [5], [9], [19, 3], [12, 7], [4, 18], [14], [0, 19], [6, 8], [11, 18], [19], [1, 3], [0, 12], [5, 4], [0, 19], [18, 10], [7, 16], [8, 15], [3, 5], [13, 9], [19, 1], [11], [8], [14, 1], [19, 13], [15, 18], [7, 8], [16, 4], [9, 5], [3], [7, 15], [2, 17], [19, 1], [15], [1, 13], [3, 5], [8, 17], [15, 18], [18, 10], [9, 5], [13, 3], [2, 8], [14, 1], [9], [2], [3, 4], [19, 13], [8], [14, 6], [3, 5], [7, 15], [13, 9], [14], [6], [0, 19], [11, 18], [7, 16], [12, 1], [15, 10], [15], [9], [16], [19, 1], [6, 2], [2], [17, 11], [13, 3], [14, 6], [8, 16], [0, 19], [16, 15], [12, 7], [3, 4], [0], [15], [6], [16, 4], [7, 8], [11], [0, 12], [8, 15], [13, 3], [1, 7], [5, 4], [6, 2], [12], [8, 17], [14, 6], [15, 18], [12, 7], [6, 17], [3, 4], [16, 15], [0], [17, 11], [18, 10], [19, 1], [8], [19, 3], [1, 13], [6, 2], [12, 1], [8, 16], [2, 17], [11, 10], [5, 4], [14, 6], [15], [12, 14], [13, 9], [7, 8], [16, 4], [3, 5], [12], [4], [3, 16], [7, 15], [13], [14], [0, 12], [5, 4], [19, 3], [1, 7], [15, 11], [18, 10], ----End Timer [Execute Mapping]:  1.6878089904785156

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.7177438735961914

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: xcccccxxcccxxcccxcccxxcccxxxcxccccxcccccxccccccccxcccxccccxcccccccccxxcxxxcccxxxcccccxxcccxcccxccccccccccxxccccccxcccxcccccccccxxccxccccxxcccccxxxccxccccccccxxxccxccccccxcccccccxcccxcccccccccxcccccxxccxxcccccc
---------------
---------------
Circuit after: xcccccxxcccxxcccxcccxxcccxxxcxccccxcccccxccccccccxcccxccccxcccccccccxxcxxxcccxxxcccccxxcccxcccxccccccccccxxccccccxcccxcccccccccxxccxccccxxcccccxxxccxccccccccxxxccxccccccxcccccccxcccxcccccccccxcccccxxccxxcccccc

--------End Timer [apply mapping plan]:  0.0

[18], [1, 13], [6, 8], [12, 7], [3, 16], [6, 2], [19], [10], [0, 12], [15, 18], [2, 8], [3], [16], [4, 18], [12, 1], [8, 15], [4], [15, 18], [1, 7], [13, 3], [6], [14], [7, 8], [1, 13], [16, 4], [1], [7], [3], [8, 15], [11], [3, 16], [2, 8], [12, 14], [15, 10], [18], [6, 8], [17, 11], [7, 15], [14, 1], [3, 5], [2], [8, 16], [1, 7], [11, 10], [9, 5], [12, 7], [16, 15], [19, 3], [5, 4], [12], [1, 7], [16, 5], [6, 2], [13], [7, 16], [14, 1], [15, 11], [8, 17], [19], [12, 7], [14, 6], [13, 9], [1, 3], [2, 17], [11, 10], [3, 4], [1, 13], [18, 10], [6], [9], [12, 1], [3], [7], [16], [19, 1], [8, 17], [9, 5], [19], [12], [10], [14, 6], [3, 5], [7, 15], [13, 9], [2, 8], [5], [9], [19, 3], [12, 7], [4, 18], [14], [0, 19], [6, 8], [11, 18], [19], [1, 3], [0, 12], [5, 4], [0, 19], [18, 10], [7, 16], [8, 15], [3, 5], [13, 9], [19, 1], [11], [8], [14, 1], [19, 13], [15, 18], [7, 8], [16, 4], [9, 5], [3], [7, 15], [2, 17], [19, 1], [15], [1, 13], [3, 5], [8, 17], [15, 18], [18, 10], [9, 5], [13, 3], [2, 8], [14, 1], [9], [2], [3, 4], [19, 13], [8], [14, 6], [3, 5], [7, 15], [13, 9], [14], [6], [0, 19], [11, 18], [7, 16], [12, 1], [15, 10], [15], [9], [16], [19, 1], [6, 2], [2], [17, 11], [13, 3], [14, 6], [8, 16], [0, 19], [16, 15], [12, 7], [3, 4], [0], [15], [6], [16, 4], [7, 8], [11], [0, 12], [8, 15], [13, 3], [1, 7], [5, 4], [6, 2], [12], [8, 17], [14, 6], [15, 18], [12, 7], [6, 17], [3, 4], [16, 15], [0], [17, 11], [18, 10], [19, 1], [8], [19, 3], [1, 13], [6, 2], [12, 1], [8, 16], [2, 17], [11, 10], [5, 4], [14, 6], [15], [12, 14], [13, 9], [7, 8], [16, 4], [3, 5], [12], [4], [3, 16], [7, 15], [13], [14], [0, 12], [5, 4], [19, 3], [1, 7], [15, 11], [18, 10], ----End Timer [Execute Mapping]:  1.7177438735961914

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: x-x-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-x-x-x-x-x-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [315] (IBM)
 --------------------
 - qubits_num: 20, using gates: [x,cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 540


>> Solved circuit: 
Circuit Info: 
 - circuit: x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-x-x-cx-cx-cx-x-cx-cx-cx-x-x-cx-cx-cx-x-x-x-cx-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-cx-x-x-x-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-x-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-x-x-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-x-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-cx-cx-x-x-cx-cx-cx-cx-cx-cx 
     => total size: [209] (IBM)
 --------------------
 - qubits_num: 20, using gates: [x,cx]
 - circuit depth: 39 - (small)
 - circuit cycle: 364

Reduced: 
 - size: 106 (33.65%)
 - depth: 6 (13.33%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.1246800422668457

[19], [18], [1, 13], [6, 8], [12, 7], [15, 11], [5, 4], [3, 16], [19], [17], [5, 4], [6, 2], [15, 11], [1, 7], [19], [10], [0, 12], [15, 18], [1, 7], [2, 8], [3], [16], [0, 19], [4, 18], [9, 5], [2, 17], [12, 1], [8, 15], [4], [0, 19], [11, 10], [15, 18], [1, 7], [13, 3], [2, 17], [19], [6], [14], [7, 8], [1, 13], [16, 4], [9, 5], [11, 10], [19], [17], [1], [7], [3], [8, 15], [4, 18], [13, 9], [19], [11], [3, 16], [2, 8], [12, 14], [4, 18], [15, 10], [18], [0, 19], [6, 8], [11, 10], [7, 15], [14, 1], [3, 5], [2], [0, 19], [8, 16], [1, 7], [17, 11], [13, 9], [19], [9, 5], [12, 7], [11, 10], [16, 15], [19, 3], [11, 18], [8, 15], [5, 4], [19], [12], [1, 7], [16, 5], [11, 18], [8, 15], [6, 2], [19], [13], [7, 16], [14, 1], [15, 11], [8, 17], [19], [12, 7], [14, 6], [13, 9], [1, 3], [2, 17], [11, 10], [19], [3, 4], [16, 5], [1, 13], [15, 11], [18, 10], [12, 14], [19], [6], [9], [16, 5], [12, 1], [15, 11], [4, 18], [3], [7], [16], [19, 1], [8, 17], [9, 5], [12, 14], [4, 18], [19], [12], [0], [10], [14, 6], [3, 5], [7, 15], [13, 9], [2, 8], [5], [9], [0], [13], [19, 3], [12, 7], [4, 18], [16, 15], [17], [14], [0, 19], [1, 13], [6, 8], [16, 15], [18, 10], [19], [6], [17], [13], [1, 3], [0, 12], [5, 4], [0, 19], [11, 10], [1, 13], [16, 4], [8, 15], [3, 5], [14, 7], [0], [15, 10], [6, 2], [14, 7], [13, 9], [11, 18], [19, 1], [0], [11], [10], [8], [14, 1], [19, 13], [15, 18], [6, 2], [7, 16], [0], [15, 10], [12, 14], [7, 8], [9, 5], [0], [3], [10], [12, 14], [7, 15], [2, 17], [16, 4], [19, 1], [0], [4], [15], [1, 13], [7, 16], [3, 5], [8, 17], [18, 10], [0], [4], [15, 10], [9, 5], [13, 3], [2, 8], [14, 1], [0], [6], [9], [2], [11, 10], [3, 4], [19, 13], [7, 16], [15, 18], [0], [8], [14, 6], [3, 5], [7, 15], [13, 9], [11, 10], [14], [6], [0, 19], [11, 18], [7, 16], [12, 1], [8, 17], [15, 10], [0], [15], [9], [16], [19, 1], [8, 17], [6, 2], [18, 10], [0], [2], [17, 11], [13, 3], [14, 6], [8, 16], [0, 19], [2, 17], [16, 15], [12, 7], [13, 9], [3, 4], [0], [15], [6], [18, 10], [2, 17], [16, 4], [7, 8], [11], [0, 12], [8, 15], [13, 3], [1, 7], [5, 4], [6, 2], [12], [8, 17], [3, 5], [14, 6], [15, 18], [13, 9], [12, 7], [6, 17], [3, 4], [16, 15], [12], [0], [17, 11], [3, 5], [16, 4], [18, 10], [19, 1], [12], [8], [19, 3], [1, 13], [16, 4], [6, 2], [12, 1], [8, 16], [2, 17], [11, 10], [5, 4], [14, 6], [15], [12, 14], [13, 9], [6, 2], [11, 10], [7, 8], [16, 4], [3, 5], [12], [4], [8, 17], [3, 16], [7, 15], [11, 10], [13], [14], [0, 12], [5, 4], [19, 3], [1, 7], [15, 11], [8, 17], [18, 10], [6, 2], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[6, 10]
[5, 12]
[13, 18]
[22, 29]
[25, 34]
[24, 41]
[30, 42]
[49, 56]
[59, 66]
[50, 70]
[77, 84]
[78, 85]
[102, 110]
[104, 112]
[106, 120]
[113, 121]
[121, 137]
[138, 144]
[159, 163]
[162, 174]
[178, 184]
[193, 211]
[208, 219]
[211, 224]
[226, 233]
[235, 251]
[243, 252]
[246, 267]
[264, 275]
[276, 283]
[288, 295]
[295, 304]
[301, 312]
[294, 314]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[0, 8]
[8, 14]
[35, 43]
[43, 51]
[80, 87]
[87, 93]
[93, 100]
[100, 107]
[124, 133]
[139, 148]
[160, 167]
[167, 176]
[176, 181]
[181, 189]
[189, 197]
[190, 198]
[197, 204]
[204, 213]
[228, 236]
[272, 279]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[91, 99, 104]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 

[134, 142, 149]
[169, 177, 183]

------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[18, 26, 32]
[61, 69, 74]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[0, 8]
[8, 14]
[35, 43]
[43, 51]
[80, 87]
[87, 93]
[93, 100]
[100, 107]
[124, 133]
[139, 148]
[160, 167]
[167, 176]
[176, 181]
[181, 189]
[189, 197]
[190, 198]
[197, 204]
[204, 213]
[228, 236]
[272, 279]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[6, 10]
[5, 12]
[13, 18]
[22, 29]
[25, 34]
[24, 41]
[30, 42]
[49, 56]
[59, 66]
[50, 70]
[77, 84]
[78, 85]
[102, 110]
[104, 112]
[106, 120]
[113, 121]
[121, 137]
[138, 144]
[159, 163]
[162, 174]
[178, 184]
[193, 211]
[208, 219]
[211, 224]
[226, 233]
[235, 251]
[243, 252]
[246, 267]
[264, 275]
[276, 283]
[288, 295]
[295, 304]
[301, 312]
[294, 314]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.4060873985290527

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 8] xx => I, Pos: [0, 8] xx => I, Pos: [5, 12] cc => I, Pos: [5, 12] cc => I, Pos: [6, 10] cc => I, Pos: [6, 10] cc => I, Pos: [8, 14] xx => I, Pos: [8, 14] xx => I, Pos: [13, 18] cc => I, Pos: [13, 18] cc => I, Pos: [18, 26, 32] ccc => cc, Pos: [22, 29] cc => I, Pos: [22, 29] cc => I, Pos: [24, 41] cc => I, Pos: [24, 41] cc => I, Pos: [25, 34] cc => I, Pos: [25, 34] cc => I, Pos: [30, 42] cc => I, Pos: [30, 42] cc => I, Pos: [35, 43] xx => I, Pos: [35, 43] xx => I, Pos: [43, 51] xx => I, Pos: [43, 51] xx => I, Pos: [49, 56] cc => I, Pos: [49, 56] cc => I, Pos: [50, 70] cc => I, Pos: [50, 70] cc => I, Pos: [59, 66] cc => I, Pos: [59, 66] cc => I, Pos: [61, 69, 74] ccc => cc, Pos: [77, 84] cc => I, Pos: [77, 84] cc => I, Pos: [78, 85] cc => I, Pos: [78, 85] cc => I, Pos: [80, 87] xx => I, Pos: [80, 87] xx => I, Pos: [87, 93] xx => I, Pos: [87, 93] xx => I, Pos: [91, 99, 104] ccc => cc, Pos: [93, 100] xx => I, Pos: [93, 100] xx => I, Pos: [100, 107] xx => I, Pos: [100, 107] xx => I, Pos: [102, 110] cc => I, Pos: [102, 110] cc => I, Pos: [104, 112] cc => I, Pos: [104, 112] cc => I, Pos: [106, 120] cc => I, Pos: [106, 120] cc => I, Pos: [113, 121] cc => I, Pos: [113, 121] cc => I, Pos: [121, 137] cc => I, Pos: [121, 137] cc => I, Pos: [124, 133] xx => I, Pos: [124, 133] xx => I, Pos: [134, 142, 149] xcx => c, Pos: [138, 144] cc => I, Pos: [138, 144] cc => I, Pos: [139, 148] xx => I, Pos: [139, 148] xx => I, Pos: [159, 163] cc => I, Pos: [159, 163] cc => I, Pos: [160, 167] xx => I, Pos: [160, 167] xx => I, Pos: [162, 174] cc => I, Pos: [162, 174] cc => I, Pos: [167, 176] xx => I, Pos: [167, 176] xx => I, Pos: [169, 177, 183] xcx => c, Pos: [176, 181] xx => I, Pos: [176, 181] xx => I, Pos: [178, 184] cc => I, Pos: [178, 184] cc => I, Pos: [181, 189] xx => I, Pos: [181, 189] xx => I, Pos: [189, 197] xx => I, Pos: [189, 197] xx => I, Pos: [190, 198] xx => I, Pos: [190, 198] xx => I, Pos: [193, 211] cc => I, Pos: [193, 211] cc => I, Pos: [197, 204] xx => I, Pos: [197, 204] xx => I, Pos: [204, 213] xx => I, Pos: [204, 213] xx => I, Pos: [208, 219] cc => I, Pos: [208, 219] cc => I, Pos: [211, 224] cc => I, Pos: [211, 224] cc => I, Pos: [226, 233] cc => I, Pos: [226, 233] cc => I, Pos: [228, 236] xx => I, Pos: [228, 236] xx => I, Pos: [235, 251] cc => I, Pos: [235, 251] cc => I, Pos: [243, 252] cc => I, Pos: [243, 252] cc => I, Pos: [246, 267] cc => I, Pos: [246, 267] cc => I, Pos: [264, 275] cc => I, Pos: [264, 275] cc => I, Pos: [272, 279] xx => I, Pos: [272, 279] xx => I, Pos: [276, 283] cc => I, Pos: [276, 283] cc => I, Pos: [288, 295] cc => I, Pos: [288, 295] cc => I, Pos: [294, 314] cc => I, Pos: [294, 314] cc => I, Pos: [295, 304] cc => I, Pos: [295, 304] cc => I, Pos: [301, 312] cc => I, Pos: [301, 312] cc => I]

--------End Timer [Generate Plans]:  0.12540841102600098

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [8, 14] xx => I,
 Pos: [5, 12] cc => I,
 Pos: [6, 10] cc => I,
 Pos: [13, 18] cc => I,
 Pos: [22, 29] cc => I,
 Pos: [24, 41] cc => I,
 Pos: [25, 34] cc => I,
 Pos: [30, 42] cc => I,
 Pos: [35, 43] xx => I,
 Pos: [49, 56] cc => I,
 Pos: [50, 70] cc => I,
 Pos: [59, 66] cc => I,
 Pos: [61, 69, 74] ccc => cc,
 Pos: [77, 84] cc => I,
 Pos: [78, 85] cc => I,
 Pos: [87, 93] xx => I,
 Pos: [91, 99, 104] ccc => cc,
 Pos: [100, 107] xx => I,
 Pos: [102, 110] cc => I,
 Pos: [106, 120] cc => I,
 Pos: [121, 137] cc => I,
 Pos: [124, 133] xx => I,
 Pos: [134, 142, 149] xcx => c,
 Pos: [138, 144] cc => I,
 Pos: [139, 148] xx => I,
 Pos: [159, 163] cc => I,
 Pos: [160, 167] xx => I,
 Pos: [162, 174] cc => I,
 Pos: [169, 177, 183] xcx => c,
 Pos: [181, 189] xx => I,
 Pos: [178, 184] cc => I,
 Pos: [190, 198] xx => I,
 Pos: [193, 211] cc => I,
 Pos: [204, 213] xx => I,
 Pos: [208, 219] cc => I,
 Pos: [226, 233] cc => I,
 Pos: [228, 236] xx => I,
 Pos: [235, 251] cc => I,
 Pos: [243, 252] cc => I,
 Pos: [246, 267] cc => I,
 Pos: [264, 275] cc => I,
 Pos: [272, 279] xx => I,
 Pos: [276, 283] cc => I,
 Pos: [288, 295] cc => I,
 Pos: [294, 314] cc => I,
 Pos: [301, 312] cc => I]
Change: 46, Saving: 46

Circuit before: xxccccccxxccccxxccccxxccccccxccccccxxxcccccxxxxxcccxxcccccxccccccxcccccxccccccccxxcccccxxccccxccccccxccccccxxxccccxxxcccccxxxxcccccxxxxccccxxcccccxxxxccccccccccxccccccxxxxcccccxccccxxxcccccxxxcccccxxcccccxxxxcccccxxcccccxxccccccxxxxccccxxccccccccccxxxccccxccccccxcccccccccxxcccccxxccccccccccxcccccccxxccccxxcccccccc
---------------
Apply:  Pos: [8, 14] xx => I
Apply:  Pos: [5, 12] cc => I
Apply:  Pos: [6, 10] cc => I
Apply:  Pos: [13, 18] cc => I
Apply:  Pos: [22, 29] cc => I
Apply:  Pos: [24, 41] cc => I
Apply:  Pos: [25, 34] cc => I
Apply:  Pos: [30, 42] cc => I
Apply:  Pos: [35, 43] xx => I
Apply:  Pos: [49, 56] cc => I
Apply:  Pos: [50, 70] cc => I
Apply:  Pos: [59, 66] cc => I
Apply:  Pos: [61, 69, 74] ccc => cc
Apply:  Pos: [77, 84] cc => I
Apply:  Pos: [78, 85] cc => I
Apply:  Pos: [87, 93] xx => I
Apply:  Pos: [91, 99, 104] ccc => cc
Apply:  Pos: [100, 107] xx => I
Apply:  Pos: [102, 110] cc => I
Apply:  Pos: [106, 120] cc => I
Apply:  Pos: [121, 137] cc => I
Apply:  Pos: [124, 133] xx => I
Apply:  Pos: [134, 142, 149] xcx => c
Apply:  Pos: [138, 144] cc => I
Apply:  Pos: [139, 148] xx => I
Apply:  Pos: [159, 163] cc => I
Apply:  Pos: [160, 167] xx => I
Apply:  Pos: [162, 174] cc => I
Apply:  Pos: [169, 177, 183] xcx => c
Apply:  Pos: [181, 189] xx => I
Apply:  Pos: [178, 184] cc => I
Apply:  Pos: [190, 198] xx => I
Apply:  Pos: [193, 211] cc => I
Apply:  Pos: [204, 213] xx => I
Apply:  Pos: [208, 219] cc => I
Apply:  Pos: [226, 233] cc => I
Apply:  Pos: [228, 236] xx => I
Apply:  Pos: [235, 251] cc => I
Apply:  Pos: [243, 252] cc => I
Apply:  Pos: [246, 267] cc => I
Apply:  Pos: [264, 275] cc => I
Apply:  Pos: [272, 279] xx => I
Apply:  Pos: [276, 283] cc => I
Apply:  Pos: [288, 295] cc => I
Apply:  Pos: [294, 314] cc => I
Apply:  Pos: [301, 312] cc => I
---------------
Circuit after: xxccccxcxcccxxcccxcccxxcccxxxxcxxccccxcccccxcccxcccccxxcccxcccccccccccccxxcccxxxcccxxxcccccxxcccxcccxxcccccccccccccxcxccccxccxccccxccccxcccccxxxcccxccccxxcccccxxxccxccccccccxxxccxccccccxcccccccxcccxccccccccxcccccxxcccxxcccccc

--------End Timer [apply mapping plan]:  0.0

[19], [18], [1, 13], [6, 8], [12, 7], [3, 16], [17], [6, 2], [10], [0, 12], [15, 18], [2, 8], [3], [16], [4, 18], [12, 1], [8, 15], [4], [15, 18], [1, 7], [13, 3], [6], [14], [7, 8], [1, 13], [16, 4], [17], [1], [7], [3], [8, 15], [19], [11], [3, 16], [2, 8], [12, 14], [15, 10], [18], [6, 8], [17, 11], [7, 15], [14, 1], [3, 5], [2], [8, 16], [1, 7], [11, 10], [19], [9, 5], [12, 7], [16, 15], [19, 3], [5, 4], [19], [12], [1, 7], [16, 5], [6, 2], [13], [7, 16], [14, 1], [15, 10], [8, 17], [12, 7], [14, 6], [13, 9], [1, 3], [2, 17], [11, 10], [3, 4], [1, 13], [18, 10], [6], [9], [12, 1], [15, 11], [4, 18], [3], [7], [16], [19, 1], [8, 17], [9, 5], [19], [12], [10], [14, 6], [3, 5], [7, 15], [13, 9], [2, 8], [5], [9], [1, 13], [19, 3], [12, 7], [14], [0, 19], [6, 8], [18, 10], [19], [6], [1, 3], [0, 12], [5, 4], [0, 19], [11, 10], [1, 13], [16, 4], [8, 15], [3, 5], [15, 10], [13, 9], [11, 18], [19, 1], [11], [15, 10], [8], [14, 1], [19, 13], [15, 18], [7, 16], [0], [7, 8], [9, 5], [3], [7, 15], [2, 17], [16, 4], [19, 1], [15], [1, 13], [3, 5], [8, 17], [18, 10], [0], [15, 10], [9, 5], [13, 3], [2, 8], [14, 1], [6], [9], [2], [3, 4], [19, 13], [15, 18], [8], [14, 6], [3, 5], [7, 15], [13, 9], [14], [6], [0, 19], [11, 18], [7, 16], [12, 1], [15, 10], [15], [9], [16], [19, 1], [6, 2], [2], [17, 11], [13, 3], [14, 6], [8, 16], [0, 19], [16, 15], [12, 7], [3, 4], [0], [15], [6], [16, 4], [7, 8], [11], [0, 12], [8, 15], [13, 3], [1, 7], [5, 4], [6, 2], [12], [8, 17], [14, 6], [15, 18], [12, 7], [6, 17], [3, 4], [16, 15], [0], [17, 11], [18, 10], [19, 1], [8], [19, 3], [1, 13], [6, 2], [12, 1], [8, 16], [2, 17], [5, 4], [14, 6], [15], [12, 14], [13, 9], [7, 8], [16, 4], [3, 5], [12], [4], [3, 16], [7, 15], [11, 10], [13], [14], [0, 12], [5, 4], [19, 3], [1, 7], [15, 11], [18, 10], ----End Timer [Execute Mapping]:  2.5314958095550537

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[93, 107]
[111, 116]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[6, 26]
[0, 31]
[31, 47]
[122, 135]
[101, 141]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[108, 121, 128]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[134, 136, 146]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[6, 26]
[0, 31]
[31, 47]
[122, 135]
[101, 141]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[93, 107]
[111, 116]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.7184710502624512

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 31] xx => I, Pos: [0, 31] xx => I, Pos: [6, 26] xx => I, Pos: [6, 26] xx => I, Pos: [31, 47] xx => I, Pos: [31, 47] xx => I, Pos: [93, 107] cc => I, Pos: [93, 107] cc => I, Pos: [101, 141] xx => I, Pos: [101, 141] xx => I, Pos: [108, 121, 128] ccc => cc, Pos: [111, 116] cc => I, Pos: [111, 116] cc => I, Pos: [122, 135] xx => I, Pos: [122, 135] xx => I, Pos: [134, 136, 146] ccc => cc]

--------End Timer [Generate Plans]:  0.015624284744262695

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [31, 47] xx => I,
 Pos: [6, 26] xx => I,
 Pos: [93, 107] cc => I,
 Pos: [101, 141] xx => I,
 Pos: [108, 121, 128] ccc => cc,
 Pos: [111, 116] cc => I,
 Pos: [122, 135] xx => I,
 Pos: [134, 136, 146] ccc => cc]
Change: 8, Saving: 9

Circuit before: xxccccxcxcccxxcccxcccxxcccxxxxcxxccccxcccccxcccxcccccxxcccxcccccccccccccxxcccxxxcccxxxcccccxxcccxcccxxcccccccccccccxcxccccxccxccccxccccxcccccxxxcccxccccxxcccccxxxccxccccccccxxxccxccccccxcccccccxcccxccccccccxcccccxxcccxxcccccc
---------------
Apply:  Pos: [31, 47] xx => I
Apply:  Pos: [6, 26] xx => I
Apply:  Pos: [93, 107] cc => I
Apply:  Pos: [101, 141] xx => I
Apply:  Pos: [108, 121, 128] ccc => cc
Apply:  Pos: [111, 116] cc => I
Apply:  Pos: [122, 135] xx => I
Apply:  Pos: [134, 136, 146] ccc => cc
---------------
Circuit after: xxcccccxcccxxcccxcccxxcccxxxcxccccxcccccxccccccccxxcccxcccccccccccccxxcccxxxcccxxxcccccxxccxcccxcccccccccccxxccccccxcccxcccccccccxxccxccccxxcccccxxxccxccccccccxxxccxccccccxcccccccxcccxccccccccxcccccxxcccxxcccccc

--------End Timer [apply mapping plan]:  0.0

[19], [18], [1, 13], [6, 8], [12, 7], [3, 16], [6, 2], [10], [0, 12], [15, 18], [2, 8], [3], [16], [4, 18], [12, 1], [8, 15], [4], [15, 18], [1, 7], [13, 3], [6], [14], [7, 8], [1, 13], [16, 4], [1], [7], [3], [8, 15], [11], [3, 16], [2, 8], [12, 14], [15, 10], [18], [6, 8], [17, 11], [7, 15], [14, 1], [3, 5], [2], [8, 16], [1, 7], [11, 10], [9, 5], [12, 7], [16, 15], [19, 3], [5, 4], [19], [12], [1, 7], [16, 5], [6, 2], [13], [7, 16], [14, 1], [15, 10], [8, 17], [12, 7], [14, 6], [13, 9], [1, 3], [2, 17], [11, 10], [3, 4], [1, 13], [18, 10], [6], [9], [12, 1], [15, 11], [4, 18], [3], [7], [16], [19, 1], [8, 17], [9, 5], [19], [12], [10], [14, 6], [3, 5], [7, 15], [13, 9], [2, 8], [5], [9], [19, 3], [12, 7], [14], [0, 19], [6, 8], [18, 10], [19], [1, 3], [0, 12], [5, 4], [0, 19], [11, 10], [7, 16], [8, 15], [3, 5], [13, 9], [11, 18], [19, 1], [11], [8], [14, 1], [19, 13], [15, 18], [16, 4], [7, 8], [9, 5], [3], [7, 15], [2, 17], [19, 1], [15], [1, 13], [3, 5], [8, 17], [15, 18], [18, 10], [9, 5], [13, 3], [2, 8], [14, 1], [9], [2], [3, 4], [19, 13], [8], [14, 6], [3, 5], [7, 15], [13, 9], [14], [6], [0, 19], [11, 18], [7, 16], [12, 1], [15, 10], [15], [9], [16], [19, 1], [6, 2], [2], [17, 11], [13, 3], [14, 6], [8, 16], [0, 19], [16, 15], [12, 7], [3, 4], [0], [15], [6], [16, 4], [7, 8], [11], [0, 12], [8, 15], [13, 3], [1, 7], [5, 4], [6, 2], [12], [8, 17], [14, 6], [15, 18], [12, 7], [6, 17], [3, 4], [16, 15], [0], [17, 11], [18, 10], [19, 1], [8], [19, 3], [1, 13], [6, 2], [12, 1], [8, 16], [2, 17], [5, 4], [14, 6], [15], [12, 14], [13, 9], [7, 8], [16, 4], [3, 5], [12], [4], [3, 16], [7, 15], [11, 10], [13], [14], [0, 12], [5, 4], [19, 3], [1, 7], [15, 11], [18, 10], ----End Timer [Execute Mapping]:  1.7340953350067139

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[94, 100, 105]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.6720657348632812

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [94, 100, 105] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [94, 100, 105] ccc => cc]
Change: 1, Saving: 1

Circuit before: xxcccccxcccxxcccxcccxxcccxxxcxccccxcccccxccccccccxxcccxcccccccccccccxxcccxxxcccxxxcccccxxccxcccxcccccccccccxxccccccxcccxcccccccccxxccxccccxxcccccxxxccxccccccccxxxccxccccccxcccccccxcccxccccccccxcccccxxcccxxcccccc
---------------
Apply:  Pos: [94, 100, 105] ccc => cc
---------------
Circuit after: xxcccccxcccxxcccxcccxxcccxxxcxccccxcccccxccccccccxxcccxcccccccccccccxxcccxxxcccxxxcccccxxccxcccxccccccccccxxccccccxcccxcccccccccxxccxccccxxcccccxxxccxccccccccxxxccxccccccxcccccccxcccxccccccccxcccccxxcccxxcccccc

--------End Timer [apply mapping plan]:  0.0

[19], [18], [1, 13], [6, 8], [12, 7], [3, 16], [6, 2], [10], [0, 12], [15, 18], [2, 8], [3], [16], [4, 18], [12, 1], [8, 15], [4], [15, 18], [1, 7], [13, 3], [6], [14], [7, 8], [1, 13], [16, 4], [1], [7], [3], [8, 15], [11], [3, 16], [2, 8], [12, 14], [15, 10], [18], [6, 8], [17, 11], [7, 15], [14, 1], [3, 5], [2], [8, 16], [1, 7], [11, 10], [9, 5], [12, 7], [16, 15], [19, 3], [5, 4], [19], [12], [1, 7], [16, 5], [6, 2], [13], [7, 16], [14, 1], [15, 10], [8, 17], [12, 7], [14, 6], [13, 9], [1, 3], [2, 17], [11, 10], [3, 4], [1, 13], [18, 10], [6], [9], [12, 1], [15, 11], [4, 18], [3], [7], [16], [19, 1], [8, 17], [9, 5], [19], [12], [10], [14, 6], [3, 5], [7, 15], [13, 9], [2, 8], [5], [9], [19, 3], [12, 7], [14], [0, 19], [6, 8], [11, 18], [19], [1, 3], [0, 12], [5, 4], [0, 19], [18, 10], [7, 16], [8, 15], [3, 5], [13, 9], [19, 1], [11], [8], [14, 1], [19, 13], [15, 18], [16, 4], [7, 8], [9, 5], [3], [7, 15], [2, 17], [19, 1], [15], [1, 13], [3, 5], [8, 17], [15, 18], [18, 10], [9, 5], [13, 3], [2, 8], [14, 1], [9], [2], [3, 4], [19, 13], [8], [14, 6], [3, 5], [7, 15], [13, 9], [14], [6], [0, 19], [11, 18], [7, 16], [12, 1], [15, 10], [15], [9], [16], [19, 1], [6, 2], [2], [17, 11], [13, 3], [14, 6], [8, 16], [0, 19], [16, 15], [12, 7], [3, 4], [0], [15], [6], [16, 4], [7, 8], [11], [0, 12], [8, 15], [13, 3], [1, 7], [5, 4], [6, 2], [12], [8, 17], [14, 6], [15, 18], [12, 7], [6, 17], [3, 4], [16, 15], [0], [17, 11], [18, 10], [19, 1], [8], [19, 3], [1, 13], [6, 2], [12, 1], [8, 16], [2, 17], [5, 4], [14, 6], [15], [12, 14], [13, 9], [7, 8], [16, 4], [3, 5], [12], [4], [3, 16], [7, 15], [11, 10], [13], [14], [0, 12], [5, 4], [19, 3], [1, 7], [15, 11], [18, 10], ----End Timer [Execute Mapping]:  1.6720657348632812

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.6562855243682861

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: xxcccccxcccxxcccxcccxxcccxxxcxccccxcccccxccccccccxxcccxcccccccccccccxxcccxxxcccxxxcccccxxccxcccxccccccccccxxccccccxcccxcccccccccxxccxccccxxcccccxxxccxccccccccxxxccxccccccxcccccccxcccxccccccccxcccccxxcccxxcccccc
---------------
---------------
Circuit after: xxcccccxcccxxcccxcccxxcccxxxcxccccxcccccxccccccccxxcccxcccccccccccccxxcccxxxcccxxxcccccxxccxcccxccccccccccxxccccccxcccxcccccccccxxccxccccxxcccccxxxccxccccccccxxxccxccccccxcccccccxcccxccccccccxcccccxxcccxxcccccc

--------End Timer [apply mapping plan]:  0.0

[19], [18], [1, 13], [6, 8], [12, 7], [3, 16], [6, 2], [10], [0, 12], [15, 18], [2, 8], [3], [16], [4, 18], [12, 1], [8, 15], [4], [15, 18], [1, 7], [13, 3], [6], [14], [7, 8], [1, 13], [16, 4], [1], [7], [3], [8, 15], [11], [3, 16], [2, 8], [12, 14], [15, 10], [18], [6, 8], [17, 11], [7, 15], [14, 1], [3, 5], [2], [8, 16], [1, 7], [11, 10], [9, 5], [12, 7], [16, 15], [19, 3], [5, 4], [19], [12], [1, 7], [16, 5], [6, 2], [13], [7, 16], [14, 1], [15, 10], [8, 17], [12, 7], [14, 6], [13, 9], [1, 3], [2, 17], [11, 10], [3, 4], [1, 13], [18, 10], [6], [9], [12, 1], [15, 11], [4, 18], [3], [7], [16], [19, 1], [8, 17], [9, 5], [19], [12], [10], [14, 6], [3, 5], [7, 15], [13, 9], [2, 8], [5], [9], [19, 3], [12, 7], [14], [0, 19], [6, 8], [11, 18], [19], [1, 3], [0, 12], [5, 4], [0, 19], [18, 10], [7, 16], [8, 15], [3, 5], [13, 9], [19, 1], [11], [8], [14, 1], [19, 13], [15, 18], [16, 4], [7, 8], [9, 5], [3], [7, 15], [2, 17], [19, 1], [15], [1, 13], [3, 5], [8, 17], [15, 18], [18, 10], [9, 5], [13, 3], [2, 8], [14, 1], [9], [2], [3, 4], [19, 13], [8], [14, 6], [3, 5], [7, 15], [13, 9], [14], [6], [0, 19], [11, 18], [7, 16], [12, 1], [15, 10], [15], [9], [16], [19, 1], [6, 2], [2], [17, 11], [13, 3], [14, 6], [8, 16], [0, 19], [16, 15], [12, 7], [3, 4], [0], [15], [6], [16, 4], [7, 8], [11], [0, 12], [8, 15], [13, 3], [1, 7], [5, 4], [6, 2], [12], [8, 17], [14, 6], [15, 18], [12, 7], [6, 17], [3, 4], [16, 15], [0], [17, 11], [18, 10], [19, 1], [8], [19, 3], [1, 13], [6, 2], [12, 1], [8, 16], [2, 17], [5, 4], [14, 6], [15], [12, 14], [13, 9], [7, 8], [16, 4], [3, 5], [12], [4], [3, 16], [7, 15], [11, 10], [13], [14], [0, 12], [5, 4], [19, 3], [1, 7], [15, 11], [18, 10], ----End Timer [Execute Mapping]:  1.6562855243682861

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: x-x-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-x-x-x-x-x-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [315] (IBM)
 --------------------
 - qubits_num: 20, using gates: [x,cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 540


>> Solved circuit: 
Circuit Info: 
 - circuit: x-x-cx-cx-cx-cx-cx-x-cx-cx-cx-x-x-cx-cx-cx-x-cx-cx-cx-x-x-cx-cx-cx-x-x-x-cx-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-x-x-x-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-x-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-x-x-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-x-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx 
     => total size: [210] (IBM)
 --------------------
 - qubits_num: 20, using gates: [x,cx]
 - circuit depth: 39 - (small)
 - circuit cycle: 366

Reduced: 
 - size: 105 (33.33%)
 - depth: 6 (13.33%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.14082121849060059

[19], [18], [1, 13], [6, 8], [12, 7], [15, 11], [5, 4], [3, 16], [19], [17], [5, 4], [6, 2], [15, 11], [1, 7], [19], [10], [0, 12], [15, 18], [1, 7], [2, 8], [3], [16], [0, 19], [4, 18], [9, 5], [2, 17], [12, 1], [8, 15], [4], [0, 19], [11, 10], [15, 18], [1, 7], [13, 3], [2, 17], [19], [6], [14], [7, 8], [1, 13], [16, 4], [9, 5], [11, 10], [19], [17], [1], [7], [3], [8, 15], [4, 18], [13, 9], [19], [11], [3, 16], [2, 8], [12, 14], [4, 18], [15, 10], [18], [0, 19], [6, 8], [11, 10], [7, 15], [14, 1], [3, 5], [2], [0, 19], [8, 16], [1, 7], [17, 11], [13, 9], [19], [9, 5], [12, 7], [11, 10], [16, 15], [19, 3], [11, 18], [8, 15], [5, 4], [19], [12], [1, 7], [16, 5], [11, 18], [8, 15], [6, 2], [19], [13], [7, 16], [14, 1], [15, 11], [8, 17], [19], [12, 7], [14, 6], [13, 9], [1, 3], [2, 17], [11, 10], [19], [3, 4], [16, 5], [1, 13], [15, 11], [18, 10], [12, 14], [19], [6], [9], [16, 5], [12, 1], [15, 11], [4, 18], [3], [7], [16], [19, 1], [8, 17], [9, 5], [12, 14], [4, 18], [19], [12], [0], [10], [14, 6], [3, 5], [7, 15], [13, 9], [2, 8], [5], [9], [0], [13], [19, 3], [12, 7], [4, 18], [16, 15], [17], [14], [0, 19], [1, 13], [6, 8], [16, 15], [18, 10], [19], [6], [17], [13], [1, 3], [0, 12], [5, 4], [0, 19], [11, 10], [1, 13], [16, 4], [8, 15], [3, 5], [14, 7], [0], [15, 10], [6, 2], [14, 7], [13, 9], [11, 18], [19, 1], [0], [11], [10], [8], [14, 1], [19, 13], [15, 18], [6, 2], [7, 16], [0], [15, 10], [12, 14], [7, 8], [9, 5], [0], [3], [10], [12, 14], [7, 15], [2, 17], [16, 4], [19, 1], [0], [4], [15], [1, 13], [7, 16], [3, 5], [8, 17], [18, 10], [0], [4], [15, 10], [9, 5], [13, 3], [2, 8], [14, 1], [0], [6], [9], [2], [11, 10], [3, 4], [19, 13], [7, 16], [15, 18], [0], [8], [14, 6], [3, 5], [7, 15], [13, 9], [11, 10], [14], [6], [0, 19], [11, 18], [7, 16], [12, 1], [8, 17], [15, 10], [0], [15], [9], [16], [19, 1], [8, 17], [6, 2], [18, 10], [0], [2], [17, 11], [13, 3], [14, 6], [8, 16], [0, 19], [2, 17], [16, 15], [12, 7], [13, 9], [3, 4], [0], [15], [6], [18, 10], [2, 17], [16, 4], [7, 8], [11], [0, 12], [8, 15], [13, 3], [1, 7], [5, 4], [6, 2], [12], [8, 17], [3, 5], [14, 6], [15, 18], [13, 9], [12, 7], [6, 17], [3, 4], [16, 15], [12], [0], [17, 11], [3, 5], [16, 4], [18, 10], [19, 1], [12], [8], [19, 3], [1, 13], [16, 4], [6, 2], [12, 1], [8, 16], [2, 17], [11, 10], [5, 4], [14, 6], [15], [12, 14], [13, 9], [6, 2], [11, 10], [7, 8], [16, 4], [3, 5], [12], [4], [8, 17], [3, 16], [7, 15], [11, 10], [13], [14], [0, 12], [5, 4], [19, 3], [1, 7], [15, 11], [8, 17], [18, 10], [6, 2], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[6, 10]
[5, 12]
[13, 18]
[22, 29]
[25, 34]
[24, 41]
[30, 42]
[49, 56]
[59, 66]
[50, 70]
[77, 84]
[78, 85]
[102, 110]
[104, 112]
[106, 120]
[113, 121]
[121, 137]
[138, 144]
[159, 163]
[162, 174]
[178, 184]
[193, 211]
[208, 219]
[211, 224]
[226, 233]
[235, 251]
[243, 252]
[246, 267]
[264, 275]
[276, 283]
[288, 295]
[295, 304]
[301, 312]
[294, 314]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[0, 8]
[8, 14]
[35, 43]
[43, 51]
[80, 87]
[87, 93]
[93, 100]
[100, 107]
[124, 133]
[139, 148]
[160, 167]
[167, 176]
[176, 181]
[181, 189]
[189, 197]
[190, 198]
[197, 204]
[204, 213]
[228, 236]
[272, 279]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[91, 99, 104]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 

[134, 142, 149]
[169, 177, 183]

------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[18, 26, 32]
[61, 69, 74]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[0, 8]
[8, 14]
[35, 43]
[43, 51]
[80, 87]
[87, 93]
[93, 100]
[100, 107]
[124, 133]
[139, 148]
[160, 167]
[167, 176]
[176, 181]
[181, 189]
[189, 197]
[190, 198]
[197, 204]
[204, 213]
[228, 236]
[272, 279]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[6, 10]
[5, 12]
[13, 18]
[22, 29]
[25, 34]
[24, 41]
[30, 42]
[49, 56]
[59, 66]
[50, 70]
[77, 84]
[78, 85]
[102, 110]
[104, 112]
[106, 120]
[113, 121]
[121, 137]
[138, 144]
[159, 163]
[162, 174]
[178, 184]
[193, 211]
[208, 219]
[211, 224]
[226, 233]
[235, 251]
[243, 252]
[246, 267]
[264, 275]
[276, 283]
[288, 295]
[295, 304]
[301, 312]
[294, 314]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.3594589233398438

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 8] xx => I, Pos: [0, 8] xx => I, Pos: [5, 12] cc => I, Pos: [5, 12] cc => I, Pos: [6, 10] cc => I, Pos: [6, 10] cc => I, Pos: [8, 14] xx => I, Pos: [8, 14] xx => I, Pos: [13, 18] cc => I, Pos: [13, 18] cc => I, Pos: [18, 26, 32] ccc => cc, Pos: [22, 29] cc => I, Pos: [22, 29] cc => I, Pos: [24, 41] cc => I, Pos: [24, 41] cc => I, Pos: [25, 34] cc => I, Pos: [25, 34] cc => I, Pos: [30, 42] cc => I, Pos: [30, 42] cc => I, Pos: [35, 43] xx => I, Pos: [35, 43] xx => I, Pos: [43, 51] xx => I, Pos: [43, 51] xx => I, Pos: [49, 56] cc => I, Pos: [49, 56] cc => I, Pos: [50, 70] cc => I, Pos: [50, 70] cc => I, Pos: [59, 66] cc => I, Pos: [59, 66] cc => I, Pos: [61, 69, 74] ccc => cc, Pos: [77, 84] cc => I, Pos: [77, 84] cc => I, Pos: [78, 85] cc => I, Pos: [78, 85] cc => I, Pos: [80, 87] xx => I, Pos: [80, 87] xx => I, Pos: [87, 93] xx => I, Pos: [87, 93] xx => I, Pos: [91, 99, 104] ccc => cc, Pos: [93, 100] xx => I, Pos: [93, 100] xx => I, Pos: [100, 107] xx => I, Pos: [100, 107] xx => I, Pos: [102, 110] cc => I, Pos: [102, 110] cc => I, Pos: [104, 112] cc => I, Pos: [104, 112] cc => I, Pos: [106, 120] cc => I, Pos: [106, 120] cc => I, Pos: [113, 121] cc => I, Pos: [113, 121] cc => I, Pos: [121, 137] cc => I, Pos: [121, 137] cc => I, Pos: [124, 133] xx => I, Pos: [124, 133] xx => I, Pos: [134, 142, 149] xcx => c, Pos: [138, 144] cc => I, Pos: [138, 144] cc => I, Pos: [139, 148] xx => I, Pos: [139, 148] xx => I, Pos: [159, 163] cc => I, Pos: [159, 163] cc => I, Pos: [160, 167] xx => I, Pos: [160, 167] xx => I, Pos: [162, 174] cc => I, Pos: [162, 174] cc => I, Pos: [167, 176] xx => I, Pos: [167, 176] xx => I, Pos: [169, 177, 183] xcx => c, Pos: [176, 181] xx => I, Pos: [176, 181] xx => I, Pos: [178, 184] cc => I, Pos: [178, 184] cc => I, Pos: [181, 189] xx => I, Pos: [181, 189] xx => I, Pos: [189, 197] xx => I, Pos: [189, 197] xx => I, Pos: [190, 198] xx => I, Pos: [190, 198] xx => I, Pos: [193, 211] cc => I, Pos: [193, 211] cc => I, Pos: [197, 204] xx => I, Pos: [197, 204] xx => I, Pos: [204, 213] xx => I, Pos: [204, 213] xx => I, Pos: [208, 219] cc => I, Pos: [208, 219] cc => I, Pos: [211, 224] cc => I, Pos: [211, 224] cc => I, Pos: [226, 233] cc => I, Pos: [226, 233] cc => I, Pos: [228, 236] xx => I, Pos: [228, 236] xx => I, Pos: [235, 251] cc => I, Pos: [235, 251] cc => I, Pos: [243, 252] cc => I, Pos: [243, 252] cc => I, Pos: [246, 267] cc => I, Pos: [246, 267] cc => I, Pos: [264, 275] cc => I, Pos: [264, 275] cc => I, Pos: [272, 279] xx => I, Pos: [272, 279] xx => I, Pos: [276, 283] cc => I, Pos: [276, 283] cc => I, Pos: [288, 295] cc => I, Pos: [288, 295] cc => I, Pos: [294, 314] cc => I, Pos: [294, 314] cc => I, Pos: [295, 304] cc => I, Pos: [295, 304] cc => I, Pos: [301, 312] cc => I, Pos: [301, 312] cc => I]

--------End Timer [Generate Plans]:  0.12472319602966309

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 8] xx => I,
 Pos: [5, 12] cc => I,
 Pos: [6, 10] cc => I,
 Pos: [13, 18] cc => I,
 Pos: [22, 29] cc => I,
 Pos: [24, 41] cc => I,
 Pos: [25, 34] cc => I,
 Pos: [30, 42] cc => I,
 Pos: [35, 43] xx => I,
 Pos: [49, 56] cc => I,
 Pos: [50, 70] cc => I,
 Pos: [59, 66] cc => I,
 Pos: [61, 69, 74] ccc => cc,
 Pos: [77, 84] cc => I,
 Pos: [78, 85] cc => I,
 Pos: [87, 93] xx => I,
 Pos: [104, 112] cc => I,
 Pos: [100, 107] xx => I,
 Pos: [102, 110] cc => I,
 Pos: [106, 120] cc => I,
 Pos: [121, 137] cc => I,
 Pos: [124, 133] xx => I,
 Pos: [134, 142, 149] xcx => c,
 Pos: [138, 144] cc => I,
 Pos: [139, 148] xx => I,
 Pos: [159, 163] cc => I,
 Pos: [167, 176] xx => I,
 Pos: [162, 174] cc => I,
 Pos: [169, 177, 183] xcx => c,
 Pos: [178, 184] cc => I,
 Pos: [181, 189] xx => I,
 Pos: [190, 198] xx => I,
 Pos: [193, 211] cc => I,
 Pos: [204, 213] xx => I,
 Pos: [208, 219] cc => I,
 Pos: [226, 233] cc => I,
 Pos: [228, 236] xx => I,
 Pos: [235, 251] cc => I,
 Pos: [243, 252] cc => I,
 Pos: [246, 267] cc => I,
 Pos: [264, 275] cc => I,
 Pos: [272, 279] xx => I,
 Pos: [276, 283] cc => I,
 Pos: [295, 304] cc => I,
 Pos: [294, 314] cc => I,
 Pos: [301, 312] cc => I]
Change: 46, Saving: 46

Circuit before: xxccccccxxccccxxccccxxccccccxccccccxxxcccccxxxxxcccxxcccccxccccccxcccccxccccccccxxcccccxxccccxccccccxccccccxxxccccxxxcccccxxxxcccccxxxxccccxxcccccxxxxccccccccccxccccccxxxxcccccxccccxxxcccccxxxcccccxxcccccxxxxcccccxxcccccxxccccccxxxxccccxxccccccccccxxxccccxccccccxcccccccccxxcccccxxccccccccccxcccccccxxccccxxcccccccc
---------------
Apply:  Pos: [0, 8] xx => I
Apply:  Pos: [5, 12] cc => I
Apply:  Pos: [6, 10] cc => I
Apply:  Pos: [13, 18] cc => I
Apply:  Pos: [22, 29] cc => I
Apply:  Pos: [24, 41] cc => I
Apply:  Pos: [25, 34] cc => I
Apply:  Pos: [30, 42] cc => I
Apply:  Pos: [35, 43] xx => I
Apply:  Pos: [49, 56] cc => I
Apply:  Pos: [50, 70] cc => I
Apply:  Pos: [59, 66] cc => I
Apply:  Pos: [61, 69, 74] ccc => cc
Apply:  Pos: [77, 84] cc => I
Apply:  Pos: [78, 85] cc => I
Apply:  Pos: [87, 93] xx => I
Apply:  Pos: [104, 112] cc => I
Apply:  Pos: [100, 107] xx => I
Apply:  Pos: [102, 110] cc => I
Apply:  Pos: [106, 120] cc => I
Apply:  Pos: [121, 137] cc => I
Apply:  Pos: [124, 133] xx => I
Apply:  Pos: [134, 142, 149] xcx => c
Apply:  Pos: [138, 144] cc => I
Apply:  Pos: [139, 148] xx => I
Apply:  Pos: [159, 163] cc => I
Apply:  Pos: [167, 176] xx => I
Apply:  Pos: [162, 174] cc => I
Apply:  Pos: [169, 177, 183] xcx => c
Apply:  Pos: [178, 184] cc => I
Apply:  Pos: [181, 189] xx => I
Apply:  Pos: [190, 198] xx => I
Apply:  Pos: [193, 211] cc => I
Apply:  Pos: [204, 213] xx => I
Apply:  Pos: [208, 219] cc => I
Apply:  Pos: [226, 233] cc => I
Apply:  Pos: [228, 236] xx => I
Apply:  Pos: [235, 251] cc => I
Apply:  Pos: [243, 252] cc => I
Apply:  Pos: [246, 267] cc => I
Apply:  Pos: [264, 275] cc => I
Apply:  Pos: [272, 279] xx => I
Apply:  Pos: [276, 283] cc => I
Apply:  Pos: [295, 304] cc => I
Apply:  Pos: [294, 314] cc => I
Apply:  Pos: [301, 312] cc => I
---------------
Circuit after: xccccxcxxcccxxcccxcccxxcccxxxxcxxccccxcccccxcccxcccccxxcccxcccccccccccccxxccxxxcccxxxcccccxxcccxcccxxcccccccccxccccxcxccccccxccccxccccxcccccxxxcccxccccxxcccccxxxccxccccccccxxxccxccccccxcccccccxcccxcccccccccxcccccxxccxxcccccc

--------End Timer [apply mapping plan]:  0.0

[18], [1, 13], [6, 8], [12, 7], [3, 16], [17], [6, 2], [19], [10], [0, 12], [15, 18], [2, 8], [3], [16], [4, 18], [12, 1], [8, 15], [4], [15, 18], [1, 7], [13, 3], [6], [14], [7, 8], [1, 13], [16, 4], [17], [1], [7], [3], [8, 15], [19], [11], [3, 16], [2, 8], [12, 14], [15, 10], [18], [6, 8], [17, 11], [7, 15], [14, 1], [3, 5], [2], [8, 16], [1, 7], [11, 10], [19], [9, 5], [12, 7], [16, 15], [19, 3], [5, 4], [19], [12], [1, 7], [16, 5], [6, 2], [13], [7, 16], [14, 1], [15, 11], [8, 17], [12, 7], [14, 6], [13, 9], [1, 3], [2, 17], [11, 10], [3, 4], [1, 13], [18, 10], [6], [9], [12, 1], [4, 18], [3], [7], [16], [19, 1], [8, 17], [9, 5], [19], [12], [10], [14, 6], [3, 5], [7, 15], [13, 9], [2, 8], [5], [9], [1, 13], [19, 3], [12, 7], [14], [0, 19], [6, 8], [18, 10], [19], [6], [1, 3], [0, 12], [5, 4], [0, 19], [11, 10], [1, 13], [16, 4], [8, 15], [3, 5], [0], [15, 10], [13, 9], [11, 18], [19, 1], [11], [15, 10], [8], [14, 1], [19, 13], [15, 18], [7, 16], [7, 8], [9, 5], [3], [7, 15], [2, 17], [16, 4], [19, 1], [15], [1, 13], [3, 5], [8, 17], [18, 10], [0], [15, 10], [9, 5], [13, 3], [2, 8], [14, 1], [6], [9], [2], [3, 4], [19, 13], [15, 18], [8], [14, 6], [3, 5], [7, 15], [13, 9], [14], [6], [0, 19], [11, 18], [7, 16], [12, 1], [15, 10], [15], [9], [16], [19, 1], [6, 2], [2], [17, 11], [13, 3], [14, 6], [8, 16], [0, 19], [16, 15], [12, 7], [3, 4], [0], [15], [6], [16, 4], [7, 8], [11], [0, 12], [8, 15], [13, 3], [1, 7], [5, 4], [6, 2], [12], [8, 17], [14, 6], [15, 18], [12, 7], [6, 17], [3, 4], [16, 15], [0], [17, 11], [18, 10], [19, 1], [8], [19, 3], [1, 13], [6, 2], [12, 1], [8, 16], [2, 17], [11, 10], [5, 4], [14, 6], [15], [12, 14], [13, 9], [7, 8], [16, 4], [3, 5], [12], [4], [3, 16], [7, 15], [13], [14], [0, 12], [5, 4], [19, 3], [1, 7], [15, 11], [18, 10], ----End Timer [Execute Mapping]:  2.484182119369507

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[92, 106]
[111, 116]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[5, 26]
[7, 31]
[31, 47]
[110, 134]
[100, 140]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[107, 122, 127]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[133, 135, 145]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[5, 26]
[7, 31]
[31, 47]
[110, 134]
[100, 140]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[92, 106]
[111, 116]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.6718533039093018

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [5, 26] xx => I, Pos: [5, 26] xx => I, Pos: [7, 31] xx => I, Pos: [7, 31] xx => I, Pos: [31, 47] xx => I, Pos: [31, 47] xx => I, Pos: [92, 106] cc => I, Pos: [92, 106] cc => I, Pos: [100, 140] xx => I, Pos: [100, 140] xx => I, Pos: [107, 122, 127] ccc => cc, Pos: [110, 134] xx => I, Pos: [110, 134] xx => I, Pos: [111, 116] cc => I, Pos: [111, 116] cc => I, Pos: [133, 135, 145] ccc => cc]

--------End Timer [Generate Plans]:  0.031247377395629883

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [5, 26] xx => I,
 Pos: [31, 47] xx => I,
 Pos: [92, 106] cc => I,
 Pos: [100, 140] xx => I,
 Pos: [107, 122, 127] ccc => cc,
 Pos: [110, 134] xx => I,
 Pos: [111, 116] cc => I,
 Pos: [133, 135, 145] ccc => cc]
Change: 8, Saving: 9

Circuit before: xccccxcxxcccxxcccxcccxxcccxxxxcxxccccxcccccxcccxcccccxxcccxcccccccccccccxxccxxxcccxxxcccccxxcccxcccxxcccccccccxccccxcxccccccxccccxccccxcccccxxxcccxccccxxcccccxxxccxccccccccxxxccxccccccxcccccccxcccxcccccccccxcccccxxccxxcccccc
---------------
Apply:  Pos: [5, 26] xx => I
Apply:  Pos: [31, 47] xx => I
Apply:  Pos: [92, 106] cc => I
Apply:  Pos: [100, 140] xx => I
Apply:  Pos: [107, 122, 127] ccc => cc
Apply:  Pos: [110, 134] xx => I
Apply:  Pos: [111, 116] cc => I
Apply:  Pos: [133, 135, 145] ccc => cc
---------------
Circuit after: xcccccxxcccxxcccxcccxxcccxxxcxccccxcccccxccccccccxxcccxcccccccccccccxxccxxxcccxxxcccccxxccxcccxcccccccccccxxccccccxcccxcccccccccxxccxccccxxcccccxxxccxccccccccxxxccxccccccxcccccccxcccxcccccccccxcccccxxccxxcccccc

--------End Timer [apply mapping plan]:  0.0

[18], [1, 13], [6, 8], [12, 7], [3, 16], [6, 2], [19], [10], [0, 12], [15, 18], [2, 8], [3], [16], [4, 18], [12, 1], [8, 15], [4], [15, 18], [1, 7], [13, 3], [6], [14], [7, 8], [1, 13], [16, 4], [1], [7], [3], [8, 15], [11], [3, 16], [2, 8], [12, 14], [15, 10], [18], [6, 8], [17, 11], [7, 15], [14, 1], [3, 5], [2], [8, 16], [1, 7], [11, 10], [9, 5], [12, 7], [16, 15], [19, 3], [5, 4], [19], [12], [1, 7], [16, 5], [6, 2], [13], [7, 16], [14, 1], [15, 11], [8, 17], [12, 7], [14, 6], [13, 9], [1, 3], [2, 17], [11, 10], [3, 4], [1, 13], [18, 10], [6], [9], [12, 1], [4, 18], [3], [7], [16], [19, 1], [8, 17], [9, 5], [19], [12], [10], [14, 6], [3, 5], [7, 15], [13, 9], [2, 8], [5], [9], [19, 3], [12, 7], [14], [0, 19], [6, 8], [18, 10], [19], [1, 3], [0, 12], [5, 4], [0, 19], [11, 10], [7, 16], [8, 15], [3, 5], [13, 9], [11, 18], [19, 1], [11], [8], [14, 1], [19, 13], [15, 18], [7, 8], [16, 4], [9, 5], [3], [7, 15], [2, 17], [19, 1], [15], [1, 13], [3, 5], [8, 17], [15, 18], [18, 10], [9, 5], [13, 3], [2, 8], [14, 1], [9], [2], [3, 4], [19, 13], [8], [14, 6], [3, 5], [7, 15], [13, 9], [14], [6], [0, 19], [11, 18], [7, 16], [12, 1], [15, 10], [15], [9], [16], [19, 1], [6, 2], [2], [17, 11], [13, 3], [14, 6], [8, 16], [0, 19], [16, 15], [12, 7], [3, 4], [0], [15], [6], [16, 4], [7, 8], [11], [0, 12], [8, 15], [13, 3], [1, 7], [5, 4], [6, 2], [12], [8, 17], [14, 6], [15, 18], [12, 7], [6, 17], [3, 4], [16, 15], [0], [17, 11], [18, 10], [19, 1], [8], [19, 3], [1, 13], [6, 2], [12, 1], [8, 16], [2, 17], [11, 10], [5, 4], [14, 6], [15], [12, 14], [13, 9], [7, 8], [16, 4], [3, 5], [12], [4], [3, 16], [7, 15], [13], [14], [0, 12], [5, 4], [19, 3], [1, 7], [15, 11], [18, 10], ----End Timer [Execute Mapping]:  1.7031006813049316

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[93, 99, 104]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.6562955379486084

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [93, 99, 104] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [93, 99, 104] ccc => cc]
Change: 1, Saving: 1

Circuit before: xcccccxxcccxxcccxcccxxcccxxxcxccccxcccccxccccccccxxcccxcccccccccccccxxccxxxcccxxxcccccxxccxcccxcccccccccccxxccccccxcccxcccccccccxxccxccccxxcccccxxxccxccccccccxxxccxccccccxcccccccxcccxcccccccccxcccccxxccxxcccccc
---------------
Apply:  Pos: [93, 99, 104] ccc => cc
---------------
Circuit after: xcccccxxcccxxcccxcccxxcccxxxcxccccxcccccxccccccccxxcccxcccccccccccccxxccxxxcccxxxcccccxxccxcccxccccccccccxxccccccxcccxcccccccccxxccxccccxxcccccxxxccxccccccccxxxccxccccccxcccccccxcccxcccccccccxcccccxxccxxcccccc

--------End Timer [apply mapping plan]:  0.0

[18], [1, 13], [6, 8], [12, 7], [3, 16], [6, 2], [19], [10], [0, 12], [15, 18], [2, 8], [3], [16], [4, 18], [12, 1], [8, 15], [4], [15, 18], [1, 7], [13, 3], [6], [14], [7, 8], [1, 13], [16, 4], [1], [7], [3], [8, 15], [11], [3, 16], [2, 8], [12, 14], [15, 10], [18], [6, 8], [17, 11], [7, 15], [14, 1], [3, 5], [2], [8, 16], [1, 7], [11, 10], [9, 5], [12, 7], [16, 15], [19, 3], [5, 4], [19], [12], [1, 7], [16, 5], [6, 2], [13], [7, 16], [14, 1], [15, 11], [8, 17], [12, 7], [14, 6], [13, 9], [1, 3], [2, 17], [11, 10], [3, 4], [1, 13], [18, 10], [6], [9], [12, 1], [4, 18], [3], [7], [16], [19, 1], [8, 17], [9, 5], [19], [12], [10], [14, 6], [3, 5], [7, 15], [13, 9], [2, 8], [5], [9], [19, 3], [12, 7], [14], [0, 19], [6, 8], [11, 18], [19], [1, 3], [0, 12], [5, 4], [0, 19], [18, 10], [7, 16], [8, 15], [3, 5], [13, 9], [19, 1], [11], [8], [14, 1], [19, 13], [15, 18], [7, 8], [16, 4], [9, 5], [3], [7, 15], [2, 17], [19, 1], [15], [1, 13], [3, 5], [8, 17], [15, 18], [18, 10], [9, 5], [13, 3], [2, 8], [14, 1], [9], [2], [3, 4], [19, 13], [8], [14, 6], [3, 5], [7, 15], [13, 9], [14], [6], [0, 19], [11, 18], [7, 16], [12, 1], [15, 10], [15], [9], [16], [19, 1], [6, 2], [2], [17, 11], [13, 3], [14, 6], [8, 16], [0, 19], [16, 15], [12, 7], [3, 4], [0], [15], [6], [16, 4], [7, 8], [11], [0, 12], [8, 15], [13, 3], [1, 7], [5, 4], [6, 2], [12], [8, 17], [14, 6], [15, 18], [12, 7], [6, 17], [3, 4], [16, 15], [0], [17, 11], [18, 10], [19, 1], [8], [19, 3], [1, 13], [6, 2], [12, 1], [8, 16], [2, 17], [11, 10], [5, 4], [14, 6], [15], [12, 14], [13, 9], [7, 8], [16, 4], [3, 5], [12], [4], [3, 16], [7, 15], [13], [14], [0, 12], [5, 4], [19, 3], [1, 7], [15, 11], [18, 10], ----End Timer [Execute Mapping]:  1.6562955379486084

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.6251707077026367

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: xcccccxxcccxxcccxcccxxcccxxxcxccccxcccccxccccccccxxcccxcccccccccccccxxccxxxcccxxxcccccxxccxcccxccccccccccxxccccccxcccxcccccccccxxccxccccxxcccccxxxccxccccccccxxxccxccccccxcccccccxcccxcccccccccxcccccxxccxxcccccc
---------------
---------------
Circuit after: xcccccxxcccxxcccxcccxxcccxxxcxccccxcccccxccccccccxxcccxcccccccccccccxxccxxxcccxxxcccccxxccxcccxccccccccccxxccccccxcccxcccccccccxxccxccccxxcccccxxxccxccccccccxxxccxccccccxcccccccxcccxcccccccccxcccccxxccxxcccccc

--------End Timer [apply mapping plan]:  0.0

[18], [1, 13], [6, 8], [12, 7], [3, 16], [6, 2], [19], [10], [0, 12], [15, 18], [2, 8], [3], [16], [4, 18], [12, 1], [8, 15], [4], [15, 18], [1, 7], [13, 3], [6], [14], [7, 8], [1, 13], [16, 4], [1], [7], [3], [8, 15], [11], [3, 16], [2, 8], [12, 14], [15, 10], [18], [6, 8], [17, 11], [7, 15], [14, 1], [3, 5], [2], [8, 16], [1, 7], [11, 10], [9, 5], [12, 7], [16, 15], [19, 3], [5, 4], [19], [12], [1, 7], [16, 5], [6, 2], [13], [7, 16], [14, 1], [15, 11], [8, 17], [12, 7], [14, 6], [13, 9], [1, 3], [2, 17], [11, 10], [3, 4], [1, 13], [18, 10], [6], [9], [12, 1], [4, 18], [3], [7], [16], [19, 1], [8, 17], [9, 5], [19], [12], [10], [14, 6], [3, 5], [7, 15], [13, 9], [2, 8], [5], [9], [19, 3], [12, 7], [14], [0, 19], [6, 8], [11, 18], [19], [1, 3], [0, 12], [5, 4], [0, 19], [18, 10], [7, 16], [8, 15], [3, 5], [13, 9], [19, 1], [11], [8], [14, 1], [19, 13], [15, 18], [7, 8], [16, 4], [9, 5], [3], [7, 15], [2, 17], [19, 1], [15], [1, 13], [3, 5], [8, 17], [15, 18], [18, 10], [9, 5], [13, 3], [2, 8], [14, 1], [9], [2], [3, 4], [19, 13], [8], [14, 6], [3, 5], [7, 15], [13, 9], [14], [6], [0, 19], [11, 18], [7, 16], [12, 1], [15, 10], [15], [9], [16], [19, 1], [6, 2], [2], [17, 11], [13, 3], [14, 6], [8, 16], [0, 19], [16, 15], [12, 7], [3, 4], [0], [15], [6], [16, 4], [7, 8], [11], [0, 12], [8, 15], [13, 3], [1, 7], [5, 4], [6, 2], [12], [8, 17], [14, 6], [15, 18], [12, 7], [6, 17], [3, 4], [16, 15], [0], [17, 11], [18, 10], [19, 1], [8], [19, 3], [1, 13], [6, 2], [12, 1], [8, 16], [2, 17], [11, 10], [5, 4], [14, 6], [15], [12, 14], [13, 9], [7, 8], [16, 4], [3, 5], [12], [4], [3, 16], [7, 15], [13], [14], [0, 12], [5, 4], [19, 3], [1, 7], [15, 11], [18, 10], ----End Timer [Execute Mapping]:  1.6251707077026367

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: x-x-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-x-x-x-x-x-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [315] (IBM)
 --------------------
 - qubits_num: 20, using gates: [x,cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 540


>> Solved circuit: 
Circuit Info: 
 - circuit: x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-x-x-cx-cx-cx-x-cx-cx-cx-x-x-cx-cx-cx-x-x-x-cx-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-x-x-x-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-x-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-x-x-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-x-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-cx-cx-x-x-cx-cx-cx-cx-cx-cx 
     => total size: [209] (IBM)
 --------------------
 - qubits_num: 20, using gates: [x,cx]
 - circuit depth: 39 - (small)
 - circuit cycle: 364

Reduced: 
 - size: 106 (33.65%)
 - depth: 6 (13.33%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.14061570167541504

[19], [18], [1, 13], [6, 8], [12, 7], [15, 11], [5, 4], [3, 16], [19], [17], [5, 4], [6, 2], [15, 11], [1, 7], [19], [10], [0, 12], [15, 18], [1, 7], [2, 8], [3], [16], [0, 19], [4, 18], [9, 5], [2, 17], [12, 1], [8, 15], [4], [0, 19], [11, 10], [15, 18], [1, 7], [13, 3], [2, 17], [19], [6], [14], [7, 8], [1, 13], [16, 4], [9, 5], [11, 10], [19], [17], [1], [7], [3], [8, 15], [4, 18], [13, 9], [19], [11], [3, 16], [2, 8], [12, 14], [4, 18], [15, 10], [18], [0, 19], [6, 8], [11, 10], [7, 15], [14, 1], [3, 5], [2], [0, 19], [8, 16], [1, 7], [17, 11], [13, 9], [19], [9, 5], [12, 7], [11, 10], [16, 15], [19, 3], [11, 18], [8, 15], [5, 4], [19], [12], [1, 7], [16, 5], [11, 18], [8, 15], [6, 2], [19], [13], [7, 16], [14, 1], [15, 11], [8, 17], [19], [12, 7], [14, 6], [13, 9], [1, 3], [2, 17], [11, 10], [19], [3, 4], [16, 5], [1, 13], [15, 11], [18, 10], [12, 14], [19], [6], [9], [16, 5], [12, 1], [15, 11], [4, 18], [3], [7], [16], [19, 1], [8, 17], [9, 5], [12, 14], [4, 18], [19], [12], [0], [10], [14, 6], [3, 5], [7, 15], [13, 9], [2, 8], [5], [9], [0], [13], [19, 3], [12, 7], [4, 18], [16, 15], [17], [14], [0, 19], [1, 13], [6, 8], [16, 15], [18, 10], [19], [6], [17], [13], [1, 3], [0, 12], [5, 4], [0, 19], [11, 10], [1, 13], [16, 4], [8, 15], [3, 5], [14, 7], [0], [15, 10], [6, 2], [14, 7], [13, 9], [11, 18], [19, 1], [0], [11], [10], [8], [14, 1], [19, 13], [15, 18], [6, 2], [7, 16], [0], [15, 10], [12, 14], [7, 8], [9, 5], [0], [3], [10], [12, 14], [7, 15], [2, 17], [16, 4], [19, 1], [0], [4], [15], [1, 13], [7, 16], [3, 5], [8, 17], [18, 10], [0], [4], [15, 10], [9, 5], [13, 3], [2, 8], [14, 1], [0], [6], [9], [2], [11, 10], [3, 4], [19, 13], [7, 16], [15, 18], [0], [8], [14, 6], [3, 5], [7, 15], [13, 9], [11, 10], [14], [6], [0, 19], [11, 18], [7, 16], [12, 1], [8, 17], [15, 10], [0], [15], [9], [16], [19, 1], [8, 17], [6, 2], [18, 10], [0], [2], [17, 11], [13, 3], [14, 6], [8, 16], [0, 19], [2, 17], [16, 15], [12, 7], [13, 9], [3, 4], [0], [15], [6], [18, 10], [2, 17], [16, 4], [7, 8], [11], [0, 12], [8, 15], [13, 3], [1, 7], [5, 4], [6, 2], [12], [8, 17], [3, 5], [14, 6], [15, 18], [13, 9], [12, 7], [6, 17], [3, 4], [16, 15], [12], [0], [17, 11], [3, 5], [16, 4], [18, 10], [19, 1], [12], [8], [19, 3], [1, 13], [16, 4], [6, 2], [12, 1], [8, 16], [2, 17], [11, 10], [5, 4], [14, 6], [15], [12, 14], [13, 9], [6, 2], [11, 10], [7, 8], [16, 4], [3, 5], [12], [4], [8, 17], [3, 16], [7, 15], [11, 10], [13], [14], [0, 12], [5, 4], [19, 3], [1, 7], [15, 11], [8, 17], [18, 10], [6, 2], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[6, 10]
[5, 12]
[13, 18]
[22, 29]
[25, 34]
[24, 41]
[30, 42]
[49, 56]
[59, 66]
[50, 70]
[77, 84]
[78, 85]
[102, 110]
[104, 112]
[106, 120]
[113, 121]
[121, 137]
[138, 144]
[159, 163]
[162, 174]
[178, 184]
[193, 211]
[208, 219]
[211, 224]
[226, 233]
[235, 251]
[243, 252]
[246, 267]
[264, 275]
[276, 283]
[288, 295]
[295, 304]
[301, 312]
[294, 314]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[0, 8]
[8, 14]
[35, 43]
[43, 51]
[80, 87]
[87, 93]
[93, 100]
[100, 107]
[124, 133]
[139, 148]
[160, 167]
[167, 176]
[176, 181]
[181, 189]
[189, 197]
[190, 198]
[197, 204]
[204, 213]
[228, 236]
[272, 279]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[91, 99, 104]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 

[134, 142, 149]
[169, 177, 183]

------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[18, 26, 32]
[61, 69, 74]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[0, 8]
[8, 14]
[35, 43]
[43, 51]
[80, 87]
[87, 93]
[93, 100]
[100, 107]
[124, 133]
[139, 148]
[160, 167]
[167, 176]
[176, 181]
[181, 189]
[189, 197]
[190, 198]
[197, 204]
[204, 213]
[228, 236]
[272, 279]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[6, 10]
[5, 12]
[13, 18]
[22, 29]
[25, 34]
[24, 41]
[30, 42]
[49, 56]
[59, 66]
[50, 70]
[77, 84]
[78, 85]
[102, 110]
[104, 112]
[106, 120]
[113, 121]
[121, 137]
[138, 144]
[159, 163]
[162, 174]
[178, 184]
[193, 211]
[208, 219]
[211, 224]
[226, 233]
[235, 251]
[243, 252]
[246, 267]
[264, 275]
[276, 283]
[288, 295]
[295, 304]
[301, 312]
[294, 314]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.3906748294830322

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 8] xx => I, Pos: [0, 8] xx => I, Pos: [5, 12] cc => I, Pos: [5, 12] cc => I, Pos: [6, 10] cc => I, Pos: [6, 10] cc => I, Pos: [8, 14] xx => I, Pos: [8, 14] xx => I, Pos: [13, 18] cc => I, Pos: [13, 18] cc => I, Pos: [18, 26, 32] ccc => cc, Pos: [22, 29] cc => I, Pos: [22, 29] cc => I, Pos: [24, 41] cc => I, Pos: [24, 41] cc => I, Pos: [25, 34] cc => I, Pos: [25, 34] cc => I, Pos: [30, 42] cc => I, Pos: [30, 42] cc => I, Pos: [35, 43] xx => I, Pos: [35, 43] xx => I, Pos: [43, 51] xx => I, Pos: [43, 51] xx => I, Pos: [49, 56] cc => I, Pos: [49, 56] cc => I, Pos: [50, 70] cc => I, Pos: [50, 70] cc => I, Pos: [59, 66] cc => I, Pos: [59, 66] cc => I, Pos: [61, 69, 74] ccc => cc, Pos: [77, 84] cc => I, Pos: [77, 84] cc => I, Pos: [78, 85] cc => I, Pos: [78, 85] cc => I, Pos: [80, 87] xx => I, Pos: [80, 87] xx => I, Pos: [87, 93] xx => I, Pos: [87, 93] xx => I, Pos: [91, 99, 104] ccc => cc, Pos: [93, 100] xx => I, Pos: [93, 100] xx => I, Pos: [100, 107] xx => I, Pos: [100, 107] xx => I, Pos: [102, 110] cc => I, Pos: [102, 110] cc => I, Pos: [104, 112] cc => I, Pos: [104, 112] cc => I, Pos: [106, 120] cc => I, Pos: [106, 120] cc => I, Pos: [113, 121] cc => I, Pos: [113, 121] cc => I, Pos: [121, 137] cc => I, Pos: [121, 137] cc => I, Pos: [124, 133] xx => I, Pos: [124, 133] xx => I, Pos: [134, 142, 149] xcx => c, Pos: [138, 144] cc => I, Pos: [138, 144] cc => I, Pos: [139, 148] xx => I, Pos: [139, 148] xx => I, Pos: [159, 163] cc => I, Pos: [159, 163] cc => I, Pos: [160, 167] xx => I, Pos: [160, 167] xx => I, Pos: [162, 174] cc => I, Pos: [162, 174] cc => I, Pos: [167, 176] xx => I, Pos: [167, 176] xx => I, Pos: [169, 177, 183] xcx => c, Pos: [176, 181] xx => I, Pos: [176, 181] xx => I, Pos: [178, 184] cc => I, Pos: [178, 184] cc => I, Pos: [181, 189] xx => I, Pos: [181, 189] xx => I, Pos: [189, 197] xx => I, Pos: [189, 197] xx => I, Pos: [190, 198] xx => I, Pos: [190, 198] xx => I, Pos: [193, 211] cc => I, Pos: [193, 211] cc => I, Pos: [197, 204] xx => I, Pos: [197, 204] xx => I, Pos: [204, 213] xx => I, Pos: [204, 213] xx => I, Pos: [208, 219] cc => I, Pos: [208, 219] cc => I, Pos: [211, 224] cc => I, Pos: [211, 224] cc => I, Pos: [226, 233] cc => I, Pos: [226, 233] cc => I, Pos: [228, 236] xx => I, Pos: [228, 236] xx => I, Pos: [235, 251] cc => I, Pos: [235, 251] cc => I, Pos: [243, 252] cc => I, Pos: [243, 252] cc => I, Pos: [246, 267] cc => I, Pos: [246, 267] cc => I, Pos: [264, 275] cc => I, Pos: [264, 275] cc => I, Pos: [272, 279] xx => I, Pos: [272, 279] xx => I, Pos: [276, 283] cc => I, Pos: [276, 283] cc => I, Pos: [288, 295] cc => I, Pos: [288, 295] cc => I, Pos: [294, 314] cc => I, Pos: [294, 314] cc => I, Pos: [295, 304] cc => I, Pos: [295, 304] cc => I, Pos: [301, 312] cc => I, Pos: [301, 312] cc => I]

--------End Timer [Generate Plans]:  0.109588623046875

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 8] xx => I,
 Pos: [5, 12] cc => I,
 Pos: [6, 10] cc => I,
 Pos: [18, 26, 32] ccc => cc,
 Pos: [22, 29] cc => I,
 Pos: [24, 41] cc => I,
 Pos: [25, 34] cc => I,
 Pos: [30, 42] cc => I,
 Pos: [35, 43] xx => I,
 Pos: [49, 56] cc => I,
 Pos: [50, 70] cc => I,
 Pos: [59, 66] cc => I,
 Pos: [61, 69, 74] ccc => cc,
 Pos: [77, 84] cc => I,
 Pos: [78, 85] cc => I,
 Pos: [87, 93] xx => I,
 Pos: [91, 99, 104] ccc => cc,
 Pos: [100, 107] xx => I,
 Pos: [102, 110] cc => I,
 Pos: [106, 120] cc => I,
 Pos: [121, 137] cc => I,
 Pos: [124, 133] xx => I,
 Pos: [134, 142, 149] xcx => c,
 Pos: [138, 144] cc => I,
 Pos: [139, 148] xx => I,
 Pos: [159, 163] cc => I,
 Pos: [167, 176] xx => I,
 Pos: [162, 174] cc => I,
 Pos: [169, 177, 183] xcx => c,
 Pos: [178, 184] cc => I,
 Pos: [189, 197] xx => I,
 Pos: [190, 198] xx => I,
 Pos: [211, 224] cc => I,
 Pos: [204, 213] xx => I,
 Pos: [208, 219] cc => I,
 Pos: [226, 233] cc => I,
 Pos: [228, 236] xx => I,
 Pos: [235, 251] cc => I,
 Pos: [243, 252] cc => I,
 Pos: [246, 267] cc => I,
 Pos: [264, 275] cc => I,
 Pos: [272, 279] xx => I,
 Pos: [276, 283] cc => I,
 Pos: [295, 304] cc => I,
 Pos: [294, 314] cc => I,
 Pos: [301, 312] cc => I]
Change: 46, Saving: 46

Circuit before: xxccccccxxccccxxccccxxccccccxccccccxxxcccccxxxxxcccxxcccccxccccccxcccccxccccccccxxcccccxxccccxccccccxccccccxxxccccxxxcccccxxxxcccccxxxxccccxxcccccxxxxccccccccccxccccccxxxxcccccxccccxxxcccccxxxcccccxxcccccxxxxcccccxxcccccxxccccccxxxxccccxxccccccccccxxxccccxccccccxcccccccccxxcccccxxccccccccccxcccccccxxccccxxcccccccc
---------------
Apply:  Pos: [0, 8] xx => I
Apply:  Pos: [5, 12] cc => I
Apply:  Pos: [6, 10] cc => I
Apply:  Pos: [18, 26, 32] ccc => cc
Apply:  Pos: [22, 29] cc => I
Apply:  Pos: [24, 41] cc => I
Apply:  Pos: [25, 34] cc => I
Apply:  Pos: [30, 42] cc => I
Apply:  Pos: [35, 43] xx => I
Apply:  Pos: [49, 56] cc => I
Apply:  Pos: [50, 70] cc => I
Apply:  Pos: [59, 66] cc => I
Apply:  Pos: [61, 69, 74] ccc => cc
Apply:  Pos: [77, 84] cc => I
Apply:  Pos: [78, 85] cc => I
Apply:  Pos: [87, 93] xx => I
Apply:  Pos: [91, 99, 104] ccc => cc
Apply:  Pos: [100, 107] xx => I
Apply:  Pos: [102, 110] cc => I
Apply:  Pos: [106, 120] cc => I
Apply:  Pos: [121, 137] cc => I
Apply:  Pos: [124, 133] xx => I
Apply:  Pos: [134, 142, 149] xcx => c
Apply:  Pos: [138, 144] cc => I
Apply:  Pos: [139, 148] xx => I
Apply:  Pos: [159, 163] cc => I
Apply:  Pos: [167, 176] xx => I
Apply:  Pos: [162, 174] cc => I
Apply:  Pos: [169, 177, 183] xcx => c
Apply:  Pos: [178, 184] cc => I
Apply:  Pos: [189, 197] xx => I
Apply:  Pos: [190, 198] xx => I
Apply:  Pos: [211, 224] cc => I
Apply:  Pos: [204, 213] xx => I
Apply:  Pos: [208, 219] cc => I
Apply:  Pos: [226, 233] cc => I
Apply:  Pos: [228, 236] xx => I
Apply:  Pos: [235, 251] cc => I
Apply:  Pos: [243, 252] cc => I
Apply:  Pos: [246, 267] cc => I
Apply:  Pos: [264, 275] cc => I
Apply:  Pos: [272, 279] xx => I
Apply:  Pos: [276, 283] cc => I
Apply:  Pos: [295, 304] cc => I
Apply:  Pos: [294, 314] cc => I
Apply:  Pos: [301, 312] cc => I
---------------
Circuit after: xccccxccxxccccxxcccxccxxcccxxxxcxxccccxcccccxcccxcccccxxcccxcccccccccccccxxcccxxxcccxxxcccccxxcccxcccxxcccccccccxccccxcxccccccxxccccxccccccccccxxxcccxccccxxccccxxxccxccccccccxxxccxccccccxcccccccxcccxcccccccccxcccccxxccxxcccccc

--------End Timer [apply mapping plan]:  0.015522480010986328

[18], [1, 13], [6, 8], [12, 7], [3, 16], [17], [6, 2], [1, 7], [19], [10], [0, 12], [15, 18], [12, 1], [2, 8], [3], [16], [4, 18], [1, 7], [8, 15], [4], [15, 18], [13, 3], [6], [14], [7, 8], [1, 13], [16, 4], [17], [1], [7], [3], [8, 15], [19], [11], [3, 16], [2, 8], [12, 14], [15, 10], [18], [6, 8], [17, 11], [7, 15], [14, 1], [3, 5], [2], [8, 16], [1, 7], [11, 10], [19], [9, 5], [12, 7], [16, 15], [19, 3], [5, 4], [19], [12], [1, 7], [16, 5], [6, 2], [13], [7, 16], [14, 1], [15, 10], [8, 17], [12, 7], [14, 6], [13, 9], [1, 3], [2, 17], [11, 10], [3, 4], [1, 13], [18, 10], [6], [9], [12, 1], [15, 11], [4, 18], [3], [7], [16], [19, 1], [8, 17], [9, 5], [19], [12], [10], [14, 6], [3, 5], [7, 15], [13, 9], [2, 8], [5], [9], [1, 13], [19, 3], [12, 7], [14], [0, 19], [6, 8], [18, 10], [19], [6], [1, 3], [0, 12], [5, 4], [0, 19], [11, 10], [1, 13], [16, 4], [8, 15], [3, 5], [0], [15, 10], [13, 9], [11, 18], [19, 1], [11], [15, 10], [8], [14, 1], [19, 13], [15, 18], [7, 16], [7, 8], [9, 5], [0], [3], [7, 15], [2, 17], [16, 4], [19, 1], [15], [1, 13], [7, 16], [3, 5], [8, 17], [18, 10], [15, 10], [9, 5], [13, 3], [2, 8], [14, 1], [6], [9], [2], [3, 4], [19, 13], [15, 18], [8], [14, 6], [3, 5], [7, 15], [13, 9], [14], [6], [0, 19], [11, 18], [12, 1], [15, 10], [15], [9], [16], [19, 1], [6, 2], [2], [17, 11], [13, 3], [14, 6], [8, 16], [0, 19], [16, 15], [12, 7], [3, 4], [0], [15], [6], [16, 4], [7, 8], [11], [0, 12], [8, 15], [13, 3], [1, 7], [5, 4], [6, 2], [12], [8, 17], [14, 6], [15, 18], [12, 7], [6, 17], [3, 4], [16, 15], [0], [17, 11], [18, 10], [19, 1], [8], [19, 3], [1, 13], [6, 2], [12, 1], [8, 16], [2, 17], [11, 10], [5, 4], [14, 6], [15], [12, 14], [13, 9], [7, 8], [16, 4], [3, 5], [12], [4], [3, 16], [7, 15], [13], [14], [0, 12], [5, 4], [19, 3], [1, 7], [15, 11], [18, 10], ----End Timer [Execute Mapping]:  2.5157859325408936

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[94, 108]
[113, 118]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[5, 27]
[8, 32]
[32, 48]
[112, 126]
[102, 143]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[124, 130, 134]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[109, 124, 130]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[5, 27]
[8, 32]
[32, 48]
[112, 126]
[102, 143]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[94, 108]
[113, 118]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.7345373630523682

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [5, 27] xx => I, Pos: [5, 27] xx => I, Pos: [8, 32] xx => I, Pos: [8, 32] xx => I, Pos: [32, 48] xx => I, Pos: [32, 48] xx => I, Pos: [94, 108] cc => I, Pos: [94, 108] cc => I, Pos: [102, 143] xx => I, Pos: [102, 143] xx => I, Pos: [109, 124, 130] ccc => cc, Pos: [112, 126] xx => I, Pos: [112, 126] xx => I, Pos: [113, 118] cc => I, Pos: [113, 118] cc => I, Pos: [124, 130, 134] ccc => cc]

--------End Timer [Generate Plans]:  0.015645742416381836

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [5, 27] xx => I,
 Pos: [8, 32] xx => I,
 Pos: [94, 108] cc => I,
 Pos: [102, 143] xx => I,
 Pos: [109, 124, 130] ccc => cc,
 Pos: [112, 126] xx => I,
 Pos: [113, 118] cc => I]
Change: 7, Saving: 7

Circuit before: xccccxccxxccccxxcccxccxxcccxxxxcxxccccxcccccxcccxcccccxxcccxcccccccccccccxxcccxxxcccxxxcccccxxcccxcccxxcccccccccxccccxcxccccccxxccccxccccccccccxxxcccxccccxxccccxxxccxccccccccxxxccxccccccxcccccccxcccxcccccccccxcccccxxccxxcccccc
---------------
Apply:  Pos: [5, 27] xx => I
Apply:  Pos: [8, 32] xx => I
Apply:  Pos: [94, 108] cc => I
Apply:  Pos: [102, 143] xx => I
Apply:  Pos: [109, 124, 130] ccc => cc
Apply:  Pos: [112, 126] xx => I
Apply:  Pos: [113, 118] cc => I
---------------
Circuit after: xccccccxccccxxcccxccxxcccxxxcxccccxcccccxcccxcccccxxcccxcccccccccccccxxcccxxxcccxxxcccccxxccxcccxcccccccccccxxccccccxcccxccccccccccxxcccxccccxxccccxxxccxccccccccxxxccxccccccxcccccccxcccxcccccccccxcccccxxccxxcccccc

--------End Timer [apply mapping plan]:  0.0

[18], [1, 13], [6, 8], [12, 7], [3, 16], [6, 2], [1, 7], [10], [0, 12], [15, 18], [12, 1], [2, 8], [3], [16], [4, 18], [1, 7], [8, 15], [4], [15, 18], [13, 3], [6], [14], [7, 8], [1, 13], [16, 4], [1], [7], [3], [8, 15], [11], [3, 16], [2, 8], [12, 14], [15, 10], [18], [6, 8], [17, 11], [7, 15], [14, 1], [3, 5], [2], [8, 16], [1, 7], [11, 10], [19], [9, 5], [12, 7], [16, 15], [19, 3], [5, 4], [19], [12], [1, 7], [16, 5], [6, 2], [13], [7, 16], [14, 1], [15, 10], [8, 17], [12, 7], [14, 6], [13, 9], [1, 3], [2, 17], [11, 10], [3, 4], [1, 13], [18, 10], [6], [9], [12, 1], [15, 11], [4, 18], [3], [7], [16], [19, 1], [8, 17], [9, 5], [19], [12], [10], [14, 6], [3, 5], [7, 15], [13, 9], [2, 8], [5], [9], [19, 3], [12, 7], [14], [0, 19], [6, 8], [18, 10], [19], [1, 3], [0, 12], [5, 4], [0, 19], [11, 10], [7, 16], [8, 15], [3, 5], [13, 9], [11, 18], [19, 1], [11], [8], [14, 1], [19, 13], [15, 18], [7, 8], [16, 4], [9, 5], [3], [7, 15], [2, 17], [19, 1], [15], [1, 13], [7, 16], [3, 5], [8, 17], [15, 10], [18, 10], [9, 5], [13, 3], [2, 8], [14, 1], [9], [2], [3, 4], [19, 13], [15, 18], [8], [14, 6], [3, 5], [7, 15], [13, 9], [14], [6], [0, 19], [11, 18], [12, 1], [15, 10], [15], [9], [16], [19, 1], [6, 2], [2], [17, 11], [13, 3], [14, 6], [8, 16], [0, 19], [16, 15], [12, 7], [3, 4], [0], [15], [6], [16, 4], [7, 8], [11], [0, 12], [8, 15], [13, 3], [1, 7], [5, 4], [6, 2], [12], [8, 17], [14, 6], [15, 18], [12, 7], [6, 17], [3, 4], [16, 15], [0], [17, 11], [18, 10], [19, 1], [8], [19, 3], [1, 13], [6, 2], [12, 1], [8, 16], [2, 17], [11, 10], [5, 4], [14, 6], [15], [12, 14], [13, 9], [7, 8], [16, 4], [3, 5], [12], [4], [3, 16], [7, 15], [13], [14], [0, 12], [5, 4], [19, 3], [1, 7], [15, 11], [18, 10], ----End Timer [Execute Mapping]:  1.75018310546875

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[102, 114, 122]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[95, 101, 106]
[125, 126, 135]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.703061580657959

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [95, 101, 106] ccc => cc, Pos: [102, 114, 122] ccc => cc, Pos: [125, 126, 135] ccc => cc]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [95, 101, 106] ccc => cc,
 Pos: [102, 114, 122] ccc => cc,
 Pos: [125, 126, 135] ccc => cc]
Change: 3, Saving: 4

Circuit before: xccccccxccccxxcccxccxxcccxxxcxccccxcccccxcccxcccccxxcccxcccccccccccccxxcccxxxcccxxxcccccxxccxcccxcccccccccccxxccccccxcccxccccccccccxxcccxccccxxccccxxxccxccccccccxxxccxccccccxcccccccxcccxcccccccccxcccccxxccxxcccccc
---------------
Apply:  Pos: [95, 101, 106] ccc => cc
Apply:  Pos: [102, 114, 122] ccc => cc
Apply:  Pos: [125, 126, 135] ccc => cc
---------------
Circuit after: xccccccxccccxxcccxccxxcccxxxcxccccxcccccxcccxcccccxxcccxcccccccccccccxxcccxxxcccxxxcccccxxccxcccxccccccccccxxccccccxcccxcccccccccxxccxccccxxccccxxxccxccccccccxxxccxccccccxcccccccxcccxcccccccccxcccccxxccxxcccccc

--------End Timer [apply mapping plan]:  0.0

[18], [1, 13], [6, 8], [12, 7], [3, 16], [6, 2], [1, 7], [10], [0, 12], [15, 18], [12, 1], [2, 8], [3], [16], [4, 18], [1, 7], [8, 15], [4], [15, 18], [13, 3], [6], [14], [7, 8], [1, 13], [16, 4], [1], [7], [3], [8, 15], [11], [3, 16], [2, 8], [12, 14], [15, 10], [18], [6, 8], [17, 11], [7, 15], [14, 1], [3, 5], [2], [8, 16], [1, 7], [11, 10], [19], [9, 5], [12, 7], [16, 15], [19, 3], [5, 4], [19], [12], [1, 7], [16, 5], [6, 2], [13], [7, 16], [14, 1], [15, 10], [8, 17], [12, 7], [14, 6], [13, 9], [1, 3], [2, 17], [11, 10], [3, 4], [1, 13], [18, 10], [6], [9], [12, 1], [15, 11], [4, 18], [3], [7], [16], [19, 1], [8, 17], [9, 5], [19], [12], [10], [14, 6], [3, 5], [7, 15], [13, 9], [2, 8], [5], [9], [19, 3], [12, 7], [14], [0, 19], [6, 8], [11, 18], [19], [1, 3], [0, 12], [5, 4], [0, 19], [18, 10], [7, 4], [8, 15], [3, 5], [13, 9], [19, 1], [11], [8], [14, 1], [19, 13], [15, 18], [7, 8], [16, 4], [9, 5], [3], [7, 15], [2, 17], [19, 1], [15], [1, 13], [3, 5], [8, 17], [15, 18], [18, 10], [9, 5], [13, 3], [2, 8], [14, 1], [9], [2], [3, 4], [19, 13], [8], [14, 6], [3, 5], [7, 15], [13, 9], [14], [6], [0, 19], [11, 18], [12, 1], [15, 10], [15], [9], [16], [19, 1], [6, 2], [2], [17, 11], [13, 3], [14, 6], [8, 16], [0, 19], [16, 15], [12, 7], [3, 4], [0], [15], [6], [16, 4], [7, 8], [11], [0, 12], [8, 15], [13, 3], [1, 7], [5, 4], [6, 2], [12], [8, 17], [14, 6], [15, 18], [12, 7], [6, 17], [3, 4], [16, 15], [0], [17, 11], [18, 10], [19, 1], [8], [19, 3], [1, 13], [6, 2], [12, 1], [8, 16], [2, 17], [11, 10], [5, 4], [14, 6], [15], [12, 14], [13, 9], [7, 8], [16, 4], [3, 5], [12], [4], [3, 16], [7, 15], [13], [14], [0, 12], [5, 4], [19, 3], [1, 7], [15, 11], [18, 10], ----End Timer [Execute Mapping]:  1.703061580657959

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.6562538146972656

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

--------End Timer [Generate Plans]:  0.0

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[]
Change: 0, Saving: 0

Circuit before: xccccccxccccxxcccxccxxcccxxxcxccccxcccccxcccxcccccxxcccxcccccccccccccxxcccxxxcccxxxcccccxxccxcccxccccccccccxxccccccxcccxcccccccccxxccxccccxxccccxxxccxccccccccxxxccxccccccxcccccccxcccxcccccccccxcccccxxccxxcccccc
---------------
---------------
Circuit after: xccccccxccccxxcccxccxxcccxxxcxccccxcccccxcccxcccccxxcccxcccccccccccccxxcccxxxcccxxxcccccxxccxcccxccccccccccxxccccccxcccxcccccccccxxccxccccxxccccxxxccxccccccccxxxccxccccccxcccccccxcccxcccccccccxcccccxxccxxcccccc

--------End Timer [apply mapping plan]:  0.0

[18], [1, 13], [6, 8], [12, 7], [3, 16], [6, 2], [1, 7], [10], [0, 12], [15, 18], [12, 1], [2, 8], [3], [16], [4, 18], [1, 7], [8, 15], [4], [15, 18], [13, 3], [6], [14], [7, 8], [1, 13], [16, 4], [1], [7], [3], [8, 15], [11], [3, 16], [2, 8], [12, 14], [15, 10], [18], [6, 8], [17, 11], [7, 15], [14, 1], [3, 5], [2], [8, 16], [1, 7], [11, 10], [19], [9, 5], [12, 7], [16, 15], [19, 3], [5, 4], [19], [12], [1, 7], [16, 5], [6, 2], [13], [7, 16], [14, 1], [15, 10], [8, 17], [12, 7], [14, 6], [13, 9], [1, 3], [2, 17], [11, 10], [3, 4], [1, 13], [18, 10], [6], [9], [12, 1], [15, 11], [4, 18], [3], [7], [16], [19, 1], [8, 17], [9, 5], [19], [12], [10], [14, 6], [3, 5], [7, 15], [13, 9], [2, 8], [5], [9], [19, 3], [12, 7], [14], [0, 19], [6, 8], [11, 18], [19], [1, 3], [0, 12], [5, 4], [0, 19], [18, 10], [7, 4], [8, 15], [3, 5], [13, 9], [19, 1], [11], [8], [14, 1], [19, 13], [15, 18], [7, 8], [16, 4], [9, 5], [3], [7, 15], [2, 17], [19, 1], [15], [1, 13], [3, 5], [8, 17], [15, 18], [18, 10], [9, 5], [13, 3], [2, 8], [14, 1], [9], [2], [3, 4], [19, 13], [8], [14, 6], [3, 5], [7, 15], [13, 9], [14], [6], [0, 19], [11, 18], [12, 1], [15, 10], [15], [9], [16], [19, 1], [6, 2], [2], [17, 11], [13, 3], [14, 6], [8, 16], [0, 19], [16, 15], [12, 7], [3, 4], [0], [15], [6], [16, 4], [7, 8], [11], [0, 12], [8, 15], [13, 3], [1, 7], [5, 4], [6, 2], [12], [8, 17], [14, 6], [15, 18], [12, 7], [6, 17], [3, 4], [16, 15], [0], [17, 11], [18, 10], [19, 1], [8], [19, 3], [1, 13], [6, 2], [12, 1], [8, 16], [2, 17], [11, 10], [5, 4], [14, 6], [15], [12, 14], [13, 9], [7, 8], [16, 4], [3, 5], [12], [4], [3, 16], [7, 15], [13], [14], [0, 12], [5, 4], [19, 3], [1, 7], [15, 11], [18, 10], ----End Timer [Execute Mapping]:  1.6562538146972656

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: x-x-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-x-x-x-x-x-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [315] (IBM)
 --------------------
 - qubits_num: 20, using gates: [x,cx]
 - circuit depth: 45 - (small)
 - circuit cycle: 540


>> Solved circuit: 
Circuit Info: 
 - circuit: x-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-cx-cx-cx-x-cx-cx-x-x-cx-cx-cx-x-x-x-cx-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-x-x-x-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-x-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-x-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-x-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-cx-cx-x-x-cx-cx-cx-cx-cx-cx 
     => total size: [210] (IBM)
 --------------------
 - qubits_num: 20, using gates: [x,cx]
 - circuit depth: 39 - (small)
 - circuit cycle: 366

Reduced: 
 - size: 105 (33.33%)
 - depth: 6 (13.33%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.14086127281188965

[19], [18], [1, 13], [6, 8], [12, 7], [15, 11], [5, 4], [3, 16], [19], [17], [5, 4], [6, 2], [15, 11], [1, 7], [19], [10], [0, 12], [15, 18], [1, 7], [2, 8], [3], [16], [0, 19], [4, 18], [9, 5], [2, 17], [12, 1], [8, 15], [4], [0, 19], [11, 10], [15, 18], [1, 7], [13, 3], [2, 17], [19], [6], [14], [7, 8], [1, 13], [16, 4], [9, 5], [11, 10], [19], [17], [1], [7], [3], [8, 15], [4, 18], [13, 9], [19], [11], [3, 16], [2, 8], [12, 14], [4, 18], [15, 10], [18], [0, 19], [6, 8], [11, 10], [7, 15], [14, 1], [3, 5], [2], [0, 19], [8, 16], [1, 7], [17, 11], [13, 9], [19], [9, 5], [12, 7], [11, 10], [16, 15], [19, 3], [11, 18], [8, 15], [5, 4], [19], [12], [1, 7], [16, 5], [11, 18], [8, 15], [6, 2], [19], [13], [7, 16], [14, 1], [15, 11], [8, 17], [19], [12, 7], [14, 6], [13, 9], [1, 3], [2, 17], [11, 10], [19], [3, 4], [16, 5], [1, 13], [15, 11], [18, 10], [12, 14], [19], [6], [9], [16, 5], [12, 1], [15, 11], [4, 18], [3], [7], [16], [19, 1], [8, 17], [9, 5], [12, 14], [4, 18], [19], [12], [0], [10], [14, 6], [3, 5], [7, 15], [13, 9], [2, 8], [5], [9], [0], [13], [19, 3], [12, 7], [4, 18], [16, 15], [17], [14], [0, 19], [1, 13], [6, 8], [16, 15], [18, 10], [19], [6], [17], [13], [1, 3], [0, 12], [5, 4], [0, 19], [11, 10], [1, 13], [16, 4], [8, 15], [3, 5], [14, 7], [0], [15, 10], [6, 2], [14, 7], [13, 9], [11, 18], [19, 1], [0], [11], [10], [8], [14, 1], [19, 13], [15, 18], [6, 2], [7, 16], [0], [15, 10], [12, 14], [7, 8], [9, 5], [0], [3], [10], [12, 14], [7, 15], [2, 17], [16, 4], [19, 1], [0], [4], [15], [1, 13], [7, 16], [3, 5], [8, 17], [18, 10], [0], [4], [15, 10], [9, 5], [13, 3], [2, 8], [14, 1], [0], [6], [9], [2], [11, 10], [3, 4], [19, 13], [7, 16], [15, 18], [0], [8], [14, 6], [3, 5], [7, 15], [13, 9], [11, 10], [14], [6], [0, 19], [11, 18], [7, 16], [12, 1], [8, 17], [15, 10], [0], [15], [9], [16], [19, 1], [8, 17], [6, 2], [18, 10], [0], [2], [17, 11], [13, 3], [14, 6], [8, 16], [0, 19], [2, 17], [16, 15], [12, 7], [13, 9], [3, 4], [0], [15], [6], [18, 10], [2, 17], [16, 4], [7, 8], [11], [0, 12], [8, 15], [13, 3], [1, 7], [5, 4], [6, 2], [12], [8, 17], [3, 5], [14, 6], [15, 18], [13, 9], [12, 7], [6, 17], [3, 4], [16, 15], [12], [0], [17, 11], [3, 5], [16, 4], [18, 10], [19, 1], [12], [8], [19, 3], [1, 13], [16, 4], [6, 2], [12, 1], [8, 16], [2, 17], [11, 10], [5, 4], [14, 6], [15], [12, 14], [13, 9], [6, 2], [11, 10], [7, 8], [16, 4], [3, 5], [12], [4], [8, 17], [3, 16], [7, 15], [11, 10], [13], [14], [0, 12], [5, 4], [19, 3], [1, 7], [15, 11], [8, 17], [18, 10], [6, 2], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[6, 10]
[5, 12]
[13, 18]
[22, 29]
[25, 34]
[24, 41]
[30, 42]
[49, 56]
[59, 66]
[50, 70]
[77, 84]
[78, 85]
[102, 110]
[104, 112]
[106, 120]
[113, 121]
[121, 137]
[138, 144]
[159, 163]
[162, 174]
[178, 184]
[193, 211]
[208, 219]
[211, 224]
[226, 233]
[235, 251]
[243, 252]
[246, 267]
[264, 275]
[276, 283]
[288, 295]
[295, 304]
[301, 312]
[294, 314]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[0, 8]
[8, 14]
[35, 43]
[43, 51]
[80, 87]
[87, 93]
[93, 100]
[100, 107]
[124, 133]
[139, 148]
[160, 167]
[167, 176]
[176, 181]
[181, 189]
[189, 197]
[190, 198]
[197, 204]
[204, 213]
[228, 236]
[272, 279]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 

[91, 99, 104]

------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 

[134, 142, 149]
[169, 177, 183]

------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[18, 26, 32]
[61, 69, 74]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[0, 8]
[8, 14]
[35, 43]
[43, 51]
[80, 87]
[87, 93]
[93, 100]
[100, 107]
[124, 133]
[139, 148]
[160, 167]
[167, 176]
[176, 181]
[181, 189]
[189, 197]
[190, 198]
[197, 204]
[204, 213]
[228, 236]
[272, 279]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[6, 10]
[5, 12]
[13, 18]
[22, 29]
[25, 34]
[24, 41]
[30, 42]
[49, 56]
[59, 66]
[50, 70]
[77, 84]
[78, 85]
[102, 110]
[104, 112]
[106, 120]
[113, 121]
[121, 137]
[138, 144]
[159, 163]
[162, 174]
[178, 184]
[193, 211]
[208, 219]
[211, 224]
[226, 233]
[235, 251]
[243, 252]
[246, 267]
[264, 275]
[276, 283]
[288, 295]
[295, 304]
[301, 312]
[294, 314]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.3747880458831787

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [0, 8] xx => I, Pos: [0, 8] xx => I, Pos: [5, 12] cc => I, Pos: [5, 12] cc => I, Pos: [6, 10] cc => I, Pos: [6, 10] cc => I, Pos: [8, 14] xx => I, Pos: [8, 14] xx => I, Pos: [13, 18] cc => I, Pos: [13, 18] cc => I, Pos: [18, 26, 32] ccc => cc, Pos: [22, 29] cc => I, Pos: [22, 29] cc => I, Pos: [24, 41] cc => I, Pos: [24, 41] cc => I, Pos: [25, 34] cc => I, Pos: [25, 34] cc => I, Pos: [30, 42] cc => I, Pos: [30, 42] cc => I, Pos: [35, 43] xx => I, Pos: [35, 43] xx => I, Pos: [43, 51] xx => I, Pos: [43, 51] xx => I, Pos: [49, 56] cc => I, Pos: [49, 56] cc => I, Pos: [50, 70] cc => I, Pos: [50, 70] cc => I, Pos: [59, 66] cc => I, Pos: [59, 66] cc => I, Pos: [61, 69, 74] ccc => cc, Pos: [77, 84] cc => I, Pos: [77, 84] cc => I, Pos: [78, 85] cc => I, Pos: [78, 85] cc => I, Pos: [80, 87] xx => I, Pos: [80, 87] xx => I, Pos: [87, 93] xx => I, Pos: [87, 93] xx => I, Pos: [91, 99, 104] ccc => cc, Pos: [93, 100] xx => I, Pos: [93, 100] xx => I, Pos: [100, 107] xx => I, Pos: [100, 107] xx => I, Pos: [102, 110] cc => I, Pos: [102, 110] cc => I, Pos: [104, 112] cc => I, Pos: [104, 112] cc => I, Pos: [106, 120] cc => I, Pos: [106, 120] cc => I, Pos: [113, 121] cc => I, Pos: [113, 121] cc => I, Pos: [121, 137] cc => I, Pos: [121, 137] cc => I, Pos: [124, 133] xx => I, Pos: [124, 133] xx => I, Pos: [134, 142, 149] xcx => c, Pos: [138, 144] cc => I, Pos: [138, 144] cc => I, Pos: [139, 148] xx => I, Pos: [139, 148] xx => I, Pos: [159, 163] cc => I, Pos: [159, 163] cc => I, Pos: [160, 167] xx => I, Pos: [160, 167] xx => I, Pos: [162, 174] cc => I, Pos: [162, 174] cc => I, Pos: [167, 176] xx => I, Pos: [167, 176] xx => I, Pos: [169, 177, 183] xcx => c, Pos: [176, 181] xx => I, Pos: [176, 181] xx => I, Pos: [178, 184] cc => I, Pos: [178, 184] cc => I, Pos: [181, 189] xx => I, Pos: [181, 189] xx => I, Pos: [189, 197] xx => I, Pos: [189, 197] xx => I, Pos: [190, 198] xx => I, Pos: [190, 198] xx => I, Pos: [193, 211] cc => I, Pos: [193, 211] cc => I, Pos: [197, 204] xx => I, Pos: [197, 204] xx => I, Pos: [204, 213] xx => I, Pos: [204, 213] xx => I, Pos: [208, 219] cc => I, Pos: [208, 219] cc => I, Pos: [211, 224] cc => I, Pos: [211, 224] cc => I, Pos: [226, 233] cc => I, Pos: [226, 233] cc => I, Pos: [228, 236] xx => I, Pos: [228, 236] xx => I, Pos: [235, 251] cc => I, Pos: [235, 251] cc => I, Pos: [243, 252] cc => I, Pos: [243, 252] cc => I, Pos: [246, 267] cc => I, Pos: [246, 267] cc => I, Pos: [264, 275] cc => I, Pos: [264, 275] cc => I, Pos: [272, 279] xx => I, Pos: [272, 279] xx => I, Pos: [276, 283] cc => I, Pos: [276, 283] cc => I, Pos: [288, 295] cc => I, Pos: [288, 295] cc => I, Pos: [294, 314] cc => I, Pos: [294, 314] cc => I, Pos: [295, 304] cc => I, Pos: [295, 304] cc => I, Pos: [301, 312] cc => I, Pos: [301, 312] cc => I]

Plan: 1
[Pos: [0, 8] xx => I,
 Pos: [5, 12] cc => I,
 Pos: [6, 10] cc => I,
 Pos: [13, 18] cc => I,
 Pos: [22, 29] cc => I,
 Pos: [24, 41] cc => I,
 Pos: [25, 34] cc => I,
 Pos: [30, 42] cc => I,
 Pos: [35, 43] xx => I,
 Pos: [49, 56] cc => I,
 Pos: [50, 70] cc => I,
 Pos: [59, 66] cc => I,
 Pos: [61, 69, 74] ccc => cc,
 Pos: [77, 84] cc => I,
 Pos: [78, 85] cc => I,
 Pos: [80, 87] xx => I,
 Pos: [91, 99, 104] ccc => cc,
 Pos: [93, 100] xx => I,
 Pos: [102, 110] cc => I,
 Pos: [106, 120] cc => I,
 Pos: [113, 121] cc => I,
 Pos: [124, 133] xx => I,
 Pos: [134, 142, 149] xcx => c,
 Pos: [138, 144] cc => I,
 Pos: [139, 148] xx => I,
 Pos: [159, 163] cc => I,
 Pos: [160, 167] xx => I,
 Pos: [162, 174] cc => I,
 Pos: [169, 177, 183] xcx => c,
 Pos: [176, 181] xx => I,
 Pos: [178, 184] cc => I,
 Pos: [189, 197] xx => I,
 Pos: [190, 198] xx => I,
 Pos: [193, 211] cc => I,
 Pos: [204, 213] xx => I,
 Pos: [208, 219] cc => I,
 Pos: [226, 233] cc => I,
 Pos: [228, 236] xx => I,
 Pos: [235, 251] cc => I,
 Pos: [243, 252] cc => I,
 Pos: [246, 267] cc => I,
 Pos: [264, 275] cc => I,
 Pos: [272, 279] xx => I,
 Pos: [276, 283] cc => I,
 Pos: [288, 295] cc => I,
 Pos: [294, 314] cc => I,
 Pos: [301, 312] cc => I]
Change: 47, Saving: 47

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.10938072204589844

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [0, 8] xx => I,
 Pos: [5, 12] cc => I,
 Pos: [6, 10] cc => I,
 Pos: [13, 18] cc => I,
 Pos: [22, 29] cc => I,
 Pos: [24, 41] cc => I,
 Pos: [25, 34] cc => I,
 Pos: [30, 42] cc => I,
 Pos: [35, 43] xx => I,
 Pos: [49, 56] cc => I,
 Pos: [50, 70] cc => I,
 Pos: [59, 66] cc => I,
 Pos: [61, 69, 74] ccc => cc,
 Pos: [77, 84] cc => I,
 Pos: [78, 85] cc => I,
 Pos: [80, 87] xx => I,
 Pos: [91, 99, 104] ccc => cc,
 Pos: [93, 100] xx => I,
 Pos: [102, 110] cc => I,
 Pos: [106, 120] cc => I,
 Pos: [113, 121] cc => I,
 Pos: [124, 133] xx => I,
 Pos: [134, 142, 149] xcx => c,
 Pos: [138, 144] cc => I,
 Pos: [139, 148] xx => I,
 Pos: [159, 163] cc => I,
 Pos: [160, 167] xx => I,
 Pos: [162, 174] cc => I,
 Pos: [169, 177, 183] xcx => c,
 Pos: [176, 181] xx => I,
 Pos: [178, 184] cc => I,
 Pos: [189, 197] xx => I,
 Pos: [190, 198] xx => I,
 Pos: [193, 211] cc => I,
 Pos: [204, 213] xx => I,
 Pos: [208, 219] cc => I,
 Pos: [226, 233] cc => I,
 Pos: [228, 236] xx => I,
 Pos: [235, 251] cc => I,
 Pos: [243, 252] cc => I,
 Pos: [246, 267] cc => I,
 Pos: [264, 275] cc => I,
 Pos: [272, 279] xx => I,
 Pos: [276, 283] cc => I,
 Pos: [288, 295] cc => I,
 Pos: [294, 314] cc => I,
 Pos: [301, 312] cc => I]
Change: 47, Saving: 47

Circuit before: xxccccccxxccccxxccccxxccccccxccccccxxxcccccxxxxxcccxxcccccxccccccxcccccxccccccccxxcccccxxccccxccccccxccccccxxxccccxxxcccccxxxxcccccxxxxccccxxcccccxxxxccccccccccxccccccxxxxcccccxccccxxxcccccxxxcccccxxcccccxxxxcccccxxcccccxxccccccxxxxccccxxccccccccccxxxccccxccccccxcccccccccxxcccccxxccccccccccxcccccccxxccccxxcccccccc
---------------
Apply:  Pos: [0, 8] xx => I
Apply:  Pos: [5, 12] cc => I
Apply:  Pos: [6, 10] cc => I
Apply:  Pos: [13, 18] cc => I
Apply:  Pos: [22, 29] cc => I
Apply:  Pos: [24, 41] cc => I
Apply:  Pos: [25, 34] cc => I
Apply:  Pos: [30, 42] cc => I
Apply:  Pos: [35, 43] xx => I
Apply:  Pos: [49, 56] cc => I
Apply:  Pos: [50, 70] cc => I
Apply:  Pos: [59, 66] cc => I
Apply:  Pos: [61, 69, 74] ccc => cc
Apply:  Pos: [77, 84] cc => I
Apply:  Pos: [78, 85] cc => I
Apply:  Pos: [80, 87] xx => I
Apply:  Pos: [91, 99, 104] ccc => cc
Apply:  Pos: [93, 100] xx => I
Apply:  Pos: [102, 110] cc => I
Apply:  Pos: [106, 120] cc => I
Apply:  Pos: [113, 121] cc => I
Apply:  Pos: [124, 133] xx => I
Apply:  Pos: [134, 142, 149] xcx => c
Apply:  Pos: [138, 144] cc => I
Apply:  Pos: [139, 148] xx => I
Apply:  Pos: [159, 163] cc => I
Apply:  Pos: [160, 167] xx => I
Apply:  Pos: [162, 174] cc => I
Apply:  Pos: [169, 177, 183] xcx => c
Apply:  Pos: [176, 181] xx => I
Apply:  Pos: [178, 184] cc => I
Apply:  Pos: [189, 197] xx => I
Apply:  Pos: [190, 198] xx => I
Apply:  Pos: [193, 211] cc => I
Apply:  Pos: [204, 213] xx => I
Apply:  Pos: [208, 219] cc => I
Apply:  Pos: [226, 233] cc => I
Apply:  Pos: [228, 236] xx => I
Apply:  Pos: [235, 251] cc => I
Apply:  Pos: [243, 252] cc => I
Apply:  Pos: [246, 267] cc => I
Apply:  Pos: [264, 275] cc => I
Apply:  Pos: [272, 279] xx => I
Apply:  Pos: [276, 283] cc => I
Apply:  Pos: [288, 295] cc => I
Apply:  Pos: [294, 314] cc => I
Apply:  Pos: [301, 312] cc => I
---------------
Circuit after: xccccxcxxcccxxcccxcccxxcccxxxxcxxccccxcccccxcccxcccccxcccxcccccccccccccxxxccxxxcccxxxcccccxxccccxcccxxcccccccccccccxcxccccccxccccxcccccccccxxxcccxccccxxcccccxxxccxccccccccxxxccxccccccxcccccccxcccxccccccccxcccccxxcccxxcccccc

--------End Timer [apply mapping plan]:  0.0

[18], [1, 13], [6, 8], [12, 7], [3, 16], [17], [6, 2], [19], [10], [0, 12], [15, 18], [2, 8], [3], [16], [4, 18], [12, 1], [8, 15], [4], [15, 18], [1, 7], [13, 3], [6], [14], [7, 8], [1, 13], [16, 4], [17], [1], [7], [3], [8, 15], [19], [11], [3, 16], [2, 8], [12, 14], [15, 10], [18], [6, 8], [17, 11], [7, 15], [14, 1], [3, 5], [2], [8, 16], [1, 7], [11, 10], [19], [9, 5], [12, 7], [16, 15], [19, 3], [5, 4], [12], [1, 7], [16, 5], [6, 2], [13], [7, 16], [14, 1], [15, 10], [8, 17], [12, 7], [14, 6], [13, 9], [1, 3], [2, 17], [11, 10], [3, 4], [1, 13], [18, 10], [19], [6], [9], [12, 1], [15, 11], [3], [7], [16], [19, 1], [8, 17], [9, 5], [19], [12], [10], [14, 6], [3, 5], [7, 15], [13, 9], [2, 8], [5], [9], [1, 13], [19, 3], [12, 7], [4, 18], [14], [0, 19], [6, 8], [18, 10], [19], [6], [1, 3], [0, 12], [5, 4], [0, 19], [11, 10], [1, 13], [16, 4], [8, 15], [3, 5], [15, 10], [13, 9], [11, 18], [19, 1], [11], [15, 10], [8], [14, 1], [19, 13], [15, 18], [7, 16], [7, 8], [9, 5], [3], [7, 15], [2, 17], [16, 4], [19, 1], [15], [1, 13], [3, 5], [8, 17], [18, 10], [15, 10], [9, 5], [13, 3], [2, 8], [14, 1], [6], [9], [2], [3, 4], [19, 13], [15, 18], [8], [14, 6], [3, 5], [7, 15], [13, 9], [14], [6], [0, 19], [11, 18], [7, 16], [12, 1], [15, 10], [15], [9], [16], [19, 1], [6, 2], [2], [17, 11], [13, 3], [14, 6], [8, 16], [0, 19], [16, 15], [12, 7], [3, 4], [0], [15], [6], [16, 4], [7, 8], [11], [0, 12], [8, 15], [13, 3], [1, 7], [5, 4], [6, 2], [12], [8, 17], [14, 6], [15, 18], [12, 7], [6, 17], [3, 4], [16, 15], [0], [17, 11], [18, 10], [19, 1], [8], [19, 3], [1, 13], [6, 2], [12, 1], [8, 16], [2, 17], [5, 4], [14, 6], [15], [12, 14], [13, 9], [7, 8], [16, 4], [3, 5], [12], [4], [3, 16], [7, 15], [11, 10], [13], [14], [0, 12], [5, 4], [19, 3], [1, 7], [15, 11], [18, 10], ----End Timer [Execute Mapping]:  2.484168767929077

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[92, 107]
[111, 116]

------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 

[5, 26]
[7, 31]
[31, 47]
[101, 139]

------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[108, 122, 127]

------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 

[5, 26]
[7, 31]
[31, 47]
[101, 139]

------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 

[92, 107]
[111, 116]

------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.7192718982696533

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [5, 26] xx => I, Pos: [5, 26] xx => I, Pos: [7, 31] xx => I, Pos: [7, 31] xx => I, Pos: [31, 47] xx => I, Pos: [31, 47] xx => I, Pos: [92, 107] cc => I, Pos: [92, 107] cc => I, Pos: [101, 139] xx => I, Pos: [101, 139] xx => I, Pos: [108, 122, 127] ccc => cc, Pos: [111, 116] cc => I, Pos: [111, 116] cc => I]

Plan: 1
[Pos: [5, 26] xx => I,
 Pos: [7, 31] xx => I,
 Pos: [92, 107] cc => I,
 Pos: [101, 139] xx => I,
 Pos: [108, 122, 127] ccc => cc,
 Pos: [111, 116] cc => I]
Change: 6, Saving: 6

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.015503168106079102

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [5, 26] xx => I,
 Pos: [7, 31] xx => I,
 Pos: [92, 107] cc => I,
 Pos: [101, 139] xx => I,
 Pos: [108, 122, 127] ccc => cc,
 Pos: [111, 116] cc => I]
Change: 6, Saving: 6

Circuit before: xccccxcxxcccxxcccxcccxxcccxxxxcxxccccxcccccxcccxcccccxcccxcccccccccccccxxxccxxxcccxxxcccccxxccccxcccxxcccccccccccccxcxccccccxccccxcccccccccxxxcccxccccxxcccccxxxccxccccccccxxxccxccccccxcccccccxcccxccccccccxcccccxxcccxxcccccc
---------------
Apply:  Pos: [5, 26] xx => I
Apply:  Pos: [7, 31] xx => I
Apply:  Pos: [92, 107] cc => I
Apply:  Pos: [101, 139] xx => I
Apply:  Pos: [108, 122, 127] ccc => cc
Apply:  Pos: [111, 116] cc => I
---------------
Circuit after: xcccccxcccxxcccxcccxxcccxxxcxccccxcccccxcccxcccccxcccxcccccccccccccxxxccxxxcccxxxcccccxxcccxcccxcccccccccccxxccccccxcccxcccccccccxxcccxccccxxcccccxxxccxccccccccxxxccxccccccxcccccccxcccxccccccccxcccccxxcccxxcccccc

--------End Timer [apply mapping plan]:  0.0

[18], [1, 13], [6, 8], [12, 7], [3, 16], [6, 2], [10], [0, 12], [15, 18], [2, 8], [3], [16], [4, 18], [12, 1], [8, 15], [4], [15, 18], [1, 7], [13, 3], [6], [14], [7, 8], [1, 13], [16, 4], [1], [7], [3], [8, 15], [11], [3, 16], [2, 8], [12, 14], [15, 10], [18], [6, 8], [17, 11], [7, 15], [14, 1], [3, 5], [2], [8, 16], [1, 7], [11, 10], [19], [9, 5], [12, 7], [16, 15], [19, 3], [5, 4], [12], [1, 7], [16, 5], [6, 2], [13], [7, 16], [14, 1], [15, 10], [8, 17], [12, 7], [14, 6], [13, 9], [1, 3], [2, 17], [11, 10], [3, 4], [1, 13], [18, 10], [19], [6], [9], [12, 1], [15, 11], [3], [7], [16], [19, 1], [8, 17], [9, 5], [19], [12], [10], [14, 6], [3, 5], [7, 15], [13, 9], [2, 8], [5], [9], [19, 3], [12, 7], [4, 18], [14], [0, 19], [6, 8], [18, 10], [19], [1, 3], [0, 12], [5, 4], [0, 19], [11, 10], [7, 16], [8, 15], [3, 5], [13, 9], [11, 18], [19, 1], [11], [8], [14, 1], [19, 13], [15, 18], [7, 8], [16, 4], [9, 5], [3], [7, 15], [2, 17], [19, 1], [15], [1, 13], [3, 5], [8, 17], [15, 10], [18, 10], [9, 5], [13, 3], [2, 8], [14, 1], [9], [2], [3, 4], [19, 13], [15, 18], [8], [14, 6], [3, 5], [7, 15], [13, 9], [14], [6], [0, 19], [11, 18], [7, 16], [12, 1], [15, 10], [15], [9], [16], [19, 1], [6, 2], [2], [17, 11], [13, 3], [14, 6], [8, 16], [0, 19], [16, 15], [12, 7], [3, 4], [0], [15], [6], [16, 4], [7, 8], [11], [0, 12], [8, 15], [13, 3], [1, 7], [5, 4], [6, 2], [12], [8, 17], [14, 6], [15, 18], [12, 7], [6, 17], [3, 4], [16, 15], [0], [17, 11], [18, 10], [19, 1], [8], [19, 3], [1, 13], [6, 2], [12, 1], [8, 16], [2, 17], [5, 4], [14, 6], [15], [12, 14], [13, 9], [7, 8], [16, 4], [3, 5], [12], [4], [3, 16], [7, 15], [11, 10], [13], [14], [0, 12], [5, 4], [19, 3], [1, 7], [15, 11], [18, 10], ----End Timer [Execute Mapping]:  1.7347750663757324

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 

[94, 100, 105]
[123, 124, 133]

------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.6559643745422363

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [94, 100, 105] ccc => cc, Pos: [123, 124, 133] ccc => cc]

Plan: 1
[Pos: [94, 100, 105] ccc => cc, Pos: [123, 124, 133] ccc => cc]
Change: 2, Saving: 3

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.015639781951904297

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [94, 100, 105] ccc => cc, Pos: [123, 124, 133] ccc => cc]
Change: 2, Saving: 3

Circuit before: xcccccxcccxxcccxcccxxcccxxxcxccccxcccccxcccxcccccxcccxcccccccccccccxxxccxxxcccxxxcccccxxcccxcccxcccccccccccxxccccccxcccxcccccccccxxcccxccccxxcccccxxxccxccccccccxxxccxccccccxcccccccxcccxccccccccxcccccxxcccxxcccccc
---------------
Apply:  Pos: [94, 100, 105] ccc => cc
Apply:  Pos: [123, 124, 133] ccc => cc
---------------
Circuit after: xcccccxcccxxcccxcccxxcccxxxcxccccxcccccxcccxcccccxcccxcccccccccccccxxxccxxxcccxxxcccccxxcccxcccxccccccccccxxccccccxcccxcccccccccxxccxccccxxcccccxxxccxccccccccxxxccxccccccxcccccccxcccxccccccccxcccccxxcccxxcccccc

--------End Timer [apply mapping plan]:  0.0

[18], [1, 13], [6, 8], [12, 7], [3, 16], [6, 2], [10], [0, 12], [15, 18], [2, 8], [3], [16], [4, 18], [12, 1], [8, 15], [4], [15, 18], [1, 7], [13, 3], [6], [14], [7, 8], [1, 13], [16, 4], [1], [7], [3], [8, 15], [11], [3, 16], [2, 8], [12, 14], [15, 10], [18], [6, 8], [17, 11], [7, 15], [14, 1], [3, 5], [2], [8, 16], [1, 7], [11, 10], [19], [9, 5], [12, 7], [16, 15], [19, 3], [5, 4], [12], [1, 7], [16, 5], [6, 2], [13], [7, 16], [14, 1], [15, 10], [8, 17], [12, 7], [14, 6], [13, 9], [1, 3], [2, 17], [11, 10], [3, 4], [1, 13], [18, 10], [19], [6], [9], [12, 1], [15, 11], [3], [7], [16], [19, 1], [8, 17], [9, 5], [19], [12], [10], [14, 6], [3, 5], [7, 15], [13, 9], [2, 8], [5], [9], [19, 3], [12, 7], [4, 18], [14], [0, 19], [6, 8], [11, 18], [19], [1, 3], [0, 12], [5, 4], [0, 19], [18, 10], [7, 16], [8, 15], [3, 5], [13, 9], [19, 1], [11], [8], [14, 1], [19, 13], [15, 18], [7, 8], [16, 4], [9, 5], [3], [7, 15], [2, 17], [19, 1], [15], [1, 13], [3, 5], [8, 17], [15, 18], [18, 10], [9, 5], [13, 3], [2, 8], [14, 1], [9], [2], [3, 4], [19, 13], [8], [14, 6], [3, 5], [7, 15], [13, 9], [14], [6], [0, 19], [11, 18], [7, 16], [12, 1], [15, 10], [15], [9], [16], [19, 1], [6, 2], [2], [17, 11], [13, 3], [14, 6], [8, 16], [0, 19], [16, 15], [12, 7], [3, 4], [0], [15], [6], [16, 4], [7, 8], [11], [0, 12], [8, 15], [13, 3], [1, 7], [5, 4], [6, 2], [12], [8, 17], [14, 6], [15, 18], [12, 7], [6, 17], [3, 4], [16, 15], [0], [17, 11], [18, 10], [19, 1], [8], [19, 3], [1, 13], [6, 2], [12, 1], [8, 16], [2, 17], [5, 4], [14, 6], [15], [12, 14], [13, 9], [7, 8], [16, 4], [3, 5], [12], [4], [3, 16], [7, 15], [11, 10], [13], [14], [0, 12], [5, 4], [19, 3], [1, 7], [15, 11], [18, 10], ----End Timer [Execute Mapping]:  1.6716041564941406

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  1.6406521797180176

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

..........

Total Plans: 0

--------End Timer [Generate Plans]:  0.0

There's no mapping plan.
[18], [1, 13], [6, 8], [12, 7], [3, 16], [6, 2], [10], [0, 12], [15, 18], [2, 8], [3], [16], [4, 18], [12, 1], [8, 15], [4], [15, 18], [1, 7], [13, 3], [6], [14], [7, 8], [1, 13], [16, 4], [1], [7], [3], [8, 15], [11], [3, 16], [2, 8], [12, 14], [15, 10], [18], [6, 8], [17, 11], [7, 15], [14, 1], [3, 5], [2], [8, 16], [1, 7], [11, 10], [19], [9, 5], [12, 7], [16, 15], [19, 3], [5, 4], [12], [1, 7], [16, 5], [6, 2], [13], [7, 16], [14, 1], [15, 10], [8, 17], [12, 7], [14, 6], [13, 9], [1, 3], [2, 17], [11, 10], [3, 4], [1, 13], [18, 10], [19], [6], [9], [12, 1], [15, 11], [3], [7], [16], [19, 1], [8, 17], [9, 5], [19], [12], [10], [14, 6], [3, 5], [7, 15], [13, 9], [2, 8], [5], [9], [19, 3], [12, 7], [4, 18], [14], [0, 19], [6, 8], [11, 18], [19], [1, 3], [0, 12], [5, 4], [0, 19], [18, 10], [7, 16], [8, 15], [3, 5], [13, 9], [19, 1], [11], [8], [14, 1], [19, 13], [15, 18], [7, 8], [16, 4], [9, 5], [3], [7, 15], [2, 17], [19, 1], [15], [1, 13], [3, 5], [8, 17], [15, 18], [18, 10], [9, 5], [13, 3], [2, 8], [14, 1], [9], [2], [3, 4], [19, 13], [8], [14, 6], [3, 5], [7, 15], [13, 9], [14], [6], [0, 19], [11, 18], [7, 16], [12, 1], [15, 10], [15], [9], [16], [19, 1], [6, 2], [2], [17, 11], [13, 3], [14, 6], [8, 16], [0, 19], [16, 15], [12, 7], [3, 4], [0], [15], [6], [16, 4], [7, 8], [11], [0, 12], [8, 15], [13, 3], [1, 7], [5, 4], [6, 2], [12], [8, 17], [14, 6], [15, 18], [12, 7], [6, 17], [3, 4], [16, 15], [0], [17, 11], [18, 10], [19, 1], [8], [19, 3], [1, 13], [6, 2], [12, 1], [8, 16], [2, 17], [5, 4], [14, 6], [15], [12, 14], [13, 9], [7, 8], [16, 4], [3, 5], [12], [4], [3, 16], [7, 15], [11, 10], [13], [14], [0, 12], [5, 4], [19, 3], [1, 7], [15, 11], [18, 10], ----End Timer [Execute Mapping]:  1.6406521797180176

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: x-x-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-x-x-x-x-x-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-x-x-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-cx-cx 
     => total size: [315] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx,x]
 - circuit depth: 45 - (small)
 - circuit cycle: 540


>> Solved circuit: 
Circuit Info: 
 - circuit: x-cx-cx-cx-cx-cx-x-cx-cx-cx-x-x-cx-cx-cx-x-cx-cx-cx-x-x-cx-cx-cx-x-x-x-cx-x-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-cx-cx-cx-x-cx-cx-cx-cx-cx-x-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-x-x-x-cx-cx-cx-x-x-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-x-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-cx-x-x-cx-cx-x-cx-cx-cx-cx-x-x-cx-cx-cx-cx-cx-x-x-x-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-x-x-x-cx-cx-x-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-x-cx-cx-cx-cx-cx-cx-cx-cx-x-cx-cx-cx-cx-cx-x-x-cx-cx-cx-x-x-cx-cx-cx-cx-cx-cx 
     => total size: [210] (IBM)
 --------------------
 - qubits_num: 20, using gates: [cx,x]
 - circuit depth: 39 - (small)
 - circuit cycle: 366

Reduced: 
 - size: 105 (33.33%)
 - depth: 6 (13.33%)

