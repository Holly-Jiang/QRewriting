----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.009994029998779297

[0], [1], [11], [0], [11, 1], [0, 11], [1, 0], [11], [1, 11], [1], [11], [0], [0, 11], [1, 0], [11, 1], [0], [11], [2], [10], [11], [10, 2], [11, 10], [2, 11], [10], [2, 10], [2], [10], [11], [11, 10], [2, 11], [10, 2], [11], [10], [4], [3], [10], [3, 4], [10, 3], [4, 10], [3], [4, 3], [4], [3], [10], [10, 3], [4, 10], [3, 4], [10], [11], [2], [10], [11], [10, 2], [11, 10], [2, 11], [10], [2, 10], [2], [10], [11], [11, 10], [2, 11], [10, 2], [11], [0], [1], [11], [0], [11, 1], [0, 11], [1, 0], [11], [1, 11], [1], [11], [0], [0, 11], [1, 0], [11, 1], [0], [11], [2], [10], [11], [10, 2], [11, 10], [2, 11], [10], [2, 10], [2], [10], [11], [11, 10], [2, 11], [10, 2], [11], [10], [4], [3], [10], [3, 4], [10, 3], [4, 10], [3], [4, 3], [4], [3], [10], [10, 3], [4, 10], [3, 4], [10], [11], [2], [10], [11], [10, 2], [11, 10], [2, 11], [10], [2, 10], [2], [10], [11], [11, 10], [2, 11], [10, 2], [11], [0], [1], [11], [0], [11, 1], [0, 11], [1, 0], [11], [1, 11], [1], [11], [0], [0, 11], [1, 0], [11, 1], [0], [11], [2], [10], [11], [10, 2], [11, 10], [2, 11], [10], [2, 10], [2], [10], [11], [11, 10], [2, 11], [10, 2], [11], [10], [8], [3], [10], [3, 8], [10, 3], [8, 10], [3], [8, 3], [8], [3], [10], [10, 3], [8, 10], [3, 8], [10], [11], [2], [10], [11], [10, 2], [11, 10], [2, 11], [10], [2, 10], [2], [10], [11], [11, 10], [2, 11], [10, 2], [11], [0], [1], [11], [0], [11, 1], [0, 11], [1, 0], [11], [1, 11], [1], [11], [0], [0, 11], [1, 0], [11, 1], [0], [11], [2], [10], [11], [10, 2], [11, 10], [2, 11], [10], [2, 10], [2], [10], [11], [11, 10], [2, 11], [10, 2], [11], [10], [8], [3], [10], [3, 8], [10, 3], [8, 10], [3], [8, 3], [8], [3], [10], [10, 3], [8, 10], [3, 8], [10], [11], [2], [10], [11], [10, 2], [11, 10], [2, 11], [10], [2, 10], [2], [10], [11], [11, 10], [2, 11], [10, 2], [11], [0], [2], [11], [0], [11, 2], [0, 11], [2, 0], [11], [2, 11], [2], [11], [0], [0, 11], [2, 0], [11, 2], [0], [11], [8], [3], [11], [3, 8], [11, 3], [8, 11], [3], [8, 3], [8], [3], [11], [11, 3], [8, 11], [3, 8], [11], [0], [2], [11], [0], [11, 2], [0, 11], [2, 0], [11], [2, 11], [2], [11], [0], [0, 11], [2, 0], [11, 2], [0], [11], [8], [3], [11], [3, 8], [11, 3], [8, 11], [3], [8, 3], [8], [3], [11], [11, 3], [8, 11], [3, 8], [11], [2], [0], [1], [11], [0], [11, 1], [0, 11], [1, 0], [11], [1, 11], [1], [11], [0], [0, 11], [1, 0], [11, 1], [0], [11], [2], [10], [11], [10, 2], [11, 10], [2, 11], [10], [2, 10], [2], [10], [11], [11, 10], [2, 11], [10, 2], [11], [10], [6], [3], [10], [3, 6], [10, 3], [6, 10], [3], [6, 3], [6], [3], [10], [10, 3], [6, 10], [3, 6], [10], [11], [2], [10], [11], [10, 2], [11, 10], [2, 11], [10], [2, 10], [2], [10], [11], [11, 10], [2, 11], [10, 2], [11], [0], [1], [11], [0], [11, 1], [0, 11], [1, 0], [11], [1, 11], [1], [11], [0], [0, 11], [1, 0], [11, 1], [0], [11], [2], [10], [11], [10, 2], [11, 10], [2, 11], [10], [2, 10], [2], [10], [11], [11, 10], [2, 11], [10, 2], [11], [10], [6], [3], [10], [3, 6], [10, 3], [6, 10], [3], [6, 3], [6], [3], [10], [10, 3], [6, 10], [3, 6], [10], [11], [2], [10], [11], [10, 2], [11, 10], [2, 11], [10], [2, 10], [2], [10], [11], [11, 10], [2, 11], [10, 2], [11], [0], [1], [11], [0], [11, 1], [0, 11], [1, 0], [11], [1, 11], [1], [11], [0], [0, 11], [1, 0], [11, 1], [0], [11], [2], [9], [11], [9, 2], [11, 9], [2, 11], [9], [2, 9], [2], [9], [11], [11, 9], [2, 11], [9, 2], [11], [9], [10], [3], [9], [3, 10], [9, 3], [10, 9], [3], [10, 3], [10], [3], [9], [9, 3], [10, 9], [3, 10], [9], [11], [2], [9], [11], [9, 2], [11, 9], [2, 11], [9], [2, 9], [2], [9], [11], [11, 9], [2, 11], [9, 2], [11], [0], [1], [11], [0], [11, 1], [0, 11], [1, 0], [11], [1, 11], [1], [11], [0], [0, 11], [1, 0], [11, 1], [0], [11], [2], [9], [11], [9, 2], [11, 9], [2, 11], [9], [2, 9], [2], [9], [11], [11, 9], [2, 11], [9, 2], [11], [9], [10], [3], [9], [3, 10], [9, 3], [10, 9], [3], [10, 3], [10], [3], [9], [9, 3], [10, 9], [3, 10], [9], [11], [2], [9], [11], [9, 2], [11, 9], [2, 11], [9], [2, 9], [2], [9], [11], [11, 9], [2, 11], [9, 2], [11], [0], [2], [11], [0], [11, 2], [0, 11], [2, 0], [11], [2, 11], [2], [11], [0], [0, 11], [2, 0], [11, 2], [0], [11], [10], [3], [11], [3, 10], [11, 3], [10, 11], [3], [10, 3], [10], [3], [11], [11, 3], [10, 11], [3, 10], [11], [0], [2], [11], [0], [11, 2], [0, 11], [2, 0], [11], [2, 11], [2], [11], [0], [0, 11], [2, 0], [11, 2], [0], [11], [10], [3], [11], [3, 10], [11, 3], [10, 11], [3], [10, 3], [10], [3], [11], [11, 3], [10, 11], [3, 10], [11], [2], [3], [0], [1], [11], [0], [11, 1], [0, 11], [1, 0], [11], [1, 11], [1], [11], [0], [0, 11], [1, 0], [11, 1], [0], [11], [2], [10], [11], [10, 2], [11, 10], [2, 11], [10], [2, 10], [2], [10], [11], [11, 10], [2, 11], [10, 2], [11], [10], [5], [3], [10], [3, 5], [10, 3], [5, 10], [3], [5, 3], [5], [3], [10], [10, 3], [5, 10], [3, 5], [10], [11], [2], [10], [11], [10, 2], [11, 10], [2, 11], [10], [2, 10], [2], [10], [11], [11, 10], [2, 11], [10, 2], [11], [0], [1], [11], [0], [11, 1], [0, 11], [1, 0], [11], [1, 11], [1], [11], [0], [0, 11], [1, 0], [11, 1], [0], [11], [2], [10], [11], [10, 2], [11, 10], [2, 11], [10], [2, 10], [2], [10], [11], [11, 10], [2, 11], [10, 2], [11], [10], [5], [3], [10], [3, 5], [10, 3], [5, 10], [3], [5, 3], [5], [3], [10], [10, 3], [5, 10], [3, 5], [10], [11], [2], [10], [11], [10, 2], [11, 10], [2, 11], [10], [2, 10], [2], [10], [11], [11, 10], [2, 11], [10, 2], [11], [0], [1], [11], [0], [11, 1], [0, 11], [1, 0], [11], [1, 11], [1], [11], [0], [0, 11], [1, 0], [11, 1], [0], [11], [2], [10], [11], [10, 2], [11, 10], [2, 11], [10], [2, 10], [2], [10], [11], [11, 10], [2, 11], [10, 2], [11], [10], [9], [3], [10], [3, 9], [10, 3], [9, 10], [3], [9, 3], [9], [3], [10], [10, 3], [9, 10], [3, 9], [10], [11], [2], [10], [11], [10, 2], [11, 10], [2, 11], [10], [2, 10], [2], [10], [11], [11, 10], [2, 11], [10, 2], [11], [0], [1], [11], [0], [11, 1], [0, 11], [1, 0], [11], [1, 11], [1], [11], [0], [0, 11], [1, 0], [11, 1], [0], [11], [2], [10], [11], [10, 2], [11, 10], [2, 11], [10], [2, 10], [2], [10], [11], [11, 10], [2, 11], [10, 2], [11], [10], [9], [3], [10], [3, 9], [10, 3], [9, 10], [3], [9, 3], [9], [3], [10], [10, 3], [9, 10], [3, 9], [10], [11], [2], [10], [11], [10, 2], [11, 10], [2, 11], [10], [2, 10], [2], [10], [11], [11, 10], [2, 11], [10, 2], [11], [0], [2], [11], [0], [11, 2], [0, 11], [2, 0], [11], [2, 11], [2], [11], [0], [0, 11], [2, 0], [11, 2], [0], [11], [9], [3], [11], [3, 9], [11, 3], [9, 11], [3], [9, 3], [9], [3], [11], [11, 3], [9, 11], [3, 9], [11], [0], [2], [11], [0], [11, 2], [0, 11], [2, 0], [11], [2, 11], [2], [11], [0], [0, 11], [2, 0], [11, 2], [0], [11], [9], [3], [11], [3, 9], [11, 3], [9, 11], [3], [9, 3], [9], [3], [11], [11, 3], [9, 11], [3, 9], [11], [2], [0], [1], [11], [0], [11, 1], [0, 11], [1, 0], [11], [1, 11], [1], [11], [0], [0, 11], [1, 0], [11, 1], [0], [11], [2], [10], [11], [10, 2], [11, 10], [2, 11], [10], [2, 10], [2], [10], [11], [11, 10], [2, 11], [10, 2], [11], [10], [7], [3], [10], [3, 7], [10, 3], [7, 10], [3], [7, 3], [7], [3], [10], [10, 3], [7, 10], [3, 7], [10], [11], [2], [10], [11], [10, 2], [11, 10], [2, 11], [10], [2, 10], [2], [10], [11], [11, 10], [2, 11], [10, 2], [11], [0], [1], [11], [0], [11, 1], [0, 11], [1, 0], [11], [1, 11], [1], [11], [0], [0, 11], [1, 0], [11, 1], [0], [11], [2], [10], [11], [10, 2], [11, 10], [2, 11], [10], [2, 10], [2], [10], [11], [11, 10], [2, 11], [10, 2], [11], [10], [7], [3], [10], [3, 7], [10, 3], [7, 10], [3], [7, 3], [7], [3], [10], [10, 3], [7, 10], [3, 7], [10], [11], [2], [10], [11], [10, 2], [11, 10], [2, 11], [10], [2, 10], [2], [10], [11], [11, 10], [2, 11], [10, 2], [11], [1], [0], [1], [10], [0], [10, 1], [0, 10], [1, 0], [10], [1, 10], [1], [10], [0], [0, 10], [1, 0], [10, 1], [0], [10], [2], [9], [10], [9, 2], [10, 9], [2, 10], [9], [2, 9], [2], [9], [10], [10, 9], [2, 10], [9, 2], [10], [9], [11], [3], [9], [3, 11], [9, 3], [11, 9], [3], [11, 3], [11], [3], [9], [9, 3], [11, 9], [3, 11], [9], [10], [2], [9], [10], [9, 2], [10, 9], [2, 10], [9], [2, 9], [2], [9], [10], [10, 9], [2, 10], [9, 2], [10], [0], [1], [10], [0], [10, 1], [0, 10], [1, 0], [10], [1, 10], [1], [10], [0], [0, 10], [1, 0], [10, 1], [0], [10], [2], [9], [10], [9, 2], [10, 9], [2, 10], [9], [2, 9], [2], [9], [10], [10, 9], [2, 10], [9, 2], [10], [9], [11], [3], [9], [3, 11], [9, 3], [11, 9], [3], [11, 3], [11], [3], [9], [9, 3], [11, 9], [3, 11], [9], [10], [2], [9], [10], [9, 2], [10, 9], [2, 10], [9], [2, 9], [2], [9], [10], [10, 9], [2, 10], [9, 2], [10], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]
--------End Timer [Find Candidates]:  0.0

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

..........

Total Plans: 0

--------End Timer [Generate Plans]:  0.0

There's no mapping plan.
[0], [1], [11], [0], [11, 1], [0, 11], [1, 0], [11], [1, 11], [1], [11], [0], [0, 11], [1, 0], [11, 1], [0], [11], [2], [10], [11], [10, 2], [11, 10], [2, 11], [10], [2, 10], [2], [10], [11], [11, 10], [2, 11], [10, 2], [11], [10], [4], [3], [10], [3, 4], [10, 3], [4, 10], [3], [4, 3], [4], [3], [10], [10, 3], [4, 10], [3, 4], [10], [11], [2], [10], [11], [10, 2], [11, 10], [2, 11], [10], [2, 10], [2], [10], [11], [11, 10], [2, 11], [10, 2], [11], [0], [1], [11], [0], [11, 1], [0, 11], [1, 0], [11], [1, 11], [1], [11], [0], [0, 11], [1, 0], [11, 1], [0], [11], [2], [10], [11], [10, 2], [11, 10], [2, 11], [10], [2, 10], [2], [10], [11], [11, 10], [2, 11], [10, 2], [11], [10], [4], [3], [10], [3, 4], [10, 3], [4, 10], [3], [4, 3], [4], [3], [10], [10, 3], [4, 10], [3, 4], [10], [11], [2], [10], [11], [10, 2], [11, 10], [2, 11], [10], [2, 10], [2], [10], [11], [11, 10], [2, 11], [10, 2], [11], [0], [1], [11], [0], [11, 1], [0, 11], [1, 0], [11], [1, 11], [1], [11], [0], [0, 11], [1, 0], [11, 1], [0], [11], [2], [10], [11], [10, 2], [11, 10], [2, 11], [10], [2, 10], [2], [10], [11], [11, 10], [2, 11], [10, 2], [11], [10], [8], [3], [10], [3, 8], [10, 3], [8, 10], [3], [8, 3], [8], [3], [10], [10, 3], [8, 10], [3, 8], [10], [11], [2], [10], [11], [10, 2], [11, 10], [2, 11], [10], [2, 10], [2], [10], [11], [11, 10], [2, 11], [10, 2], [11], [0], [1], [11], [0], [11, 1], [0, 11], [1, 0], [11], [1, 11], [1], [11], [0], [0, 11], [1, 0], [11, 1], [0], [11], [2], [10], [11], [10, 2], [11, 10], [2, 11], [10], [2, 10], [2], [10], [11], [11, 10], [2, 11], [10, 2], [11], [10], [8], [3], [10], [3, 8], [10, 3], [8, 10], [3], [8, 3], [8], [3], [10], [10, 3], [8, 10], [3, 8], [10], [11], [2], [10], [11], [10, 2], [11, 10], [2, 11], [10], [2, 10], [2], [10], [11], [11, 10], [2, 11], [10, 2], [11], [0], [2], [11], [0], [11, 2], [0, 11], [2, 0], [11], [2, 11], [2], [11], [0], [0, 11], [2, 0], [11, 2], [0], [11], [8], [3], [11], [3, 8], [11, 3], [8, 11], [3], [8, 3], [8], [3], [11], [11, 3], [8, 11], [3, 8], [11], [0], [2], [11], [0], [11, 2], [0, 11], [2, 0], [11], [2, 11], [2], [11], [0], [0, 11], [2, 0], [11, 2], [0], [11], [8], [3], [11], [3, 8], [11, 3], [8, 11], [3], [8, 3], [8], [3], [11], [11, 3], [8, 11], [3, 8], [11], [2], [0], [1], [11], [0], [11, 1], [0, 11], [1, 0], [11], [1, 11], [1], [11], [0], [0, 11], [1, 0], [11, 1], [0], [11], [2], [10], [11], [10, 2], [11, 10], [2, 11], [10], [2, 10], [2], [10], [11], [11, 10], [2, 11], [10, 2], [11], [10], [6], [3], [10], [3, 6], [10, 3], [6, 10], [3], [6, 3], [6], [3], [10], [10, 3], [6, 10], [3, 6], [10], [11], [2], [10], [11], [10, 2], [11, 10], [2, 11], [10], [2, 10], [2], [10], [11], [11, 10], [2, 11], [10, 2], [11], [0], [1], [11], [0], [11, 1], [0, 11], [1, 0], [11], [1, 11], [1], [11], [0], [0, 11], [1, 0], [11, 1], [0], [11], [2], [10], [11], [10, 2], [11, 10], [2, 11], [10], [2, 10], [2], [10], [11], [11, 10], [2, 11], [10, 2], [11], [10], [6], [3], [10], [3, 6], [10, 3], [6, 10], [3], [6, 3], [6], [3], [10], [10, 3], [6, 10], [3, 6], [10], [11], [2], [10], [11], [10, 2], [11, 10], [2, 11], [10], [2, 10], [2], [10], [11], [11, 10], [2, 11], [10, 2], [11], [0], [1], [11], [0], [11, 1], [0, 11], [1, 0], [11], [1, 11], [1], [11], [0], [0, 11], [1, 0], [11, 1], [0], [11], [2], [9], [11], [9, 2], [11, 9], [2, 11], [9], [2, 9], [2], [9], [11], [11, 9], [2, 11], [9, 2], [11], [9], [10], [3], [9], [3, 10], [9, 3], [10, 9], [3], [10, 3], [10], [3], [9], [9, 3], [10, 9], [3, 10], [9], [11], [2], [9], [11], [9, 2], [11, 9], [2, 11], [9], [2, 9], [2], [9], [11], [11, 9], [2, 11], [9, 2], [11], [0], [1], [11], [0], [11, 1], [0, 11], [1, 0], [11], [1, 11], [1], [11], [0], [0, 11], [1, 0], [11, 1], [0], [11], [2], [9], [11], [9, 2], [11, 9], [2, 11], [9], [2, 9], [2], [9], [11], [11, 9], [2, 11], [9, 2], [11], [9], [10], [3], [9], [3, 10], [9, 3], [10, 9], [3], [10, 3], [10], [3], [9], [9, 3], [10, 9], [3, 10], [9], [11], [2], [9], [11], [9, 2], [11, 9], [2, 11], [9], [2, 9], [2], [9], [11], [11, 9], [2, 11], [9, 2], [11], [0], [2], [11], [0], [11, 2], [0, 11], [2, 0], [11], [2, 11], [2], [11], [0], [0, 11], [2, 0], [11, 2], [0], [11], [10], [3], [11], [3, 10], [11, 3], [10, 11], [3], [10, 3], [10], [3], [11], [11, 3], [10, 11], [3, 10], [11], [0], [2], [11], [0], [11, 2], [0, 11], [2, 0], [11], [2, 11], [2], [11], [0], [0, 11], [2, 0], [11, 2], [0], [11], [10], [3], [11], [3, 10], [11, 3], [10, 11], [3], [10, 3], [10], [3], [11], [11, 3], [10, 11], [3, 10], [11], [2], [3], [0], [1], [11], [0], [11, 1], [0, 11], [1, 0], [11], [1, 11], [1], [11], [0], [0, 11], [1, 0], [11, 1], [0], [11], [2], [10], [11], [10, 2], [11, 10], [2, 11], [10], [2, 10], [2], [10], [11], [11, 10], [2, 11], [10, 2], [11], [10], [5], [3], [10], [3, 5], [10, 3], [5, 10], [3], [5, 3], [5], [3], [10], [10, 3], [5, 10], [3, 5], [10], [11], [2], [10], [11], [10, 2], [11, 10], [2, 11], [10], [2, 10], [2], [10], [11], [11, 10], [2, 11], [10, 2], [11], [0], [1], [11], [0], [11, 1], [0, 11], [1, 0], [11], [1, 11], [1], [11], [0], [0, 11], [1, 0], [11, 1], [0], [11], [2], [10], [11], [10, 2], [11, 10], [2, 11], [10], [2, 10], [2], [10], [11], [11, 10], [2, 11], [10, 2], [11], [10], [5], [3], [10], [3, 5], [10, 3], [5, 10], [3], [5, 3], [5], [3], [10], [10, 3], [5, 10], [3, 5], [10], [11], [2], [10], [11], [10, 2], [11, 10], [2, 11], [10], [2, 10], [2], [10], [11], [11, 10], [2, 11], [10, 2], [11], [0], [1], [11], [0], [11, 1], [0, 11], [1, 0], [11], [1, 11], [1], [11], [0], [0, 11], [1, 0], [11, 1], [0], [11], [2], [10], [11], [10, 2], [11, 10], [2, 11], [10], [2, 10], [2], [10], [11], [11, 10], [2, 11], [10, 2], [11], [10], [9], [3], [10], [3, 9], [10, 3], [9, 10], [3], [9, 3], [9], [3], [10], [10, 3], [9, 10], [3, 9], [10], [11], [2], [10], [11], [10, 2], [11, 10], [2, 11], [10], [2, 10], [2], [10], [11], [11, 10], [2, 11], [10, 2], [11], [0], [1], [11], [0], [11, 1], [0, 11], [1, 0], [11], [1, 11], [1], [11], [0], [0, 11], [1, 0], [11, 1], [0], [11], [2], [10], [11], [10, 2], [11, 10], [2, 11], [10], [2, 10], [2], [10], [11], [11, 10], [2, 11], [10, 2], [11], [10], [9], [3], [10], [3, 9], [10, 3], [9, 10], [3], [9, 3], [9], [3], [10], [10, 3], [9, 10], [3, 9], [10], [11], [2], [10], [11], [10, 2], [11, 10], [2, 11], [10], [2, 10], [2], [10], [11], [11, 10], [2, 11], [10, 2], [11], [0], [2], [11], [0], [11, 2], [0, 11], [2, 0], [11], [2, 11], [2], [11], [0], [0, 11], [2, 0], [11, 2], [0], [11], [9], [3], [11], [3, 9], [11, 3], [9, 11], [3], [9, 3], [9], [3], [11], [11, 3], [9, 11], [3, 9], [11], [0], [2], [11], [0], [11, 2], [0, 11], [2, 0], [11], [2, 11], [2], [11], [0], [0, 11], [2, 0], [11, 2], [0], [11], [9], [3], [11], [3, 9], [11, 3], [9, 11], [3], [9, 3], [9], [3], [11], [11, 3], [9, 11], [3, 9], [11], [2], [0], [1], [11], [0], [11, 1], [0, 11], [1, 0], [11], [1, 11], [1], [11], [0], [0, 11], [1, 0], [11, 1], [0], [11], [2], [10], [11], [10, 2], [11, 10], [2, 11], [10], [2, 10], [2], [10], [11], [11, 10], [2, 11], [10, 2], [11], [10], [7], [3], [10], [3, 7], [10, 3], [7, 10], [3], [7, 3], [7], [3], [10], [10, 3], [7, 10], [3, 7], [10], [11], [2], [10], [11], [10, 2], [11, 10], [2, 11], [10], [2, 10], [2], [10], [11], [11, 10], [2, 11], [10, 2], [11], [0], [1], [11], [0], [11, 1], [0, 11], [1, 0], [11], [1, 11], [1], [11], [0], [0, 11], [1, 0], [11, 1], [0], [11], [2], [10], [11], [10, 2], [11, 10], [2, 11], [10], [2, 10], [2], [10], [11], [11, 10], [2, 11], [10, 2], [11], [10], [7], [3], [10], [3, 7], [10, 3], [7, 10], [3], [7, 3], [7], [3], [10], [10, 3], [7, 10], [3, 7], [10], [11], [2], [10], [11], [10, 2], [11, 10], [2, 11], [10], [2, 10], [2], [10], [11], [11, 10], [2, 11], [10, 2], [11], [1], [0], [1], [10], [0], [10, 1], [0, 10], [1, 0], [10], [1, 10], [1], [10], [0], [0, 10], [1, 0], [10, 1], [0], [10], [2], [9], [10], [9, 2], [10, 9], [2, 10], [9], [2, 9], [2], [9], [10], [10, 9], [2, 10], [9, 2], [10], [9], [11], [3], [9], [3, 11], [9, 3], [11, 9], [3], [11, 3], [11], [3], [9], [9, 3], [11, 9], [3, 11], [9], [10], [2], [9], [10], [9, 2], [10, 9], [2, 10], [9], [2, 9], [2], [9], [10], [10, 9], [2, 10], [9, 2], [10], [0], [1], [10], [0], [10, 1], [0, 10], [1, 0], [10], [1, 10], [1], [10], [0], [0, 10], [1, 0], [10, 1], [0], [10], [2], [9], [10], [9, 2], [10, 9], [2, 10], [9], [2, 9], [2], [9], [10], [10, 9], [2, 10], [9, 2], [10], [9], [11], [3], [9], [3, 11], [9, 3], [11, 9], [3], [11, 3], [11], [3], [9], [9, 3], [11, 9], [3, 11], [9], [10], [2], [9], [10], [9, 2], [10, 9], [2, 10], [9], [2, 9], [2], [9], [10], [10, 9], [2, 10], [9, 2], [10], ----End Timer [Execute Mapping]:  0.006001472473144531

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-x-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-x-x-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-x-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-x-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h 
     => total size: [1221] (IBM)
 --------------------
 - qubits_num: 12, using gates: [tdg,h,t,x,cx]
 - circuit depth: 684 - (medium)
 - circuit cycle: 1753


>> Solved circuit: 
Circuit Info: 
 - circuit: h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-x-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-x-x-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-x-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-x-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h 
     => total size: [1221] (U)
 --------------------
 - qubits_num: 12, using gates: [tdg,h,t,x,cx]
 - circuit depth: 684 - (medium)
 - circuit cycle: 1753

Reduced: 
 - size: 0 (0.00%)
 - depth: 0 (0.00%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.5638375282287598

[0], [1], [11], [0], [11, 1], [0, 11], [1, 0], [11], [1, 11], [1], [11], [0], [0, 11], [1, 0], [11, 1], [0], [11], [2], [10], [11], [10, 2], [11, 10], [2, 11], [10], [2, 10], [2], [10], [11], [11, 10], [2, 11], [10, 2], [11], [10], [4], [3], [10], [3, 4], [10, 3], [4, 10], [3], [4, 3], [4], [3], [10], [10, 3], [4, 10], [3, 4], [10], [11], [2], [10], [11], [10, 2], [11, 10], [2, 11], [10], [2, 10], [2], [10], [11], [11, 10], [2, 11], [10, 2], [11], [0], [1], [11], [0], [11, 1], [0, 11], [1, 0], [11], [1, 11], [1], [11], [0], [0, 11], [1, 0], [11, 1], [0], [11], [2], [10], [11], [10, 2], [11, 10], [2, 11], [10], [2, 10], [2], [10], [11], [11, 10], [2, 11], [10, 2], [11], [10], [4], [3], [10], [3, 4], [10, 3], [4, 10], [3], [4, 3], [4], [3], [10], [10, 3], [4, 10], [3, 4], [10], [11], [2], [10], [11], [10, 2], [11, 10], [2, 11], [10], [2, 10], [2], [10], [11], [11, 10], [2, 11], [10, 2], [11], [0], [1], [11], [0], [11, 1], [0, 11], [1, 0], [11], [1, 11], [1], [11], [0], [0, 11], [1, 0], [11, 1], [0], [11], [2], [10], [11], [10, 2], [11, 10], [2, 11], [10], [2, 10], [2], [10], [11], [11, 10], [2, 11], [10, 2], [11], [10], [8], [3], [10], [3, 8], [10, 3], [8, 10], [3], [8, 3], [8], [3], [10], [10, 3], [8, 10], [3, 8], [10], [11], [2], [10], [11], [10, 2], [11, 10], [2, 11], [10], [2, 10], [2], [10], [11], [11, 10], [2, 11], [10, 2], [11], [0], [1], [11], [0], [11, 1], [0, 11], [1, 0], [11], [1, 11], [1], [11], [0], [0, 11], [1, 0], [11, 1], [0], [11], [2], [10], [11], [10, 2], [11, 10], [2, 11], [10], [2, 10], [2], [10], [11], [11, 10], [2, 11], [10, 2], [11], [10], [8], [3], [10], [3, 8], [10, 3], [8, 10], [3], [8, 3], [8], [3], [10], [10, 3], [8, 10], [3, 8], [10], [11], [2], [10], [11], [10, 2], [11, 10], [2, 11], [10], [2, 10], [2], [10], [11], [11, 10], [2, 11], [10, 2], [11], [0], [2], [11], [0], [11, 2], [0, 11], [2, 0], [11], [2, 11], [2], [11], [0], [0, 11], [2, 0], [11, 2], [0], [11], [8], [3], [11], [3, 8], [11, 3], [8, 11], [3], [8, 3], [8], [3], [11], [11, 3], [8, 11], [3, 8], [11], [0], [2], [11], [0], [11, 2], [0, 11], [2, 0], [11], [2, 11], [2], [11], [0], [0, 11], [2, 0], [11, 2], [0], [11], [8], [3], [11], [3, 8], [11, 3], [8, 11], [3], [8, 3], [8], [3], [11], [11, 3], [8, 11], [3, 8], [11], [2], [0], [1], [11], [0], [11, 1], [0, 11], [1, 0], [11], [1, 11], [1], [11], [0], [0, 11], [1, 0], [11, 1], [0], [11], [2], [10], [11], [10, 2], [11, 10], [2, 11], [10], [2, 10], [2], [10], [11], [11, 10], [2, 11], [10, 2], [11], [10], [6], [3], [10], [3, 6], [10, 3], [6, 10], [3], [6, 3], [6], [3], [10], [10, 3], [6, 10], [3, 6], [10], [11], [2], [10], [11], [10, 2], [11, 10], [2, 11], [10], [2, 10], [2], [10], [11], [11, 10], [2, 11], [10, 2], [11], [0], [1], [11], [0], [11, 1], [0, 11], [1, 0], [11], [1, 11], [1], [11], [0], [0, 11], [1, 0], [11, 1], [0], [11], [2], [10], [11], [10, 2], [11, 10], [2, 11], [10], [2, 10], [2], [10], [11], [11, 10], [2, 11], [10, 2], [11], [10], [6], [3], [10], [3, 6], [10, 3], [6, 10], [3], [6, 3], [6], [3], [10], [10, 3], [6, 10], [3, 6], [10], [11], [2], [10], [11], [10, 2], [11, 10], [2, 11], [10], [2, 10], [2], [10], [11], [11, 10], [2, 11], [10, 2], [11], [0], [1], [11], [0], [11, 1], [0, 11], [1, 0], [11], [1, 11], [1], [11], [0], [0, 11], [1, 0], [11, 1], [0], [11], [2], [9], [11], [9, 2], [11, 9], [2, 11], [9], [2, 9], [2], [9], [11], [11, 9], [2, 11], [9, 2], [11], [9], [10], [3], [9], [3, 10], [9, 3], [10, 9], [3], [10, 3], [10], [3], [9], [9, 3], [10, 9], [3, 10], [9], [11], [2], [9], [11], [9, 2], [11, 9], [2, 11], [9], [2, 9], [2], [9], [11], [11, 9], [2, 11], [9, 2], [11], [0], [1], [11], [0], [11, 1], [0, 11], [1, 0], [11], [1, 11], [1], [11], [0], [0, 11], [1, 0], [11, 1], [0], [11], [2], [9], [11], [9, 2], [11, 9], [2, 11], [9], [2, 9], [2], [9], [11], [11, 9], [2, 11], [9, 2], [11], [9], [10], [3], [9], [3, 10], [9, 3], [10, 9], [3], [10, 3], [10], [3], [9], [9, 3], [10, 9], [3, 10], [9], [11], [2], [9], [11], [9, 2], [11, 9], [2, 11], [9], [2, 9], [2], [9], [11], [11, 9], [2, 11], [9, 2], [11], [0], [2], [11], [0], [11, 2], [0, 11], [2, 0], [11], [2, 11], [2], [11], [0], [0, 11], [2, 0], [11, 2], [0], [11], [10], [3], [11], [3, 10], [11, 3], [10, 11], [3], [10, 3], [10], [3], [11], [11, 3], [10, 11], [3, 10], [11], [0], [2], [11], [0], [11, 2], [0, 11], [2, 0], [11], [2, 11], [2], [11], [0], [0, 11], [2, 0], [11, 2], [0], [11], [10], [3], [11], [3, 10], [11, 3], [10, 11], [3], [10, 3], [10], [3], [11], [11, 3], [10, 11], [3, 10], [11], [2], [3], [0], [1], [11], [0], [11, 1], [0, 11], [1, 0], [11], [1, 11], [1], [11], [0], [0, 11], [1, 0], [11, 1], [0], [11], [2], [10], [11], [10, 2], [11, 10], [2, 11], [10], [2, 10], [2], [10], [11], [11, 10], [2, 11], [10, 2], [11], [10], [5], [3], [10], [3, 5], [10, 3], [5, 10], [3], [5, 3], [5], [3], [10], [10, 3], [5, 10], [3, 5], [10], [11], [2], [10], [11], [10, 2], [11, 10], [2, 11], [10], [2, 10], [2], [10], [11], [11, 10], [2, 11], [10, 2], [11], [0], [1], [11], [0], [11, 1], [0, 11], [1, 0], [11], [1, 11], [1], [11], [0], [0, 11], [1, 0], [11, 1], [0], [11], [2], [10], [11], [10, 2], [11, 10], [2, 11], [10], [2, 10], [2], [10], [11], [11, 10], [2, 11], [10, 2], [11], [10], [5], [3], [10], [3, 5], [10, 3], [5, 10], [3], [5, 3], [5], [3], [10], [10, 3], [5, 10], [3, 5], [10], [11], [2], [10], [11], [10, 2], [11, 10], [2, 11], [10], [2, 10], [2], [10], [11], [11, 10], [2, 11], [10, 2], [11], [0], [1], [11], [0], [11, 1], [0, 11], [1, 0], [11], [1, 11], [1], [11], [0], [0, 11], [1, 0], [11, 1], [0], [11], [2], [10], [11], [10, 2], [11, 10], [2, 11], [10], [2, 10], [2], [10], [11], [11, 10], [2, 11], [10, 2], [11], [10], [9], [3], [10], [3, 9], [10, 3], [9, 10], [3], [9, 3], [9], [3], [10], [10, 3], [9, 10], [3, 9], [10], [11], [2], [10], [11], [10, 2], [11, 10], [2, 11], [10], [2, 10], [2], [10], [11], [11, 10], [2, 11], [10, 2], [11], [0], [1], [11], [0], [11, 1], [0, 11], [1, 0], [11], [1, 11], [1], [11], [0], [0, 11], [1, 0], [11, 1], [0], [11], [2], [10], [11], [10, 2], [11, 10], [2, 11], [10], [2, 10], [2], [10], [11], [11, 10], [2, 11], [10, 2], [11], [10], [9], [3], [10], [3, 9], [10, 3], [9, 10], [3], [9, 3], [9], [3], [10], [10, 3], [9, 10], [3, 9], [10], [11], [2], [10], [11], [10, 2], [11, 10], [2, 11], [10], [2, 10], [2], [10], [11], [11, 10], [2, 11], [10, 2], [11], [0], [2], [11], [0], [11, 2], [0, 11], [2, 0], [11], [2, 11], [2], [11], [0], [0, 11], [2, 0], [11, 2], [0], [11], [9], [3], [11], [3, 9], [11, 3], [9, 11], [3], [9, 3], [9], [3], [11], [11, 3], [9, 11], [3, 9], [11], [0], [2], [11], [0], [11, 2], [0, 11], [2, 0], [11], [2, 11], [2], [11], [0], [0, 11], [2, 0], [11, 2], [0], [11], [9], [3], [11], [3, 9], [11, 3], [9, 11], [3], [9, 3], [9], [3], [11], [11, 3], [9, 11], [3, 9], [11], [2], [0], [1], [11], [0], [11, 1], [0, 11], [1, 0], [11], [1, 11], [1], [11], [0], [0, 11], [1, 0], [11, 1], [0], [11], [2], [10], [11], [10, 2], [11, 10], [2, 11], [10], [2, 10], [2], [10], [11], [11, 10], [2, 11], [10, 2], [11], [10], [7], [3], [10], [3, 7], [10, 3], [7, 10], [3], [7, 3], [7], [3], [10], [10, 3], [7, 10], [3, 7], [10], [11], [2], [10], [11], [10, 2], [11, 10], [2, 11], [10], [2, 10], [2], [10], [11], [11, 10], [2, 11], [10, 2], [11], [0], [1], [11], [0], [11, 1], [0, 11], [1, 0], [11], [1, 11], [1], [11], [0], [0, 11], [1, 0], [11, 1], [0], [11], [2], [10], [11], [10, 2], [11, 10], [2, 11], [10], [2, 10], [2], [10], [11], [11, 10], [2, 11], [10, 2], [11], [10], [7], [3], [10], [3, 7], [10, 3], [7, 10], [3], [7, 3], [7], [3], [10], [10, 3], [7, 10], [3, 7], [10], [11], [2], [10], [11], [10, 2], [11, 10], [2, 11], [10], [2, 10], [2], [10], [11], [11, 10], [2, 11], [10, 2], [11], [1], [0], [1], [10], [0], [10, 1], [0, 10], [1, 0], [10], [1, 10], [1], [10], [0], [0, 10], [1, 0], [10, 1], [0], [10], [2], [9], [10], [9, 2], [10, 9], [2, 10], [9], [2, 9], [2], [9], [10], [10, 9], [2, 10], [9, 2], [10], [9], [11], [3], [9], [3, 11], [9, 3], [11, 9], [3], [11, 3], [11], [3], [9], [9, 3], [11, 9], [3, 11], [9], [10], [2], [9], [10], [9, 2], [10, 9], [2, 10], [9], [2, 9], [2], [9], [10], [10, 9], [2, 10], [9, 2], [10], [0], [1], [10], [0], [10, 1], [0, 10], [1, 0], [10], [1, 10], [1], [10], [0], [0, 10], [1, 0], [10, 1], [0], [10], [2], [9], [10], [9, 2], [10, 9], [2, 10], [9], [2, 9], [2], [9], [10], [10, 9], [2, 10], [9, 2], [10], [9], [11], [3], [9], [3, 11], [9, 3], [11, 9], [3], [11, 3], [11], [3], [9], [9, 3], [11, 9], [3, 11], [9], [10], [2], [9], [10], [9, 2], [10, 9], [2, 10], [9], [2, 9], [2], [9], [10], [10, 9], [2, 10], [9, 2], [10], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 

[31, 48]
[15, 64]
[95, 112]
[79, 128]
[159, 176]
[143, 192]
[223, 240]
[207, 256]
[271, 288]
[303, 321]
[352, 369]
[336, 385]
[416, 433]
[400, 449]
[480, 497]
[464, 513]
[544, 561]
[528, 577]
[592, 609]
[624, 643]
[674, 691]
[658, 707]
[738, 755]
[722, 771]
[802, 819]
[786, 835]
[866, 883]
[850, 899]
[914, 931]
[946, 964]
[995, 1012]
[979, 1028]
[1059, 1076]
[1043, 1093]
[1124, 1141]
[1108, 1157]
[1188, 1205]

------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.6976051330566406

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [15, 64] hh => I, Pos: [31, 48] hh => I, Pos: [79, 128] hh => I, Pos: [95, 112] hh => I, Pos: [143, 192] hh => I, Pos: [159, 176] hh => I, Pos: [207, 256] hh => I, Pos: [223, 240] hh => I, Pos: [271, 288] hh => I, Pos: [303, 321] hh => I, Pos: [336, 385] hh => I, Pos: [352, 369] hh => I, Pos: [400, 449] hh => I, Pos: [416, 433] hh => I, Pos: [464, 513] hh => I, Pos: [480, 497] hh => I, Pos: [528, 577] hh => I, Pos: [544, 561] hh => I, Pos: [592, 609] hh => I, Pos: [624, 643] hh => I, Pos: [658, 707] hh => I, Pos: [674, 691] hh => I, Pos: [722, 771] hh => I, Pos: [738, 755] hh => I, Pos: [786, 835] hh => I, Pos: [802, 819] hh => I, Pos: [850, 899] hh => I, Pos: [866, 883] hh => I, Pos: [914, 931] hh => I, Pos: [946, 964] hh => I, Pos: [979, 1028] hh => I, Pos: [995, 1012] hh => I, Pos: [1043, 1093] hh => I, Pos: [1059, 1076] hh => I, Pos: [1108, 1157] hh => I, Pos: [1124, 1141] hh => I, Pos: [1188, 1205] hh => I]

Plan: 1
[Pos: [15, 64] hh => I,
 Pos: [31, 48] hh => I,
 Pos: [79, 128] hh => I,
 Pos: [95, 112] hh => I,
 Pos: [143, 192] hh => I,
 Pos: [159, 176] hh => I,
 Pos: [207, 256] hh => I,
 Pos: [223, 240] hh => I,
 Pos: [271, 288] hh => I,
 Pos: [303, 321] hh => I,
 Pos: [336, 385] hh => I,
 Pos: [352, 369] hh => I,
 Pos: [400, 449] hh => I,
 Pos: [416, 433] hh => I,
 Pos: [464, 513] hh => I,
 Pos: [480, 497] hh => I,
 Pos: [528, 577] hh => I,
 Pos: [544, 561] hh => I,
 Pos: [592, 609] hh => I,
 Pos: [624, 643] hh => I,
 Pos: [658, 707] hh => I,
 Pos: [674, 691] hh => I,
 Pos: [722, 771] hh => I,
 Pos: [738, 755] hh => I,
 Pos: [786, 835] hh => I,
 Pos: [802, 819] hh => I,
 Pos: [850, 899] hh => I,
 Pos: [866, 883] hh => I,
 Pos: [914, 931] hh => I,
 Pos: [946, 964] hh => I,
 Pos: [979, 1028] hh => I,
 Pos: [995, 1012] hh => I,
 Pos: [1043, 1093] hh => I,
 Pos: [1059, 1076] hh => I,
 Pos: [1108, 1157] hh => I,
 Pos: [1124, 1141] hh => I,
 Pos: [1188, 1205] hh => I]
Change: 37, Saving: 37

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.10216426849365234

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [15, 64] hh => I,
 Pos: [31, 48] hh => I,
 Pos: [79, 128] hh => I,
 Pos: [95, 112] hh => I,
 Pos: [143, 192] hh => I,
 Pos: [159, 176] hh => I,
 Pos: [207, 256] hh => I,
 Pos: [223, 240] hh => I,
 Pos: [271, 288] hh => I,
 Pos: [303, 321] hh => I,
 Pos: [336, 385] hh => I,
 Pos: [352, 369] hh => I,
 Pos: [400, 449] hh => I,
 Pos: [416, 433] hh => I,
 Pos: [464, 513] hh => I,
 Pos: [480, 497] hh => I,
 Pos: [528, 577] hh => I,
 Pos: [544, 561] hh => I,
 Pos: [592, 609] hh => I,
 Pos: [624, 643] hh => I,
 Pos: [658, 707] hh => I,
 Pos: [674, 691] hh => I,
 Pos: [722, 771] hh => I,
 Pos: [738, 755] hh => I,
 Pos: [786, 835] hh => I,
 Pos: [802, 819] hh => I,
 Pos: [850, 899] hh => I,
 Pos: [866, 883] hh => I,
 Pos: [914, 931] hh => I,
 Pos: [946, 964] hh => I,
 Pos: [979, 1028] hh => I,
 Pos: [995, 1012] hh => I,
 Pos: [1043, 1093] hh => I,
 Pos: [1059, 1076] hh => I,
 Pos: [1108, 1157] hh => I,
 Pos: [1124, 1141] hh => I,
 Pos: [1188, 1205] hh => I]
Change: 37, Saving: 37

Circuit before: htttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchxhtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchxxhtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchxhtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchxhtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccch
---------------
Apply:  Pos: [15, 64] hh => I
Apply:  Pos: [31, 48] hh => I
Apply:  Pos: [79, 128] hh => I
Apply:  Pos: [95, 112] hh => I
Apply:  Pos: [143, 192] hh => I
Apply:  Pos: [159, 176] hh => I
Apply:  Pos: [207, 256] hh => I
Apply:  Pos: [223, 240] hh => I
Apply:  Pos: [271, 288] hh => I
Apply:  Pos: [303, 321] hh => I
Apply:  Pos: [336, 385] hh => I
Apply:  Pos: [352, 369] hh => I
Apply:  Pos: [400, 449] hh => I
Apply:  Pos: [416, 433] hh => I
Apply:  Pos: [464, 513] hh => I
Apply:  Pos: [480, 497] hh => I
Apply:  Pos: [528, 577] hh => I
Apply:  Pos: [544, 561] hh => I
Apply:  Pos: [592, 609] hh => I
Apply:  Pos: [624, 643] hh => I
Apply:  Pos: [658, 707] hh => I
Apply:  Pos: [674, 691] hh => I
Apply:  Pos: [722, 771] hh => I
Apply:  Pos: [738, 755] hh => I
Apply:  Pos: [786, 835] hh => I
Apply:  Pos: [802, 819] hh => I
Apply:  Pos: [850, 899] hh => I
Apply:  Pos: [866, 883] hh => I
Apply:  Pos: [914, 931] hh => I
Apply:  Pos: [946, 964] hh => I
Apply:  Pos: [979, 1028] hh => I
Apply:  Pos: [995, 1012] hh => I
Apply:  Pos: [1043, 1093] hh => I
Apply:  Pos: [1059, 1076] hh => I
Apply:  Pos: [1108, 1157] hh => I
Apply:  Pos: [1124, 1141] hh => I
Apply:  Pos: [1188, 1205] hh => I
---------------
Circuit after: htttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchxtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchxxtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchxtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchxtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchhtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccch

--------End Timer [apply mapping plan]:  0.0019991397857666016

[0], [1], [11], [0], [11, 1], [0, 11], [1, 0], [11], [1, 11], [1], [11], [0], [0, 11], [1, 0], [11, 1], [11], [2], [10], [11], [10, 2], [11, 10], [2, 11], [10], [2, 10], [2], [10], [11], [11, 10], [2, 11], [10, 2], [10], [4], [3], [10], [3, 4], [10, 3], [4, 10], [3], [4, 3], [4], [3], [10], [10, 3], [4, 10], [3, 4], [10], [2], [10], [11], [10, 2], [11, 10], [2, 11], [10], [2, 10], [2], [10], [11], [11, 10], [2, 11], [10, 2], [11], [1], [11], [0], [11, 1], [0, 11], [1, 0], [11], [1, 11], [1], [11], [0], [0, 11], [1, 0], [11, 1], [11], [2], [10], [11], [10, 2], [11, 10], [2, 11], [10], [2, 10], [2], [10], [11], [11, 10], [2, 11], [10, 2], [10], [4], [3], [10], [3, 4], [10, 3], [4, 10], [3], [4, 3], [4], [3], [10], [10, 3], [4, 10], [3, 4], [10], [2], [10], [11], [10, 2], [11, 10], [2, 11], [10], [2, 10], [2], [10], [11], [11, 10], [2, 11], [10, 2], [11], [1], [11], [0], [11, 1], [0, 11], [1, 0], [11], [1, 11], [1], [11], [0], [0, 11], [1, 0], [11, 1], [11], [2], [10], [11], [10, 2], [11, 10], [2, 11], [10], [2, 10], [2], [10], [11], [11, 10], [2, 11], [10, 2], [10], [8], [3], [10], [3, 8], [10, 3], [8, 10], [3], [8, 3], [8], [3], [10], [10, 3], [8, 10], [3, 8], [10], [2], [10], [11], [10, 2], [11, 10], [2, 11], [10], [2, 10], [2], [10], [11], [11, 10], [2, 11], [10, 2], [11], [1], [11], [0], [11, 1], [0, 11], [1, 0], [11], [1, 11], [1], [11], [0], [0, 11], [1, 0], [11, 1], [11], [2], [10], [11], [10, 2], [11, 10], [2, 11], [10], [2, 10], [2], [10], [11], [11, 10], [2, 11], [10, 2], [10], [8], [3], [10], [3, 8], [10, 3], [8, 10], [3], [8, 3], [8], [3], [10], [10, 3], [8, 10], [3, 8], [10], [2], [10], [11], [10, 2], [11, 10], [2, 11], [10], [2, 10], [2], [10], [11], [11, 10], [2, 11], [10, 2], [11], [2], [11], [0], [11, 2], [0, 11], [2, 0], [11], [2, 11], [2], [11], [0], [0, 11], [2, 0], [11, 2], [11], [8], [3], [11], [3, 8], [11, 3], [8, 11], [3], [8, 3], [8], [3], [11], [11, 3], [8, 11], [3, 8], [11], [2], [11], [0], [11, 2], [0, 11], [2, 0], [11], [2, 11], [2], [11], [0], [0, 11], [2, 0], [11, 2], [11], [8], [3], [11], [3, 8], [11, 3], [8, 11], [3], [8, 3], [8], [3], [11], [11, 3], [8, 11], [3, 8], [11], [2], [1], [11], [0], [11, 1], [0, 11], [1, 0], [11], [1, 11], [1], [11], [0], [0, 11], [1, 0], [11, 1], [11], [2], [10], [11], [10, 2], [11, 10], [2, 11], [10], [2, 10], [2], [10], [11], [11, 10], [2, 11], [10, 2], [10], [6], [3], [10], [3, 6], [10, 3], [6, 10], [3], [6, 3], [6], [3], [10], [10, 3], [6, 10], [3, 6], [10], [2], [10], [11], [10, 2], [11, 10], [2, 11], [10], [2, 10], [2], [10], [11], [11, 10], [2, 11], [10, 2], [11], [1], [11], [0], [11, 1], [0, 11], [1, 0], [11], [1, 11], [1], [11], [0], [0, 11], [1, 0], [11, 1], [11], [2], [10], [11], [10, 2], [11, 10], [2, 11], [10], [2, 10], [2], [10], [11], [11, 10], [2, 11], [10, 2], [10], [6], [3], [10], [3, 6], [10, 3], [6, 10], [3], [6, 3], [6], [3], [10], [10, 3], [6, 10], [3, 6], [10], [2], [10], [11], [10, 2], [11, 10], [2, 11], [10], [2, 10], [2], [10], [11], [11, 10], [2, 11], [10, 2], [11], [1], [11], [0], [11, 1], [0, 11], [1, 0], [11], [1, 11], [1], [11], [0], [0, 11], [1, 0], [11, 1], [11], [2], [9], [11], [9, 2], [11, 9], [2, 11], [9], [2, 9], [2], [9], [11], [11, 9], [2, 11], [9, 2], [9], [10], [3], [9], [3, 10], [9, 3], [10, 9], [3], [10, 3], [10], [3], [9], [9, 3], [10, 9], [3, 10], [9], [2], [9], [11], [9, 2], [11, 9], [2, 11], [9], [2, 9], [2], [9], [11], [11, 9], [2, 11], [9, 2], [11], [1], [11], [0], [11, 1], [0, 11], [1, 0], [11], [1, 11], [1], [11], [0], [0, 11], [1, 0], [11, 1], [11], [2], [9], [11], [9, 2], [11, 9], [2, 11], [9], [2, 9], [2], [9], [11], [11, 9], [2, 11], [9, 2], [9], [10], [3], [9], [3, 10], [9, 3], [10, 9], [3], [10, 3], [10], [3], [9], [9, 3], [10, 9], [3, 10], [9], [2], [9], [11], [9, 2], [11, 9], [2, 11], [9], [2, 9], [2], [9], [11], [11, 9], [2, 11], [9, 2], [11], [2], [11], [0], [11, 2], [0, 11], [2, 0], [11], [2, 11], [2], [11], [0], [0, 11], [2, 0], [11, 2], [11], [10], [3], [11], [3, 10], [11, 3], [10, 11], [3], [10, 3], [10], [3], [11], [11, 3], [10, 11], [3, 10], [11], [2], [11], [0], [11, 2], [0, 11], [2, 0], [11], [2, 11], [2], [11], [0], [0, 11], [2, 0], [11, 2], [11], [10], [3], [11], [3, 10], [11, 3], [10, 11], [3], [10, 3], [10], [3], [11], [11, 3], [10, 11], [3, 10], [11], [2], [3], [1], [11], [0], [11, 1], [0, 11], [1, 0], [11], [1, 11], [1], [11], [0], [0, 11], [1, 0], [11, 1], [11], [2], [10], [11], [10, 2], [11, 10], [2, 11], [10], [2, 10], [2], [10], [11], [11, 10], [2, 11], [10, 2], [10], [5], [3], [10], [3, 5], [10, 3], [5, 10], [3], [5, 3], [5], [3], [10], [10, 3], [5, 10], [3, 5], [10], [2], [10], [11], [10, 2], [11, 10], [2, 11], [10], [2, 10], [2], [10], [11], [11, 10], [2, 11], [10, 2], [11], [1], [11], [0], [11, 1], [0, 11], [1, 0], [11], [1, 11], [1], [11], [0], [0, 11], [1, 0], [11, 1], [11], [2], [10], [11], [10, 2], [11, 10], [2, 11], [10], [2, 10], [2], [10], [11], [11, 10], [2, 11], [10, 2], [10], [5], [3], [10], [3, 5], [10, 3], [5, 10], [3], [5, 3], [5], [3], [10], [10, 3], [5, 10], [3, 5], [10], [2], [10], [11], [10, 2], [11, 10], [2, 11], [10], [2, 10], [2], [10], [11], [11, 10], [2, 11], [10, 2], [11], [1], [11], [0], [11, 1], [0, 11], [1, 0], [11], [1, 11], [1], [11], [0], [0, 11], [1, 0], [11, 1], [11], [2], [10], [11], [10, 2], [11, 10], [2, 11], [10], [2, 10], [2], [10], [11], [11, 10], [2, 11], [10, 2], [10], [9], [3], [10], [3, 9], [10, 3], [9, 10], [3], [9, 3], [9], [3], [10], [10, 3], [9, 10], [3, 9], [10], [2], [10], [11], [10, 2], [11, 10], [2, 11], [10], [2, 10], [2], [10], [11], [11, 10], [2, 11], [10, 2], [11], [1], [11], [0], [11, 1], [0, 11], [1, 0], [11], [1, 11], [1], [11], [0], [0, 11], [1, 0], [11, 1], [11], [2], [10], [11], [10, 2], [11, 10], [2, 11], [10], [2, 10], [2], [10], [11], [11, 10], [2, 11], [10, 2], [10], [9], [3], [10], [3, 9], [10, 3], [9, 10], [3], [9, 3], [9], [3], [10], [10, 3], [9, 10], [3, 9], [10], [2], [10], [11], [10, 2], [11, 10], [2, 11], [10], [2, 10], [2], [10], [11], [11, 10], [2, 11], [10, 2], [11], [2], [11], [0], [11, 2], [0, 11], [2, 0], [11], [2, 11], [2], [11], [0], [0, 11], [2, 0], [11, 2], [11], [9], [3], [11], [3, 9], [11, 3], [9, 11], [3], [9, 3], [9], [3], [11], [11, 3], [9, 11], [3, 9], [11], [2], [11], [0], [11, 2], [0, 11], [2, 0], [11], [2, 11], [2], [11], [0], [0, 11], [2, 0], [11, 2], [11], [9], [3], [11], [3, 9], [11, 3], [9, 11], [3], [9, 3], [9], [3], [11], [11, 3], [9, 11], [3, 9], [11], [2], [1], [11], [0], [11, 1], [0, 11], [1, 0], [11], [1, 11], [1], [11], [0], [0, 11], [1, 0], [11, 1], [11], [2], [10], [11], [10, 2], [11, 10], [2, 11], [10], [2, 10], [2], [10], [11], [11, 10], [2, 11], [10, 2], [10], [7], [3], [10], [3, 7], [10, 3], [7, 10], [3], [7, 3], [7], [3], [10], [10, 3], [7, 10], [3, 7], [10], [2], [10], [11], [10, 2], [11, 10], [2, 11], [10], [2, 10], [2], [10], [11], [11, 10], [2, 11], [10, 2], [11], [1], [11], [0], [11, 1], [0, 11], [1, 0], [11], [1, 11], [1], [11], [0], [0, 11], [1, 0], [11, 1], [11], [2], [10], [11], [10, 2], [11, 10], [2, 11], [10], [2, 10], [2], [10], [11], [11, 10], [2, 11], [10, 2], [10], [7], [3], [10], [3, 7], [10, 3], [7, 10], [3], [7, 3], [7], [3], [10], [10, 3], [7, 10], [3, 7], [10], [2], [10], [11], [10, 2], [11, 10], [2, 11], [10], [2, 10], [2], [10], [11], [11, 10], [2, 11], [10, 2], [11], [1], [1], [10], [0], [10, 1], [0, 10], [1, 0], [10], [1, 10], [1], [10], [0], [0, 10], [1, 0], [10, 1], [10], [2], [9], [10], [9, 2], [10, 9], [2, 10], [9], [2, 9], [2], [9], [10], [10, 9], [2, 10], [9, 2], [9], [11], [3], [9], [3, 11], [9, 3], [11, 9], [3], [11, 3], [11], [3], [9], [9, 3], [11, 9], [3, 11], [9], [2], [9], [10], [9, 2], [10, 9], [2, 10], [9], [2, 9], [2], [9], [10], [10, 9], [2, 10], [9, 2], [10], [1], [10], [0], [10, 1], [0, 10], [1, 0], [10], [1, 10], [1], [10], [0], [0, 10], [1, 0], [10, 1], [0], [10], [2], [9], [10], [9, 2], [10, 9], [2, 10], [9], [2, 9], [2], [9], [10], [10, 9], [2, 10], [9, 2], [9], [11], [3], [9], [3, 11], [9, 3], [11, 9], [3], [11, 3], [11], [3], [9], [9, 3], [11, 9], [3, 11], [9], [2], [9], [10], [9, 2], [10, 9], [2, 10], [9], [2, 9], [2], [9], [10], [10, 9], [2, 10], [9, 2], [10], ----End Timer [Execute Mapping]:  2.806764841079712

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.544158935546875

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

..........

Total Plans: 0

--------End Timer [Generate Plans]:  0.0

There's no mapping plan.
[0], [1], [11], [0], [11, 1], [0, 11], [1, 0], [11], [1, 11], [1], [11], [0], [0, 11], [1, 0], [11, 1], [11], [2], [10], [11], [10, 2], [11, 10], [2, 11], [10], [2, 10], [2], [10], [11], [11, 10], [2, 11], [10, 2], [10], [4], [3], [10], [3, 4], [10, 3], [4, 10], [3], [4, 3], [4], [3], [10], [10, 3], [4, 10], [3, 4], [10], [2], [10], [11], [10, 2], [11, 10], [2, 11], [10], [2, 10], [2], [10], [11], [11, 10], [2, 11], [10, 2], [11], [1], [11], [0], [11, 1], [0, 11], [1, 0], [11], [1, 11], [1], [11], [0], [0, 11], [1, 0], [11, 1], [11], [2], [10], [11], [10, 2], [11, 10], [2, 11], [10], [2, 10], [2], [10], [11], [11, 10], [2, 11], [10, 2], [10], [4], [3], [10], [3, 4], [10, 3], [4, 10], [3], [4, 3], [4], [3], [10], [10, 3], [4, 10], [3, 4], [10], [2], [10], [11], [10, 2], [11, 10], [2, 11], [10], [2, 10], [2], [10], [11], [11, 10], [2, 11], [10, 2], [11], [1], [11], [0], [11, 1], [0, 11], [1, 0], [11], [1, 11], [1], [11], [0], [0, 11], [1, 0], [11, 1], [11], [2], [10], [11], [10, 2], [11, 10], [2, 11], [10], [2, 10], [2], [10], [11], [11, 10], [2, 11], [10, 2], [10], [8], [3], [10], [3, 8], [10, 3], [8, 10], [3], [8, 3], [8], [3], [10], [10, 3], [8, 10], [3, 8], [10], [2], [10], [11], [10, 2], [11, 10], [2, 11], [10], [2, 10], [2], [10], [11], [11, 10], [2, 11], [10, 2], [11], [1], [11], [0], [11, 1], [0, 11], [1, 0], [11], [1, 11], [1], [11], [0], [0, 11], [1, 0], [11, 1], [11], [2], [10], [11], [10, 2], [11, 10], [2, 11], [10], [2, 10], [2], [10], [11], [11, 10], [2, 11], [10, 2], [10], [8], [3], [10], [3, 8], [10, 3], [8, 10], [3], [8, 3], [8], [3], [10], [10, 3], [8, 10], [3, 8], [10], [2], [10], [11], [10, 2], [11, 10], [2, 11], [10], [2, 10], [2], [10], [11], [11, 10], [2, 11], [10, 2], [11], [2], [11], [0], [11, 2], [0, 11], [2, 0], [11], [2, 11], [2], [11], [0], [0, 11], [2, 0], [11, 2], [11], [8], [3], [11], [3, 8], [11, 3], [8, 11], [3], [8, 3], [8], [3], [11], [11, 3], [8, 11], [3, 8], [11], [2], [11], [0], [11, 2], [0, 11], [2, 0], [11], [2, 11], [2], [11], [0], [0, 11], [2, 0], [11, 2], [11], [8], [3], [11], [3, 8], [11, 3], [8, 11], [3], [8, 3], [8], [3], [11], [11, 3], [8, 11], [3, 8], [11], [2], [1], [11], [0], [11, 1], [0, 11], [1, 0], [11], [1, 11], [1], [11], [0], [0, 11], [1, 0], [11, 1], [11], [2], [10], [11], [10, 2], [11, 10], [2, 11], [10], [2, 10], [2], [10], [11], [11, 10], [2, 11], [10, 2], [10], [6], [3], [10], [3, 6], [10, 3], [6, 10], [3], [6, 3], [6], [3], [10], [10, 3], [6, 10], [3, 6], [10], [2], [10], [11], [10, 2], [11, 10], [2, 11], [10], [2, 10], [2], [10], [11], [11, 10], [2, 11], [10, 2], [11], [1], [11], [0], [11, 1], [0, 11], [1, 0], [11], [1, 11], [1], [11], [0], [0, 11], [1, 0], [11, 1], [11], [2], [10], [11], [10, 2], [11, 10], [2, 11], [10], [2, 10], [2], [10], [11], [11, 10], [2, 11], [10, 2], [10], [6], [3], [10], [3, 6], [10, 3], [6, 10], [3], [6, 3], [6], [3], [10], [10, 3], [6, 10], [3, 6], [10], [2], [10], [11], [10, 2], [11, 10], [2, 11], [10], [2, 10], [2], [10], [11], [11, 10], [2, 11], [10, 2], [11], [1], [11], [0], [11, 1], [0, 11], [1, 0], [11], [1, 11], [1], [11], [0], [0, 11], [1, 0], [11, 1], [11], [2], [9], [11], [9, 2], [11, 9], [2, 11], [9], [2, 9], [2], [9], [11], [11, 9], [2, 11], [9, 2], [9], [10], [3], [9], [3, 10], [9, 3], [10, 9], [3], [10, 3], [10], [3], [9], [9, 3], [10, 9], [3, 10], [9], [2], [9], [11], [9, 2], [11, 9], [2, 11], [9], [2, 9], [2], [9], [11], [11, 9], [2, 11], [9, 2], [11], [1], [11], [0], [11, 1], [0, 11], [1, 0], [11], [1, 11], [1], [11], [0], [0, 11], [1, 0], [11, 1], [11], [2], [9], [11], [9, 2], [11, 9], [2, 11], [9], [2, 9], [2], [9], [11], [11, 9], [2, 11], [9, 2], [9], [10], [3], [9], [3, 10], [9, 3], [10, 9], [3], [10, 3], [10], [3], [9], [9, 3], [10, 9], [3, 10], [9], [2], [9], [11], [9, 2], [11, 9], [2, 11], [9], [2, 9], [2], [9], [11], [11, 9], [2, 11], [9, 2], [11], [2], [11], [0], [11, 2], [0, 11], [2, 0], [11], [2, 11], [2], [11], [0], [0, 11], [2, 0], [11, 2], [11], [10], [3], [11], [3, 10], [11, 3], [10, 11], [3], [10, 3], [10], [3], [11], [11, 3], [10, 11], [3, 10], [11], [2], [11], [0], [11, 2], [0, 11], [2, 0], [11], [2, 11], [2], [11], [0], [0, 11], [2, 0], [11, 2], [11], [10], [3], [11], [3, 10], [11, 3], [10, 11], [3], [10, 3], [10], [3], [11], [11, 3], [10, 11], [3, 10], [11], [2], [3], [1], [11], [0], [11, 1], [0, 11], [1, 0], [11], [1, 11], [1], [11], [0], [0, 11], [1, 0], [11, 1], [11], [2], [10], [11], [10, 2], [11, 10], [2, 11], [10], [2, 10], [2], [10], [11], [11, 10], [2, 11], [10, 2], [10], [5], [3], [10], [3, 5], [10, 3], [5, 10], [3], [5, 3], [5], [3], [10], [10, 3], [5, 10], [3, 5], [10], [2], [10], [11], [10, 2], [11, 10], [2, 11], [10], [2, 10], [2], [10], [11], [11, 10], [2, 11], [10, 2], [11], [1], [11], [0], [11, 1], [0, 11], [1, 0], [11], [1, 11], [1], [11], [0], [0, 11], [1, 0], [11, 1], [11], [2], [10], [11], [10, 2], [11, 10], [2, 11], [10], [2, 10], [2], [10], [11], [11, 10], [2, 11], [10, 2], [10], [5], [3], [10], [3, 5], [10, 3], [5, 10], [3], [5, 3], [5], [3], [10], [10, 3], [5, 10], [3, 5], [10], [2], [10], [11], [10, 2], [11, 10], [2, 11], [10], [2, 10], [2], [10], [11], [11, 10], [2, 11], [10, 2], [11], [1], [11], [0], [11, 1], [0, 11], [1, 0], [11], [1, 11], [1], [11], [0], [0, 11], [1, 0], [11, 1], [11], [2], [10], [11], [10, 2], [11, 10], [2, 11], [10], [2, 10], [2], [10], [11], [11, 10], [2, 11], [10, 2], [10], [9], [3], [10], [3, 9], [10, 3], [9, 10], [3], [9, 3], [9], [3], [10], [10, 3], [9, 10], [3, 9], [10], [2], [10], [11], [10, 2], [11, 10], [2, 11], [10], [2, 10], [2], [10], [11], [11, 10], [2, 11], [10, 2], [11], [1], [11], [0], [11, 1], [0, 11], [1, 0], [11], [1, 11], [1], [11], [0], [0, 11], [1, 0], [11, 1], [11], [2], [10], [11], [10, 2], [11, 10], [2, 11], [10], [2, 10], [2], [10], [11], [11, 10], [2, 11], [10, 2], [10], [9], [3], [10], [3, 9], [10, 3], [9, 10], [3], [9, 3], [9], [3], [10], [10, 3], [9, 10], [3, 9], [10], [2], [10], [11], [10, 2], [11, 10], [2, 11], [10], [2, 10], [2], [10], [11], [11, 10], [2, 11], [10, 2], [11], [2], [11], [0], [11, 2], [0, 11], [2, 0], [11], [2, 11], [2], [11], [0], [0, 11], [2, 0], [11, 2], [11], [9], [3], [11], [3, 9], [11, 3], [9, 11], [3], [9, 3], [9], [3], [11], [11, 3], [9, 11], [3, 9], [11], [2], [11], [0], [11, 2], [0, 11], [2, 0], [11], [2, 11], [2], [11], [0], [0, 11], [2, 0], [11, 2], [11], [9], [3], [11], [3, 9], [11, 3], [9, 11], [3], [9, 3], [9], [3], [11], [11, 3], [9, 11], [3, 9], [11], [2], [1], [11], [0], [11, 1], [0, 11], [1, 0], [11], [1, 11], [1], [11], [0], [0, 11], [1, 0], [11, 1], [11], [2], [10], [11], [10, 2], [11, 10], [2, 11], [10], [2, 10], [2], [10], [11], [11, 10], [2, 11], [10, 2], [10], [7], [3], [10], [3, 7], [10, 3], [7, 10], [3], [7, 3], [7], [3], [10], [10, 3], [7, 10], [3, 7], [10], [2], [10], [11], [10, 2], [11, 10], [2, 11], [10], [2, 10], [2], [10], [11], [11, 10], [2, 11], [10, 2], [11], [1], [11], [0], [11, 1], [0, 11], [1, 0], [11], [1, 11], [1], [11], [0], [0, 11], [1, 0], [11, 1], [11], [2], [10], [11], [10, 2], [11, 10], [2, 11], [10], [2, 10], [2], [10], [11], [11, 10], [2, 11], [10, 2], [10], [7], [3], [10], [3, 7], [10, 3], [7, 10], [3], [7, 3], [7], [3], [10], [10, 3], [7, 10], [3, 7], [10], [2], [10], [11], [10, 2], [11, 10], [2, 11], [10], [2, 10], [2], [10], [11], [11, 10], [2, 11], [10, 2], [11], [1], [1], [10], [0], [10, 1], [0, 10], [1, 0], [10], [1, 10], [1], [10], [0], [0, 10], [1, 0], [10, 1], [10], [2], [9], [10], [9, 2], [10, 9], [2, 10], [9], [2, 9], [2], [9], [10], [10, 9], [2, 10], [9, 2], [9], [11], [3], [9], [3, 11], [9, 3], [11, 9], [3], [11, 3], [11], [3], [9], [9, 3], [11, 9], [3, 11], [9], [2], [9], [10], [9, 2], [10, 9], [2, 10], [9], [2, 9], [2], [9], [10], [10, 9], [2, 10], [9, 2], [10], [1], [10], [0], [10, 1], [0, 10], [1, 0], [10], [1, 10], [1], [10], [0], [0, 10], [1, 0], [10, 1], [0], [10], [2], [9], [10], [9, 2], [10, 9], [2, 10], [9], [2, 9], [2], [9], [10], [10, 9], [2, 10], [9, 2], [9], [11], [3], [9], [3, 11], [9, 3], [11, 9], [3], [11, 3], [11], [3], [9], [9, 3], [11, 9], [3, 11], [9], [2], [9], [10], [9, 2], [10, 9], [2, 10], [9], [2, 9], [2], [9], [10], [10, 9], [2, 10], [9, 2], [10], ----End Timer [Execute Mapping]:  2.5461573600769043

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-x-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-x-x-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-x-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-x-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h 
     => total size: [1221] (IBM)
 --------------------
 - qubits_num: 12, using gates: [t,tdg,h,cx,x]
 - circuit depth: 684 - (medium)
 - circuit cycle: 1753


>> Solved circuit: 
Circuit Info: 
 - circuit: h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-x-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-x-x-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-x-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-x-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h 
     => total size: [1147] (U)
 --------------------
 - qubits_num: 12, using gates: [t,tdg,h,cx,x]
 - circuit depth: 684 - (medium)
 - circuit cycle: 1679

Reduced: 
 - size: 74 (6.06%)
 - depth: 0 (0.00%)

