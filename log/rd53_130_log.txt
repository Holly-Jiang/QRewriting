----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.007988214492797852

[5], [6], [2], [1], [3], [2], [3, 1], [2, 3], [1, 2], [3], [1, 3], [1], [3], [2], [2, 3], [1, 2], [3, 1], [2], [2], [6], [3], [2], [3, 6], [2, 3], [6, 2], [3], [6, 3], [6], [3], [2], [2, 3], [6, 2], [3, 6], [2], [3], [5], [1], [3], [1, 5], [3, 1], [5, 3], [1], [5, 1], [5], [1], [3], [3, 1], [5, 3], [1, 5], [3], [1], [0], [4], [1], [4, 0], [1, 4], [0, 1], [4], [0, 4], [0], [4], [1], [1, 4], [0, 1], [4, 0], [1], [3], [5], [1], [3], [1, 5], [3, 1], [5, 3], [1], [5, 1], [5], [1], [3], [3, 1], [5, 3], [1, 5], [3], [2], [6], [3], [2], [3, 6], [2, 3], [6, 2], [3], [6, 3], [6], [3], [2], [2, 3], [6, 2], [3, 6], [2], [3], [5], [1], [3], [1, 5], [3, 1], [5, 3], [1], [5, 1], [5], [1], [3], [3, 1], [5, 3], [1, 5], [3], [1], [0], [4], [1], [4, 0], [1, 4], [0, 1], [4], [0, 4], [0], [4], [1], [1, 4], [0, 1], [4, 0], [1], [3], [5], [1], [3], [1, 5], [3, 1], [5, 3], [1], [5, 1], [5], [1], [3], [3, 1], [5, 3], [1, 5], [3], [6], [2], [5], [6], [5, 2], [6, 5], [2, 6], [5], [2, 5], [2], [5], [6], [6, 5], [2, 6], [5, 2], [6], [0], [4], [6], [0], [4], [6], [4, 0], [6, 4], [0, 6], [4], [0, 4], [0], [4], [6], [6, 4], [0, 6], [4, 0], [6], [1], [3], [6], [1], [3], [6], [3, 1], [6, 3], [1, 6], [3], [1, 3], [1], [3], [6], [6, 3], [1, 6], [3, 1], [6], [0], [2], [4], [5], [6], [3], [5], [3, 6], [5, 3], [6, 5], [3], [6, 3], [6], [3], [5], [5, 3], [6, 5], [3, 6], [5], [3], [4], [1], [3], [1, 4], [3, 1], [4, 3], [1], [4, 1], [4], [1], [3], [3, 1], [4, 3], [1, 4], [3], [1], [0], [2], [1], [2, 0], [1, 2], [0, 1], [2], [0, 2], [0], [2], [1], [1, 2], [0, 1], [2, 0], [1], [3], [4], [1], [3], [1, 4], [3, 1], [4, 3], [1], [4, 1], [4], [1], [3], [3, 1], [4, 3], [1, 4], [3], [5], [6], [3], [5], [3, 6], [5, 3], [6, 5], [3], [6, 3], [6], [3], [5], [5, 3], [6, 5], [3, 6], [5], [3], [4], [1], [3], [1, 4], [3, 1], [4, 3], [1], [4, 1], [4], [1], [3], [3, 1], [4, 3], [1, 4], [3], [1], [0], [2], [1], [2, 0], [1, 2], [0, 1], [2], [0, 2], [0], [2], [1], [1, 2], [0, 1], [2, 0], [1], [3], [4], [1], [3], [1, 4], [3, 1], [4, 3], [1], [4, 1], [4], [1], [3], [3, 1], [4, 3], [1, 4], [3], [1], [3], [5], [6], [4], [5], [4, 6], [5, 4], [6, 5], [4], [6, 4], [6], [4], [5], [5, 4], [6, 5], [4, 6], [5], [4], [3], [0], [4], [0, 3], [4, 0], [3, 4], [0], [3, 0], [3], [0], [4], [4, 0], [3, 4], [0, 3], [4], [0], [1], [2], [0], [2, 1], [0, 2], [1, 0], [2], [1, 2], [1], [2], [0], [0, 2], [1, 0], [2, 1], [0], [4], [3], [0], [4], [0, 3], [4, 0], [3, 4], [0], [3, 0], [3], [0], [4], [4, 0], [3, 4], [0, 3], [4], [5], [6], [4], [5], [4, 6], [5, 4], [6, 5], [4], [6, 4], [6], [4], [5], [5, 4], [6, 5], [4, 6], [5], [4], [3], [0], [4], [0, 3], [4, 0], [3, 4], [0], [3, 0], [3], [0], [4], [4, 0], [3, 4], [0, 3], [4], [0], [1], [2], [0], [2, 1], [0, 2], [1, 0], [2], [1, 2], [1], [2], [0], [0, 2], [1, 0], [2, 1], [0], [4], [3], [0], [4], [0, 3], [4, 0], [3, 4], [0], [3, 0], [3], [0], [4], [4, 0], [3, 4], [0, 3], [4], [5], [4], [6], [5], [6, 4], [5, 6], [4, 5], [6], [4, 6], [4], [6], [5], [5, 6], [4, 5], [6, 4], [5], [6], [3], [2], [6], [2, 3], [6, 2], [3, 6], [2], [3, 2], [3], [2], [6], [6, 2], [3, 6], [2, 3], [6], [2], [0], [1], [2], [1, 0], [2, 1], [0, 2], [1], [0, 1], [0], [1], [2], [2, 1], [0, 2], [1, 0], [2], [6], [3], [2], [6], [2, 3], [6, 2], [3, 6], [2], [3, 2], [3], [2], [6], [6, 2], [3, 6], [2, 3], [6], [5], [4], [6], [5], [6, 4], [5, 6], [4, 5], [6], [4, 6], [4], [6], [5], [5, 6], [4, 5], [6, 4], [5], [6], [3], [2], [6], [2, 3], [6, 2], [3, 6], [2], [3, 2], [3], [2], [6], [6, 2], [3, 6], [2, 3], [6], [2], [0], [1], [2], [1, 0], [2, 1], [0, 2], [1], [0, 1], [0], [1], [2], [2, 1], [0, 2], [1, 0], [2], [6], [3], [2], [6], [2, 3], [6, 2], [3, 6], [2], [3, 2], [3], [2], [6], [6, 2], [3, 6], [2, 3], [6], [4], [6], [3], [4], [3, 6], [4, 3], [6, 4], [3], [6, 3], [6], [3], [4], [4, 3], [6, 4], [3, 6], [4], [3], [5], [1], [3], [1, 5], [3, 1], [5, 3], [1], [5, 1], [5], [1], [3], [3, 1], [5, 3], [1, 5], [3], [1], [0], [2], [1], [2, 0], [1, 2], [0, 1], [2], [0, 2], [0], [2], [1], [1, 2], [0, 1], [2, 0], [1], [3], [5], [1], [3], [1, 5], [3, 1], [5, 3], [1], [5, 1], [5], [1], [3], [3, 1], [5, 3], [1, 5], [3], [4], [6], [3], [4], [3, 6], [4, 3], [6, 4], [3], [6, 3], [6], [3], [4], [4, 3], [6, 4], [3, 6], [4], [3], [5], [1], [3], [1, 5], [3, 1], [5, 3], [1], [5, 1], [5], [1], [3], [3, 1], [5, 3], [1, 5], [3], [1], [0], [2], [1], [2, 0], [1, 2], [0, 1], [2], [0, 2], [0], [2], [1], [1, 2], [0, 1], [2, 0], [1], [3], [5], [1], [3], [1, 5], [3, 1], [5, 3], [1], [5, 1], [5], [1], [3], [3, 1], [5, 3], [1, 5], [3], [2], [6], [3], [2], [3, 6], [2, 3], [6, 2], [3], [6, 3], [6], [3], [2], [2, 3], [6, 2], [3, 6], [2], [3], [4], [5], [3], [5, 4], [3, 5], [4, 3], [5], [4, 5], [4], [5], [3], [3, 5], [4, 3], [5, 4], [3], [2], [6], [3], [2], [3, 6], [2, 3], [6, 2], [3], [6, 3], [6], [3], [2], [2, 3], [6, 2], [3, 6], [2], [3], [4], [5], [3], [5, 4], [3, 5], [4, 3], [5], [4, 5], [4], [5], [3], [3, 5], [4, 3], [5, 4], [3], [0], [6], [4], [6], [3], [4], [3, 6], [4, 3], [6, 4], [3], [6, 3], [6], [3], [4], [4, 3], [6, 4], [3, 6], [4], [3], [0], [5], [3], [5, 0], [3, 5], [0, 3], [5], [0, 5], [0], [5], [3], [3, 5], [0, 3], [5, 0], [3], [4], [6], [3], [4], [3, 6], [4, 3], [6, 4], [3], [6, 3], [6], [3], [4], [4, 3], [6, 4], [3, 6], [4], [3], [0], [5], [3], [5, 0], [3, 5], [0, 3], [5], [0, 5], [0], [5], [3], [3, 5], [0, 3], [5, 0], [3], [1], [3], [2], [4], [6], [2], [6, 4], [2, 6], [4, 2], [6], [4, 6], [4], [6], [2], [2, 6], [4, 2], [6, 4], [2], [6], [1], [3], [6], [3, 1], [6, 3], [1, 6], [3], [1, 3], [1], [3], [6], [6, 3], [1, 6], [3, 1], [6], [2], [4], [6], [2], [6, 4], [2, 6], [4, 2], [6], [4, 6], [4], [6], [2], [2, 6], [4, 2], [6, 4], [2], [6], [1], [3], [6], [3, 1], [6, 3], [1, 6], [3], [1, 3], [1], [3], [6], [6, 3], [1, 6], [3, 1], [6], [1], [3], [2], [6], [5], [2], [5, 6], [2, 5], [6, 2], [5], [6, 5], [6], [5], [2], [2, 5], [6, 2], [5, 6], [2], [5], [4], [0], [5], [0, 4], [5, 0], [4, 5], [0], [4, 0], [4], [0], [5], [5, 0], [4, 5], [0, 4], [5], [0], [1], [3], [0], [3, 1], [0, 3], [1, 0], [3], [1, 3], [1], [3], [0], [0, 3], [1, 0], [3, 1], [0], [5], [4], [0], [5], [0, 4], [5, 0], [4, 5], [0], [4, 0], [4], [0], [5], [5, 0], [4, 5], [0, 4], [5], [2], [6], [5], [2], [5, 6], [2, 5], [6, 2], [5], [6, 5], [6], [5], [2], [2, 5], [6, 2], [5, 6], [2], [5], [4], [0], [5], [0, 4], [5, 0], [4, 5], [0], [4, 0], [4], [0], [5], [5, 0], [4, 5], [0, 4], [5], [0], [1], [3], [0], [3, 1], [0, 3], [1, 0], [3], [1, 3], [1], [3], [0], [0, 3], [1, 0], [3, 1], [0], [5], [4], [0], [5], [0, 4], [5, 0], [4, 5], [0], [4, 0], [4], [0], [5], [5, 0], [4, 5], [0, 4], [5], [2], [5], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]
--------End Timer [Find Candidates]:  0.0

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

..........

Total Plans: 0

--------End Timer [Generate Plans]:  0.0

There's no mapping plan.
[5], [6], [2], [1], [3], [2], [3, 1], [2, 3], [1, 2], [3], [1, 3], [1], [3], [2], [2, 3], [1, 2], [3, 1], [2], [2], [6], [3], [2], [3, 6], [2, 3], [6, 2], [3], [6, 3], [6], [3], [2], [2, 3], [6, 2], [3, 6], [2], [3], [5], [1], [3], [1, 5], [3, 1], [5, 3], [1], [5, 1], [5], [1], [3], [3, 1], [5, 3], [1, 5], [3], [1], [0], [4], [1], [4, 0], [1, 4], [0, 1], [4], [0, 4], [0], [4], [1], [1, 4], [0, 1], [4, 0], [1], [3], [5], [1], [3], [1, 5], [3, 1], [5, 3], [1], [5, 1], [5], [1], [3], [3, 1], [5, 3], [1, 5], [3], [2], [6], [3], [2], [3, 6], [2, 3], [6, 2], [3], [6, 3], [6], [3], [2], [2, 3], [6, 2], [3, 6], [2], [3], [5], [1], [3], [1, 5], [3, 1], [5, 3], [1], [5, 1], [5], [1], [3], [3, 1], [5, 3], [1, 5], [3], [1], [0], [4], [1], [4, 0], [1, 4], [0, 1], [4], [0, 4], [0], [4], [1], [1, 4], [0, 1], [4, 0], [1], [3], [5], [1], [3], [1, 5], [3, 1], [5, 3], [1], [5, 1], [5], [1], [3], [3, 1], [5, 3], [1, 5], [3], [6], [2], [5], [6], [5, 2], [6, 5], [2, 6], [5], [2, 5], [2], [5], [6], [6, 5], [2, 6], [5, 2], [6], [0], [4], [6], [0], [4], [6], [4, 0], [6, 4], [0, 6], [4], [0, 4], [0], [4], [6], [6, 4], [0, 6], [4, 0], [6], [1], [3], [6], [1], [3], [6], [3, 1], [6, 3], [1, 6], [3], [1, 3], [1], [3], [6], [6, 3], [1, 6], [3, 1], [6], [0], [2], [4], [5], [6], [3], [5], [3, 6], [5, 3], [6, 5], [3], [6, 3], [6], [3], [5], [5, 3], [6, 5], [3, 6], [5], [3], [4], [1], [3], [1, 4], [3, 1], [4, 3], [1], [4, 1], [4], [1], [3], [3, 1], [4, 3], [1, 4], [3], [1], [0], [2], [1], [2, 0], [1, 2], [0, 1], [2], [0, 2], [0], [2], [1], [1, 2], [0, 1], [2, 0], [1], [3], [4], [1], [3], [1, 4], [3, 1], [4, 3], [1], [4, 1], [4], [1], [3], [3, 1], [4, 3], [1, 4], [3], [5], [6], [3], [5], [3, 6], [5, 3], [6, 5], [3], [6, 3], [6], [3], [5], [5, 3], [6, 5], [3, 6], [5], [3], [4], [1], [3], [1, 4], [3, 1], [4, 3], [1], [4, 1], [4], [1], [3], [3, 1], [4, 3], [1, 4], [3], [1], [0], [2], [1], [2, 0], [1, 2], [0, 1], [2], [0, 2], [0], [2], [1], [1, 2], [0, 1], [2, 0], [1], [3], [4], [1], [3], [1, 4], [3, 1], [4, 3], [1], [4, 1], [4], [1], [3], [3, 1], [4, 3], [1, 4], [3], [1], [3], [5], [6], [4], [5], [4, 6], [5, 4], [6, 5], [4], [6, 4], [6], [4], [5], [5, 4], [6, 5], [4, 6], [5], [4], [3], [0], [4], [0, 3], [4, 0], [3, 4], [0], [3, 0], [3], [0], [4], [4, 0], [3, 4], [0, 3], [4], [0], [1], [2], [0], [2, 1], [0, 2], [1, 0], [2], [1, 2], [1], [2], [0], [0, 2], [1, 0], [2, 1], [0], [4], [3], [0], [4], [0, 3], [4, 0], [3, 4], [0], [3, 0], [3], [0], [4], [4, 0], [3, 4], [0, 3], [4], [5], [6], [4], [5], [4, 6], [5, 4], [6, 5], [4], [6, 4], [6], [4], [5], [5, 4], [6, 5], [4, 6], [5], [4], [3], [0], [4], [0, 3], [4, 0], [3, 4], [0], [3, 0], [3], [0], [4], [4, 0], [3, 4], [0, 3], [4], [0], [1], [2], [0], [2, 1], [0, 2], [1, 0], [2], [1, 2], [1], [2], [0], [0, 2], [1, 0], [2, 1], [0], [4], [3], [0], [4], [0, 3], [4, 0], [3, 4], [0], [3, 0], [3], [0], [4], [4, 0], [3, 4], [0, 3], [4], [5], [4], [6], [5], [6, 4], [5, 6], [4, 5], [6], [4, 6], [4], [6], [5], [5, 6], [4, 5], [6, 4], [5], [6], [3], [2], [6], [2, 3], [6, 2], [3, 6], [2], [3, 2], [3], [2], [6], [6, 2], [3, 6], [2, 3], [6], [2], [0], [1], [2], [1, 0], [2, 1], [0, 2], [1], [0, 1], [0], [1], [2], [2, 1], [0, 2], [1, 0], [2], [6], [3], [2], [6], [2, 3], [6, 2], [3, 6], [2], [3, 2], [3], [2], [6], [6, 2], [3, 6], [2, 3], [6], [5], [4], [6], [5], [6, 4], [5, 6], [4, 5], [6], [4, 6], [4], [6], [5], [5, 6], [4, 5], [6, 4], [5], [6], [3], [2], [6], [2, 3], [6, 2], [3, 6], [2], [3, 2], [3], [2], [6], [6, 2], [3, 6], [2, 3], [6], [2], [0], [1], [2], [1, 0], [2, 1], [0, 2], [1], [0, 1], [0], [1], [2], [2, 1], [0, 2], [1, 0], [2], [6], [3], [2], [6], [2, 3], [6, 2], [3, 6], [2], [3, 2], [3], [2], [6], [6, 2], [3, 6], [2, 3], [6], [4], [6], [3], [4], [3, 6], [4, 3], [6, 4], [3], [6, 3], [6], [3], [4], [4, 3], [6, 4], [3, 6], [4], [3], [5], [1], [3], [1, 5], [3, 1], [5, 3], [1], [5, 1], [5], [1], [3], [3, 1], [5, 3], [1, 5], [3], [1], [0], [2], [1], [2, 0], [1, 2], [0, 1], [2], [0, 2], [0], [2], [1], [1, 2], [0, 1], [2, 0], [1], [3], [5], [1], [3], [1, 5], [3, 1], [5, 3], [1], [5, 1], [5], [1], [3], [3, 1], [5, 3], [1, 5], [3], [4], [6], [3], [4], [3, 6], [4, 3], [6, 4], [3], [6, 3], [6], [3], [4], [4, 3], [6, 4], [3, 6], [4], [3], [5], [1], [3], [1, 5], [3, 1], [5, 3], [1], [5, 1], [5], [1], [3], [3, 1], [5, 3], [1, 5], [3], [1], [0], [2], [1], [2, 0], [1, 2], [0, 1], [2], [0, 2], [0], [2], [1], [1, 2], [0, 1], [2, 0], [1], [3], [5], [1], [3], [1, 5], [3, 1], [5, 3], [1], [5, 1], [5], [1], [3], [3, 1], [5, 3], [1, 5], [3], [2], [6], [3], [2], [3, 6], [2, 3], [6, 2], [3], [6, 3], [6], [3], [2], [2, 3], [6, 2], [3, 6], [2], [3], [4], [5], [3], [5, 4], [3, 5], [4, 3], [5], [4, 5], [4], [5], [3], [3, 5], [4, 3], [5, 4], [3], [2], [6], [3], [2], [3, 6], [2, 3], [6, 2], [3], [6, 3], [6], [3], [2], [2, 3], [6, 2], [3, 6], [2], [3], [4], [5], [3], [5, 4], [3, 5], [4, 3], [5], [4, 5], [4], [5], [3], [3, 5], [4, 3], [5, 4], [3], [0], [6], [4], [6], [3], [4], [3, 6], [4, 3], [6, 4], [3], [6, 3], [6], [3], [4], [4, 3], [6, 4], [3, 6], [4], [3], [0], [5], [3], [5, 0], [3, 5], [0, 3], [5], [0, 5], [0], [5], [3], [3, 5], [0, 3], [5, 0], [3], [4], [6], [3], [4], [3, 6], [4, 3], [6, 4], [3], [6, 3], [6], [3], [4], [4, 3], [6, 4], [3, 6], [4], [3], [0], [5], [3], [5, 0], [3, 5], [0, 3], [5], [0, 5], [0], [5], [3], [3, 5], [0, 3], [5, 0], [3], [1], [3], [2], [4], [6], [2], [6, 4], [2, 6], [4, 2], [6], [4, 6], [4], [6], [2], [2, 6], [4, 2], [6, 4], [2], [6], [1], [3], [6], [3, 1], [6, 3], [1, 6], [3], [1, 3], [1], [3], [6], [6, 3], [1, 6], [3, 1], [6], [2], [4], [6], [2], [6, 4], [2, 6], [4, 2], [6], [4, 6], [4], [6], [2], [2, 6], [4, 2], [6, 4], [2], [6], [1], [3], [6], [3, 1], [6, 3], [1, 6], [3], [1, 3], [1], [3], [6], [6, 3], [1, 6], [3, 1], [6], [1], [3], [2], [6], [5], [2], [5, 6], [2, 5], [6, 2], [5], [6, 5], [6], [5], [2], [2, 5], [6, 2], [5, 6], [2], [5], [4], [0], [5], [0, 4], [5, 0], [4, 5], [0], [4, 0], [4], [0], [5], [5, 0], [4, 5], [0, 4], [5], [0], [1], [3], [0], [3, 1], [0, 3], [1, 0], [3], [1, 3], [1], [3], [0], [0, 3], [1, 0], [3, 1], [0], [5], [4], [0], [5], [0, 4], [5, 0], [4, 5], [0], [4, 0], [4], [0], [5], [5, 0], [4, 5], [0, 4], [5], [2], [6], [5], [2], [5, 6], [2, 5], [6, 2], [5], [6, 5], [6], [5], [2], [2, 5], [6, 2], [5, 6], [2], [5], [4], [0], [5], [0, 4], [5, 0], [4, 5], [0], [4, 0], [4], [0], [5], [5, 0], [4, 5], [0, 4], [5], [0], [1], [3], [0], [3, 1], [0, 3], [1, 0], [3], [1, 3], [1], [3], [0], [0, 3], [1, 0], [3, 1], [0], [5], [4], [0], [5], [0, 4], [5, 0], [4, 5], [0], [4, 0], [4], [0], [5], [5, 0], [4, 5], [0, 4], [5], [2], [5], ----End Timer [Execute Mapping]:  0.00099945068359375

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: x-x-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-x-x-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-x-x-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-x-x-x-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-x-x-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-x-x-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-x-x-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-x-x-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-x-x 
     => total size: [1043] (IBM)
 --------------------
 - qubits_num: 7, using gates: [tdg,h,t,x,cx]
 - circuit depth: 569 - (medium)
 - circuit cycle: 1491


>> Solved circuit: 
Circuit Info: 
 - circuit: x-x-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-x-x-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-x-x-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-x-x-x-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-x-x-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-x-x-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-x-x-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-x-x-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-x-x 
     => total size: [1043] (U)
 --------------------
 - qubits_num: 7, using gates: [tdg,h,t,x,cx]
 - circuit depth: 569 - (medium)
 - circuit cycle: 1491

Reduced: 
 - size: 0 (0.00%)
 - depth: 0 (0.00%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.4587521553039551

[5], [6], [2], [1], [3], [2], [3, 1], [2, 3], [1, 2], [3], [1, 3], [1], [3], [2], [2, 3], [1, 2], [3, 1], [6], [3], [2], [3, 6], [2, 3], [6, 2], [3], [6, 3], [6], [3], [2], [2, 3], [6, 2], [3, 6], [2], [3], [5], [1], [3], [1, 5], [3, 1], [5, 3], [1], [5, 1], [5], [1], [3], [3, 1], [5, 3], [1, 5], [3], [1], [0], [4], [1], [4, 0], [1, 4], [0, 1], [4], [0, 4], [0], [4], [1], [1, 4], [0, 1], [4, 0], [1], [3], [5], [1], [3], [1, 5], [3, 1], [5, 3], [1], [5, 1], [5], [1], [3], [3, 1], [5, 3], [1, 5], [3], [2], [6], [3], [2], [3, 6], [2, 3], [6, 2], [3], [6, 3], [6], [3], [2], [2, 3], [6, 2], [3, 6], [2], [3], [5], [1], [3], [1, 5], [3, 1], [5, 3], [1], [5, 1], [5], [1], [3], [3, 1], [5, 3], [1, 5], [3], [1], [0], [4], [1], [4, 0], [1, 4], [0, 1], [4], [0, 4], [0], [4], [1], [1, 4], [0, 1], [4, 0], [1], [3], [5], [1], [3], [1, 5], [3, 1], [5, 3], [1], [5, 1], [5], [1], [3], [3, 1], [5, 3], [1, 5], [3], [6], [2], [5], [6], [5, 2], [6, 5], [2, 6], [5], [2, 5], [2], [5], [6], [6, 5], [2, 6], [5, 2], [6], [0], [4], [6], [0], [4], [6], [4, 0], [6, 4], [0, 6], [4], [0, 4], [0], [4], [6], [6, 4], [0, 6], [4, 0], [6], [1], [3], [6], [1], [3], [6], [3, 1], [6, 3], [1, 6], [3], [1, 3], [1], [3], [6], [6, 3], [1, 6], [3, 1], [6], [0], [2], [4], [5], [6], [3], [5], [3, 6], [5, 3], [6, 5], [3], [6, 3], [6], [3], [5], [5, 3], [6, 5], [3, 6], [5], [3], [4], [1], [3], [1, 4], [3, 1], [4, 3], [1], [4, 1], [4], [1], [3], [3, 1], [4, 3], [1, 4], [3], [1], [0], [2], [1], [2, 0], [1, 2], [0, 1], [2], [0, 2], [0], [2], [1], [1, 2], [0, 1], [2, 0], [1], [3], [4], [1], [3], [1, 4], [3, 1], [4, 3], [1], [4, 1], [4], [1], [3], [3, 1], [4, 3], [1, 4], [3], [5], [6], [3], [5], [3, 6], [5, 3], [6, 5], [3], [6, 3], [6], [3], [5], [5, 3], [6, 5], [3, 6], [5], [3], [4], [1], [3], [1, 4], [3, 1], [4, 3], [1], [4, 1], [4], [1], [3], [3, 1], [4, 3], [1, 4], [3], [1], [0], [2], [1], [2, 0], [1, 2], [0, 1], [2], [0, 2], [0], [2], [1], [1, 2], [0, 1], [2, 0], [1], [3], [4], [1], [3], [1, 4], [3, 1], [4, 3], [1], [4, 1], [4], [1], [3], [3, 1], [4, 3], [1, 4], [3], [1], [3], [5], [6], [4], [5], [4, 6], [5, 4], [6, 5], [4], [6, 4], [6], [4], [5], [5, 4], [6, 5], [4, 6], [5], [4], [3], [0], [4], [0, 3], [4, 0], [3, 4], [0], [3, 0], [3], [0], [4], [4, 0], [3, 4], [0, 3], [4], [0], [1], [2], [0], [2, 1], [0, 2], [1, 0], [2], [1, 2], [1], [2], [0], [0, 2], [1, 0], [2, 1], [0], [4], [3], [0], [4], [0, 3], [4, 0], [3, 4], [0], [3, 0], [3], [0], [4], [4, 0], [3, 4], [0, 3], [4], [5], [6], [4], [5], [4, 6], [5, 4], [6, 5], [4], [6, 4], [6], [4], [5], [5, 4], [6, 5], [4, 6], [5], [4], [3], [0], [4], [0, 3], [4, 0], [3, 4], [0], [3, 0], [3], [0], [4], [4, 0], [3, 4], [0, 3], [4], [0], [1], [2], [0], [2, 1], [0, 2], [1, 0], [2], [1, 2], [1], [2], [0], [0, 2], [1, 0], [2, 1], [0], [4], [3], [0], [4], [0, 3], [4, 0], [3, 4], [0], [3, 0], [3], [0], [4], [4, 0], [3, 4], [0, 3], [4], [5], [4], [6], [5], [6, 4], [5, 6], [4, 5], [6], [4, 6], [4], [6], [5], [5, 6], [4, 5], [6, 4], [5], [6], [3], [2], [6], [2, 3], [6, 2], [3, 6], [2], [3, 2], [3], [2], [6], [6, 2], [3, 6], [2, 3], [6], [2], [0], [1], [2], [1, 0], [2, 1], [0, 2], [1], [0, 1], [0], [1], [2], [2, 1], [0, 2], [1, 0], [2], [6], [3], [2], [6], [2, 3], [6, 2], [3, 6], [2], [3, 2], [3], [2], [6], [6, 2], [3, 6], [2, 3], [6], [5], [4], [6], [5], [6, 4], [5, 6], [4, 5], [6], [4, 6], [4], [6], [5], [5, 6], [4, 5], [6, 4], [5], [6], [3], [2], [6], [2, 3], [6, 2], [3, 6], [2], [3, 2], [3], [2], [6], [6, 2], [3, 6], [2, 3], [6], [2], [0], [1], [2], [1, 0], [2, 1], [0, 2], [1], [0, 1], [0], [1], [2], [2, 1], [0, 2], [1, 0], [2], [6], [3], [2], [6], [2, 3], [6, 2], [3, 6], [2], [3, 2], [3], [2], [6], [6, 2], [3, 6], [2, 3], [6], [4], [6], [3], [4], [3, 6], [4, 3], [6, 4], [3], [6, 3], [6], [3], [4], [4, 3], [6, 4], [3, 6], [4], [3], [5], [1], [3], [1, 5], [3, 1], [5, 3], [1], [5, 1], [5], [1], [3], [3, 1], [5, 3], [1, 5], [3], [1], [0], [2], [1], [2, 0], [1, 2], [0, 1], [2], [0, 2], [0], [2], [1], [1, 2], [0, 1], [2, 0], [1], [3], [5], [1], [3], [1, 5], [3, 1], [5, 3], [1], [5, 1], [5], [1], [3], [3, 1], [5, 3], [1, 5], [3], [4], [6], [3], [4], [3, 6], [4, 3], [6, 4], [3], [6, 3], [6], [3], [4], [4, 3], [6, 4], [3, 6], [4], [3], [5], [1], [3], [1, 5], [3, 1], [5, 3], [1], [5, 1], [5], [1], [3], [3, 1], [5, 3], [1, 5], [3], [1], [0], [2], [1], [2, 0], [1, 2], [0, 1], [2], [0, 2], [0], [2], [1], [1, 2], [0, 1], [2, 0], [1], [3], [5], [1], [3], [1, 5], [3, 1], [5, 3], [1], [5, 1], [5], [1], [3], [3, 1], [5, 3], [1, 5], [3], [2], [6], [3], [2], [3, 6], [2, 3], [6, 2], [3], [6, 3], [6], [3], [2], [2, 3], [6, 2], [3, 6], [2], [3], [4], [5], [3], [5, 4], [3, 5], [4, 3], [5], [4, 5], [4], [5], [3], [3, 5], [4, 3], [5, 4], [3], [2], [6], [3], [2], [3, 6], [2, 3], [6, 2], [3], [6, 3], [6], [3], [2], [2, 3], [6, 2], [3, 6], [2], [3], [4], [5], [3], [5, 4], [3, 5], [4, 3], [5], [4, 5], [4], [5], [3], [3, 5], [4, 3], [5, 4], [3], [0], [6], [4], [6], [3], [4], [3, 6], [4, 3], [6, 4], [3], [6, 3], [6], [3], [4], [4, 3], [6, 4], [3, 6], [4], [3], [0], [5], [3], [5, 0], [3, 5], [0, 3], [5], [0, 5], [0], [5], [3], [3, 5], [0, 3], [5, 0], [3], [4], [6], [3], [4], [3, 6], [4, 3], [6, 4], [3], [6, 3], [6], [3], [4], [4, 3], [6, 4], [3, 6], [4], [3], [0], [5], [3], [5, 0], [3, 5], [0, 3], [5], [0, 5], [0], [5], [3], [3, 5], [0, 3], [5, 0], [3], [1], [3], [2], [4], [6], [2], [6, 4], [2, 6], [4, 2], [6], [4, 6], [4], [6], [2], [2, 6], [4, 2], [6, 4], [2], [6], [1], [3], [6], [3, 1], [6, 3], [1, 6], [3], [1, 3], [1], [3], [6], [6, 3], [1, 6], [3, 1], [6], [2], [4], [6], [2], [6, 4], [2, 6], [4, 2], [6], [4, 6], [4], [6], [2], [2, 6], [4, 2], [6, 4], [2], [6], [1], [3], [6], [3, 1], [6, 3], [1, 6], [3], [1, 3], [1], [3], [6], [6, 3], [1, 6], [3, 1], [6], [1], [3], [2], [6], [5], [2], [5, 6], [2, 5], [6, 2], [5], [6, 5], [6], [5], [2], [2, 5], [6, 2], [5, 6], [2], [5], [4], [0], [5], [0, 4], [5, 0], [4, 5], [0], [4, 0], [4], [0], [5], [5, 0], [4, 5], [0, 4], [5], [0], [1], [3], [0], [3, 1], [0, 3], [1, 0], [3], [1, 3], [1], [3], [0], [0, 3], [1, 0], [3, 1], [0], [5], [4], [0], [5], [0, 4], [5, 0], [4, 5], [0], [4, 0], [4], [0], [5], [5, 0], [4, 5], [0, 4], [5], [2], [6], [5], [2], [5, 6], [2, 5], [6, 2], [5], [6, 5], [6], [5], [2], [2, 5], [6, 2], [5, 6], [2], [5], [4], [0], [5], [0, 4], [5, 0], [4, 5], [0], [4, 0], [4], [0], [5], [5, 0], [4, 5], [0, 4], [5], [0], [1], [3], [0], [3, 1], [0, 3], [1, 0], [3], [1, 3], [1], [3], [0], [0, 3], [1, 0], [3, 1], [0], [5], [4], [0], [5], [0, 4], [5, 0], [4, 5], [0], [4, 0], [4], [0], [5], [5, 0], [4, 5], [0, 4], [5], [2], [5], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 

[47, 64]
[31, 80]
[111, 128]
[159, 162]
[177, 180]
[230, 247]
[214, 263]
[294, 311]
[360, 377]
[344, 393]
[424, 441]
[408, 457]
[488, 505]
[472, 521]
[552, 569]
[616, 633]
[600, 649]
[680, 697]
[728, 745]
[794, 811]
[860, 877]
[892, 911]
[942, 959]
[926, 975]
[1006, 1023]

------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.2002899646759033

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [31, 80] hh => I, Pos: [47, 64] hh => I, Pos: [111, 128] hh => I, Pos: [159, 162] hh => I, Pos: [177, 180] hh => I, Pos: [214, 263] hh => I, Pos: [230, 247] hh => I, Pos: [294, 311] hh => I, Pos: [344, 393] hh => I, Pos: [360, 377] hh => I, Pos: [408, 457] hh => I, Pos: [424, 441] hh => I, Pos: [472, 521] hh => I, Pos: [488, 505] hh => I, Pos: [552, 569] hh => I, Pos: [600, 649] hh => I, Pos: [616, 633] hh => I, Pos: [680, 697] hh => I, Pos: [728, 745] hh => I, Pos: [794, 811] hh => I, Pos: [860, 877] hh => I, Pos: [892, 911] hh => I, Pos: [926, 975] hh => I, Pos: [942, 959] hh => I, Pos: [1006, 1023] hh => I]

Plan: 1
[Pos: [31, 80] hh => I,
 Pos: [47, 64] hh => I,
 Pos: [111, 128] hh => I,
 Pos: [159, 162] hh => I,
 Pos: [177, 180] hh => I,
 Pos: [214, 263] hh => I,
 Pos: [230, 247] hh => I,
 Pos: [294, 311] hh => I,
 Pos: [344, 393] hh => I,
 Pos: [360, 377] hh => I,
 Pos: [408, 457] hh => I,
 Pos: [424, 441] hh => I,
 Pos: [472, 521] hh => I,
 Pos: [488, 505] hh => I,
 Pos: [552, 569] hh => I,
 Pos: [600, 649] hh => I,
 Pos: [616, 633] hh => I,
 Pos: [680, 697] hh => I,
 Pos: [728, 745] hh => I,
 Pos: [794, 811] hh => I,
 Pos: [860, 877] hh => I,
 Pos: [892, 911] hh => I,
 Pos: [926, 975] hh => I,
 Pos: [942, 959] hh => I,
 Pos: [1006, 1023] hh => I]
Change: 25, Saving: 25

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.06655192375183105

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [31, 80] hh => I,
 Pos: [47, 64] hh => I,
 Pos: [111, 128] hh => I,
 Pos: [159, 162] hh => I,
 Pos: [177, 180] hh => I,
 Pos: [214, 263] hh => I,
 Pos: [230, 247] hh => I,
 Pos: [294, 311] hh => I,
 Pos: [344, 393] hh => I,
 Pos: [360, 377] hh => I,
 Pos: [408, 457] hh => I,
 Pos: [424, 441] hh => I,
 Pos: [472, 521] hh => I,
 Pos: [488, 505] hh => I,
 Pos: [552, 569] hh => I,
 Pos: [600, 649] hh => I,
 Pos: [616, 633] hh => I,
 Pos: [680, 697] hh => I,
 Pos: [728, 745] hh => I,
 Pos: [794, 811] hh => I,
 Pos: [860, 877] hh => I,
 Pos: [892, 911] hh => I,
 Pos: [926, 975] hh => I,
 Pos: [942, 959] hh => I,
 Pos: [1006, 1023] hh => I]
Change: 25, Saving: 25

Circuit before: xxhtttcccTcTTtccctttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchxxhtttcccTcTTtccchxxhtttcccTcTTtccchxxxhtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchxxhtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchxxhtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchxxhtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchxxhtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchxx
---------------
Apply:  Pos: [31, 80] hh => I
Apply:  Pos: [47, 64] hh => I
Apply:  Pos: [111, 128] hh => I
Apply:  Pos: [159, 162] hh => I
Apply:  Pos: [177, 180] hh => I
Apply:  Pos: [214, 263] hh => I
Apply:  Pos: [230, 247] hh => I
Apply:  Pos: [294, 311] hh => I
Apply:  Pos: [344, 393] hh => I
Apply:  Pos: [360, 377] hh => I
Apply:  Pos: [408, 457] hh => I
Apply:  Pos: [424, 441] hh => I
Apply:  Pos: [472, 521] hh => I
Apply:  Pos: [488, 505] hh => I
Apply:  Pos: [552, 569] hh => I
Apply:  Pos: [600, 649] hh => I
Apply:  Pos: [616, 633] hh => I
Apply:  Pos: [680, 697] hh => I
Apply:  Pos: [728, 745] hh => I
Apply:  Pos: [794, 811] hh => I
Apply:  Pos: [860, 877] hh => I
Apply:  Pos: [892, 911] hh => I
Apply:  Pos: [926, 975] hh => I
Apply:  Pos: [942, 959] hh => I
Apply:  Pos: [1006, 1023] hh => I
---------------
Circuit after: xxhtttcccTcTTtccctttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchhtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchhtttcccTcTTtcccxxtttcccTcTTtcccxxtttcccTcTTtccchxxxhtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchhtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchxxhtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchhtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchhtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchhtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchhtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchhtttcccTcTTtccchxxhtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchhtttcccTcTTtccchxxhtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchxxtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchhtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchxx

--------End Timer [apply mapping plan]:  0.0019941329956054688

[5], [6], [2], [1], [3], [2], [3, 1], [2, 3], [1, 2], [3], [1, 3], [1], [3], [2], [2, 3], [1, 2], [3, 1], [6], [3], [2], [3, 6], [2, 3], [6, 2], [3], [6, 3], [6], [3], [2], [2, 3], [6, 2], [3, 6], [3], [5], [1], [3], [1, 5], [3, 1], [5, 3], [1], [5, 1], [5], [1], [3], [3, 1], [5, 3], [1, 5], [1], [0], [4], [1], [4, 0], [1, 4], [0, 1], [4], [0, 4], [0], [4], [1], [1, 4], [0, 1], [4, 0], [1], [5], [1], [3], [1, 5], [3, 1], [5, 3], [1], [5, 1], [5], [1], [3], [3, 1], [5, 3], [1, 5], [3], [6], [3], [2], [3, 6], [2, 3], [6, 2], [3], [6, 3], [6], [3], [2], [2, 3], [6, 2], [3, 6], [2], [3], [5], [1], [3], [1, 5], [3, 1], [5, 3], [1], [5, 1], [5], [1], [3], [3, 1], [5, 3], [1, 5], [1], [0], [4], [1], [4, 0], [1, 4], [0, 1], [4], [0, 4], [0], [4], [1], [1, 4], [0, 1], [4, 0], [1], [5], [1], [3], [1, 5], [3, 1], [5, 3], [1], [5, 1], [5], [1], [3], [3, 1], [5, 3], [1, 5], [3], [6], [2], [5], [6], [5, 2], [6, 5], [2, 6], [5], [2, 5], [2], [5], [6], [6, 5], [2, 6], [5, 2], [0], [4], [0], [4], [6], [4, 0], [6, 4], [0, 6], [4], [0, 4], [0], [4], [6], [6, 4], [0, 6], [4, 0], [1], [3], [1], [3], [6], [3, 1], [6, 3], [1, 6], [3], [1, 3], [1], [3], [6], [6, 3], [1, 6], [3, 1], [6], [0], [2], [4], [5], [6], [3], [5], [3, 6], [5, 3], [6, 5], [3], [6, 3], [6], [3], [5], [5, 3], [6, 5], [3, 6], [3], [4], [1], [3], [1, 4], [3, 1], [4, 3], [1], [4, 1], [4], [1], [3], [3, 1], [4, 3], [1, 4], [1], [0], [2], [1], [2, 0], [1, 2], [0, 1], [2], [0, 2], [0], [2], [1], [1, 2], [0, 1], [2, 0], [1], [4], [1], [3], [1, 4], [3, 1], [4, 3], [1], [4, 1], [4], [1], [3], [3, 1], [4, 3], [1, 4], [3], [6], [3], [5], [3, 6], [5, 3], [6, 5], [3], [6, 3], [6], [3], [5], [5, 3], [6, 5], [3, 6], [5], [3], [4], [1], [3], [1, 4], [3, 1], [4, 3], [1], [4, 1], [4], [1], [3], [3, 1], [4, 3], [1, 4], [1], [0], [2], [1], [2, 0], [1, 2], [0, 1], [2], [0, 2], [0], [2], [1], [1, 2], [0, 1], [2, 0], [1], [4], [1], [3], [1, 4], [3, 1], [4, 3], [1], [4, 1], [4], [1], [3], [3, 1], [4, 3], [1, 4], [3], [1], [3], [5], [6], [4], [5], [4, 6], [5, 4], [6, 5], [4], [6, 4], [6], [4], [5], [5, 4], [6, 5], [4, 6], [4], [3], [0], [4], [0, 3], [4, 0], [3, 4], [0], [3, 0], [3], [0], [4], [4, 0], [3, 4], [0, 3], [0], [1], [2], [0], [2, 1], [0, 2], [1, 0], [2], [1, 2], [1], [2], [0], [0, 2], [1, 0], [2, 1], [0], [3], [0], [4], [0, 3], [4, 0], [3, 4], [0], [3, 0], [3], [0], [4], [4, 0], [3, 4], [0, 3], [4], [6], [4], [5], [4, 6], [5, 4], [6, 5], [4], [6, 4], [6], [4], [5], [5, 4], [6, 5], [4, 6], [4], [3], [0], [4], [0, 3], [4, 0], [3, 4], [0], [3, 0], [3], [0], [4], [4, 0], [3, 4], [0, 3], [0], [1], [2], [0], [2, 1], [0, 2], [1, 0], [2], [1, 2], [1], [2], [0], [0, 2], [1, 0], [2, 1], [0], [3], [0], [4], [0, 3], [4, 0], [3, 4], [0], [3, 0], [3], [0], [4], [4, 0], [3, 4], [0, 3], [4], [4], [6], [5], [6, 4], [5, 6], [4, 5], [6], [4, 6], [4], [6], [5], [5, 6], [4, 5], [6, 4], [6], [3], [2], [6], [2, 3], [6, 2], [3, 6], [2], [3, 2], [3], [2], [6], [6, 2], [3, 6], [2, 3], [2], [0], [1], [2], [1, 0], [2, 1], [0, 2], [1], [0, 1], [0], [1], [2], [2, 1], [0, 2], [1, 0], [2], [3], [2], [6], [2, 3], [6, 2], [3, 6], [2], [3, 2], [3], [2], [6], [6, 2], [3, 6], [2, 3], [6], [4], [6], [5], [6, 4], [5, 6], [4, 5], [6], [4, 6], [4], [6], [5], [5, 6], [4, 5], [6, 4], [5], [6], [3], [2], [6], [2, 3], [6, 2], [3, 6], [2], [3, 2], [3], [2], [6], [6, 2], [3, 6], [2, 3], [2], [0], [1], [2], [1, 0], [2, 1], [0, 2], [1], [0, 1], [0], [1], [2], [2, 1], [0, 2], [1, 0], [2], [3], [2], [6], [2, 3], [6, 2], [3, 6], [2], [3, 2], [3], [2], [6], [6, 2], [3, 6], [2, 3], [6], [4], [6], [3], [4], [3, 6], [4, 3], [6, 4], [3], [6, 3], [6], [3], [4], [4, 3], [6, 4], [3, 6], [3], [5], [1], [3], [1, 5], [3, 1], [5, 3], [1], [5, 1], [5], [1], [3], [3, 1], [5, 3], [1, 5], [1], [0], [2], [1], [2, 0], [1, 2], [0, 1], [2], [0, 2], [0], [2], [1], [1, 2], [0, 1], [2, 0], [1], [5], [1], [3], [1, 5], [3, 1], [5, 3], [1], [5, 1], [5], [1], [3], [3, 1], [5, 3], [1, 5], [3], [6], [3], [4], [3, 6], [4, 3], [6, 4], [3], [6, 3], [6], [3], [4], [4, 3], [6, 4], [3, 6], [4], [3], [5], [1], [3], [1, 5], [3, 1], [5, 3], [1], [5, 1], [5], [1], [3], [3, 1], [5, 3], [1, 5], [1], [0], [2], [1], [2, 0], [1, 2], [0, 1], [2], [0, 2], [0], [2], [1], [1, 2], [0, 1], [2, 0], [1], [5], [1], [3], [1, 5], [3, 1], [5, 3], [1], [5, 1], [5], [1], [3], [3, 1], [5, 3], [1, 5], [3], [2], [6], [3], [2], [3, 6], [2, 3], [6, 2], [3], [6, 3], [6], [3], [2], [2, 3], [6, 2], [3, 6], [3], [4], [5], [3], [5, 4], [3, 5], [4, 3], [5], [4, 5], [4], [5], [3], [3, 5], [4, 3], [5, 4], [3], [6], [3], [2], [3, 6], [2, 3], [6, 2], [3], [6, 3], [6], [3], [2], [2, 3], [6, 2], [3, 6], [2], [3], [4], [5], [3], [5, 4], [3, 5], [4, 3], [5], [4, 5], [4], [5], [3], [3, 5], [4, 3], [5, 4], [3], [0], [6], [4], [6], [3], [4], [3, 6], [4, 3], [6, 4], [3], [6, 3], [6], [3], [4], [4, 3], [6, 4], [3, 6], [3], [0], [5], [3], [5, 0], [3, 5], [0, 3], [5], [0, 5], [0], [5], [3], [3, 5], [0, 3], [5, 0], [3], [6], [3], [4], [3, 6], [4, 3], [6, 4], [3], [6, 3], [6], [3], [4], [4, 3], [6, 4], [3, 6], [4], [3], [0], [5], [3], [5, 0], [3, 5], [0, 3], [5], [0, 5], [0], [5], [3], [3, 5], [0, 3], [5, 0], [3], [1], [3], [2], [4], [6], [2], [6, 4], [2, 6], [4, 2], [6], [4, 6], [4], [6], [2], [2, 6], [4, 2], [6, 4], [6], [1], [3], [6], [3, 1], [6, 3], [1, 6], [3], [1, 3], [1], [3], [6], [6, 3], [1, 6], [3, 1], [6], [4], [6], [2], [6, 4], [2, 6], [4, 2], [6], [4, 6], [4], [6], [2], [2, 6], [4, 2], [6, 4], [6], [1], [3], [6], [3, 1], [6, 3], [1, 6], [3], [1, 3], [1], [3], [6], [6, 3], [1, 6], [3, 1], [6], [1], [3], [6], [5], [2], [5, 6], [2, 5], [6, 2], [5], [6, 5], [6], [5], [2], [2, 5], [6, 2], [5, 6], [5], [4], [0], [5], [0, 4], [5, 0], [4, 5], [0], [4, 0], [4], [0], [5], [5, 0], [4, 5], [0, 4], [0], [1], [3], [0], [3, 1], [0, 3], [1, 0], [3], [1, 3], [1], [3], [0], [0, 3], [1, 0], [3, 1], [0], [4], [0], [5], [0, 4], [5, 0], [4, 5], [0], [4, 0], [4], [0], [5], [5, 0], [4, 5], [0, 4], [5], [6], [5], [2], [5, 6], [2, 5], [6, 2], [5], [6, 5], [6], [5], [2], [2, 5], [6, 2], [5, 6], [2], [5], [4], [0], [5], [0, 4], [5, 0], [4, 5], [0], [4, 0], [4], [0], [5], [5, 0], [4, 5], [0, 4], [0], [1], [3], [0], [3, 1], [0, 3], [1, 0], [3], [1, 3], [1], [3], [0], [0, 3], [1, 0], [3, 1], [0], [4], [0], [5], [0, 4], [5, 0], [4, 5], [0], [4, 0], [4], [0], [5], [5, 0], [4, 5], [0, 4], [5], [2], [5], ----End Timer [Execute Mapping]:  2.269836664199829

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 

[264, 313]

------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.1143276691436768

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [264, 313] hh => I]

Plan: 1
[Pos: [264, 313] hh => I]
Change: 1, Saving: 1

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.0029985904693603516

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [264, 313] hh => I]
Change: 1, Saving: 1

Circuit before: xxhtttcccTcTTtccctttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchhtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchhtttcccTcTTtcccxxtttcccTcTTtcccxxtttcccTcTTtccchxxxhtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchhtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchxxhtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchhtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchhtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchhtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchhtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchhtttcccTcTTtccchxxhtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchhtttcccTcTTtccchxxhtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchxxtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchhtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchxx
---------------
Apply:  Pos: [264, 313] hh => I
---------------
Circuit after: xxhtttcccTcTTtccctttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchhtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchhtttcccTcTTtcccxxtttcccTcTTtcccxxtttcccTcTTtccchxxxhtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchxxtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchhtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchhtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchhtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchhtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchhtttcccTcTTtccchxxhtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchhtttcccTcTTtccchxxhtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchxxtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchhtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchxx

--------End Timer [apply mapping plan]:  0.00099945068359375

[5], [6], [2], [1], [3], [2], [3, 1], [2, 3], [1, 2], [3], [1, 3], [1], [3], [2], [2, 3], [1, 2], [3, 1], [6], [3], [2], [3, 6], [2, 3], [6, 2], [3], [6, 3], [6], [3], [2], [2, 3], [6, 2], [3, 6], [3], [5], [1], [3], [1, 5], [3, 1], [5, 3], [1], [5, 1], [5], [1], [3], [3, 1], [5, 3], [1, 5], [1], [0], [4], [1], [4, 0], [1, 4], [0, 1], [4], [0, 4], [0], [4], [1], [1, 4], [0, 1], [4, 0], [1], [5], [1], [3], [1, 5], [3, 1], [5, 3], [1], [5, 1], [5], [1], [3], [3, 1], [5, 3], [1, 5], [3], [6], [3], [2], [3, 6], [2, 3], [6, 2], [3], [6, 3], [6], [3], [2], [2, 3], [6, 2], [3, 6], [2], [3], [5], [1], [3], [1, 5], [3, 1], [5, 3], [1], [5, 1], [5], [1], [3], [3, 1], [5, 3], [1, 5], [1], [0], [4], [1], [4, 0], [1, 4], [0, 1], [4], [0, 4], [0], [4], [1], [1, 4], [0, 1], [4, 0], [1], [5], [1], [3], [1, 5], [3, 1], [5, 3], [1], [5, 1], [5], [1], [3], [3, 1], [5, 3], [1, 5], [3], [6], [2], [5], [6], [5, 2], [6, 5], [2, 6], [5], [2, 5], [2], [5], [6], [6, 5], [2, 6], [5, 2], [0], [4], [0], [4], [6], [4, 0], [6, 4], [0, 6], [4], [0, 4], [0], [4], [6], [6, 4], [0, 6], [4, 0], [1], [3], [1], [3], [6], [3, 1], [6, 3], [1, 6], [3], [1, 3], [1], [3], [6], [6, 3], [1, 6], [3, 1], [6], [0], [2], [4], [5], [6], [3], [5], [3, 6], [5, 3], [6, 5], [3], [6, 3], [6], [3], [5], [5, 3], [6, 5], [3, 6], [3], [4], [1], [3], [1, 4], [3, 1], [4, 3], [1], [4, 1], [4], [1], [3], [3, 1], [4, 3], [1, 4], [1], [0], [2], [1], [2, 0], [1, 2], [0, 1], [2], [0, 2], [0], [2], [1], [1, 2], [0, 1], [2, 0], [1], [4], [1], [3], [1, 4], [3, 1], [4, 3], [1], [4, 1], [4], [1], [3], [3, 1], [4, 3], [1, 4], [3], [6], [3], [5], [3, 6], [5, 3], [6, 5], [3], [6, 3], [6], [3], [5], [5, 3], [6, 5], [3, 6], [3], [4], [1], [3], [1, 4], [3, 1], [4, 3], [1], [4, 1], [4], [1], [3], [3, 1], [4, 3], [1, 4], [1], [0], [2], [1], [2, 0], [1, 2], [0, 1], [2], [0, 2], [0], [2], [1], [1, 2], [0, 1], [2, 0], [1], [4], [1], [3], [1, 4], [3, 1], [4, 3], [1], [4, 1], [4], [1], [3], [3, 1], [4, 3], [1, 4], [3], [1], [3], [6], [4], [5], [4, 6], [5, 4], [6, 5], [4], [6, 4], [6], [4], [5], [5, 4], [6, 5], [4, 6], [4], [3], [0], [4], [0, 3], [4, 0], [3, 4], [0], [3, 0], [3], [0], [4], [4, 0], [3, 4], [0, 3], [0], [1], [2], [0], [2, 1], [0, 2], [1, 0], [2], [1, 2], [1], [2], [0], [0, 2], [1, 0], [2, 1], [0], [3], [0], [4], [0, 3], [4, 0], [3, 4], [0], [3, 0], [3], [0], [4], [4, 0], [3, 4], [0, 3], [4], [6], [4], [5], [4, 6], [5, 4], [6, 5], [4], [6, 4], [6], [4], [5], [5, 4], [6, 5], [4, 6], [4], [3], [0], [4], [0, 3], [4, 0], [3, 4], [0], [3, 0], [3], [0], [4], [4, 0], [3, 4], [0, 3], [0], [1], [2], [0], [2, 1], [0, 2], [1, 0], [2], [1, 2], [1], [2], [0], [0, 2], [1, 0], [2, 1], [0], [3], [0], [4], [0, 3], [4, 0], [3, 4], [0], [3, 0], [3], [0], [4], [4, 0], [3, 4], [0, 3], [4], [4], [6], [5], [6, 4], [5, 6], [4, 5], [6], [4, 6], [4], [6], [5], [5, 6], [4, 5], [6, 4], [6], [3], [2], [6], [2, 3], [6, 2], [3, 6], [2], [3, 2], [3], [2], [6], [6, 2], [3, 6], [2, 3], [2], [0], [1], [2], [1, 0], [2, 1], [0, 2], [1], [0, 1], [0], [1], [2], [2, 1], [0, 2], [1, 0], [2], [3], [2], [6], [2, 3], [6, 2], [3, 6], [2], [3, 2], [3], [2], [6], [6, 2], [3, 6], [2, 3], [6], [4], [6], [5], [6, 4], [5, 6], [4, 5], [6], [4, 6], [4], [6], [5], [5, 6], [4, 5], [6, 4], [5], [6], [3], [2], [6], [2, 3], [6, 2], [3, 6], [2], [3, 2], [3], [2], [6], [6, 2], [3, 6], [2, 3], [2], [0], [1], [2], [1, 0], [2, 1], [0, 2], [1], [0, 1], [0], [1], [2], [2, 1], [0, 2], [1, 0], [2], [3], [2], [6], [2, 3], [6, 2], [3, 6], [2], [3, 2], [3], [2], [6], [6, 2], [3, 6], [2, 3], [6], [4], [6], [3], [4], [3, 6], [4, 3], [6, 4], [3], [6, 3], [6], [3], [4], [4, 3], [6, 4], [3, 6], [3], [5], [1], [3], [1, 5], [3, 1], [5, 3], [1], [5, 1], [5], [1], [3], [3, 1], [5, 3], [1, 5], [1], [0], [2], [1], [2, 0], [1, 2], [0, 1], [2], [0, 2], [0], [2], [1], [1, 2], [0, 1], [2, 0], [1], [5], [1], [3], [1, 5], [3, 1], [5, 3], [1], [5, 1], [5], [1], [3], [3, 1], [5, 3], [1, 5], [3], [6], [3], [4], [3, 6], [4, 3], [6, 4], [3], [6, 3], [6], [3], [4], [4, 3], [6, 4], [3, 6], [4], [3], [5], [1], [3], [1, 5], [3, 1], [5, 3], [1], [5, 1], [5], [1], [3], [3, 1], [5, 3], [1, 5], [1], [0], [2], [1], [2, 0], [1, 2], [0, 1], [2], [0, 2], [0], [2], [1], [1, 2], [0, 1], [2, 0], [1], [5], [1], [3], [1, 5], [3, 1], [5, 3], [1], [5, 1], [5], [1], [3], [3, 1], [5, 3], [1, 5], [3], [2], [6], [3], [2], [3, 6], [2, 3], [6, 2], [3], [6, 3], [6], [3], [2], [2, 3], [6, 2], [3, 6], [3], [4], [5], [3], [5, 4], [3, 5], [4, 3], [5], [4, 5], [4], [5], [3], [3, 5], [4, 3], [5, 4], [3], [6], [3], [2], [3, 6], [2, 3], [6, 2], [3], [6, 3], [6], [3], [2], [2, 3], [6, 2], [3, 6], [2], [3], [4], [5], [3], [5, 4], [3, 5], [4, 3], [5], [4, 5], [4], [5], [3], [3, 5], [4, 3], [5, 4], [3], [0], [6], [4], [6], [3], [4], [3, 6], [4, 3], [6, 4], [3], [6, 3], [6], [3], [4], [4, 3], [6, 4], [3, 6], [3], [0], [5], [3], [5, 0], [3, 5], [0, 3], [5], [0, 5], [0], [5], [3], [3, 5], [0, 3], [5, 0], [3], [6], [3], [4], [3, 6], [4, 3], [6, 4], [3], [6, 3], [6], [3], [4], [4, 3], [6, 4], [3, 6], [4], [3], [0], [5], [3], [5, 0], [3, 5], [0, 3], [5], [0, 5], [0], [5], [3], [3, 5], [0, 3], [5, 0], [3], [1], [3], [2], [4], [6], [2], [6, 4], [2, 6], [4, 2], [6], [4, 6], [4], [6], [2], [2, 6], [4, 2], [6, 4], [6], [1], [3], [6], [3, 1], [6, 3], [1, 6], [3], [1, 3], [1], [3], [6], [6, 3], [1, 6], [3, 1], [6], [4], [6], [2], [6, 4], [2, 6], [4, 2], [6], [4, 6], [4], [6], [2], [2, 6], [4, 2], [6, 4], [6], [1], [3], [6], [3, 1], [6, 3], [1, 6], [3], [1, 3], [1], [3], [6], [6, 3], [1, 6], [3, 1], [6], [1], [3], [6], [5], [2], [5, 6], [2, 5], [6, 2], [5], [6, 5], [6], [5], [2], [2, 5], [6, 2], [5, 6], [5], [4], [0], [5], [0, 4], [5, 0], [4, 5], [0], [4, 0], [4], [0], [5], [5, 0], [4, 5], [0, 4], [0], [1], [3], [0], [3, 1], [0, 3], [1, 0], [3], [1, 3], [1], [3], [0], [0, 3], [1, 0], [3, 1], [0], [4], [0], [5], [0, 4], [5, 0], [4, 5], [0], [4, 0], [4], [0], [5], [5, 0], [4, 5], [0, 4], [5], [6], [5], [2], [5, 6], [2, 5], [6, 2], [5], [6, 5], [6], [5], [2], [2, 5], [6, 2], [5, 6], [2], [5], [4], [0], [5], [0, 4], [5, 0], [4, 5], [0], [4, 0], [4], [0], [5], [5, 0], [4, 5], [0, 4], [0], [1], [3], [0], [3, 1], [0, 3], [1, 0], [3], [1, 3], [1], [3], [0], [0, 3], [1, 0], [3, 1], [0], [4], [0], [5], [0, 4], [5, 0], [4, 5], [0], [4, 0], [4], [0], [5], [5, 0], [4, 5], [0, 4], [5], [2], [5], ----End Timer [Execute Mapping]:  2.118325710296631

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.1122288703918457

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

..........

Total Plans: 0

--------End Timer [Generate Plans]:  0.0

There's no mapping plan.
[5], [6], [2], [1], [3], [2], [3, 1], [2, 3], [1, 2], [3], [1, 3], [1], [3], [2], [2, 3], [1, 2], [3, 1], [6], [3], [2], [3, 6], [2, 3], [6, 2], [3], [6, 3], [6], [3], [2], [2, 3], [6, 2], [3, 6], [3], [5], [1], [3], [1, 5], [3, 1], [5, 3], [1], [5, 1], [5], [1], [3], [3, 1], [5, 3], [1, 5], [1], [0], [4], [1], [4, 0], [1, 4], [0, 1], [4], [0, 4], [0], [4], [1], [1, 4], [0, 1], [4, 0], [1], [5], [1], [3], [1, 5], [3, 1], [5, 3], [1], [5, 1], [5], [1], [3], [3, 1], [5, 3], [1, 5], [3], [6], [3], [2], [3, 6], [2, 3], [6, 2], [3], [6, 3], [6], [3], [2], [2, 3], [6, 2], [3, 6], [2], [3], [5], [1], [3], [1, 5], [3, 1], [5, 3], [1], [5, 1], [5], [1], [3], [3, 1], [5, 3], [1, 5], [1], [0], [4], [1], [4, 0], [1, 4], [0, 1], [4], [0, 4], [0], [4], [1], [1, 4], [0, 1], [4, 0], [1], [5], [1], [3], [1, 5], [3, 1], [5, 3], [1], [5, 1], [5], [1], [3], [3, 1], [5, 3], [1, 5], [3], [6], [2], [5], [6], [5, 2], [6, 5], [2, 6], [5], [2, 5], [2], [5], [6], [6, 5], [2, 6], [5, 2], [0], [4], [0], [4], [6], [4, 0], [6, 4], [0, 6], [4], [0, 4], [0], [4], [6], [6, 4], [0, 6], [4, 0], [1], [3], [1], [3], [6], [3, 1], [6, 3], [1, 6], [3], [1, 3], [1], [3], [6], [6, 3], [1, 6], [3, 1], [6], [0], [2], [4], [5], [6], [3], [5], [3, 6], [5, 3], [6, 5], [3], [6, 3], [6], [3], [5], [5, 3], [6, 5], [3, 6], [3], [4], [1], [3], [1, 4], [3, 1], [4, 3], [1], [4, 1], [4], [1], [3], [3, 1], [4, 3], [1, 4], [1], [0], [2], [1], [2, 0], [1, 2], [0, 1], [2], [0, 2], [0], [2], [1], [1, 2], [0, 1], [2, 0], [1], [4], [1], [3], [1, 4], [3, 1], [4, 3], [1], [4, 1], [4], [1], [3], [3, 1], [4, 3], [1, 4], [3], [6], [3], [5], [3, 6], [5, 3], [6, 5], [3], [6, 3], [6], [3], [5], [5, 3], [6, 5], [3, 6], [3], [4], [1], [3], [1, 4], [3, 1], [4, 3], [1], [4, 1], [4], [1], [3], [3, 1], [4, 3], [1, 4], [1], [0], [2], [1], [2, 0], [1, 2], [0, 1], [2], [0, 2], [0], [2], [1], [1, 2], [0, 1], [2, 0], [1], [4], [1], [3], [1, 4], [3, 1], [4, 3], [1], [4, 1], [4], [1], [3], [3, 1], [4, 3], [1, 4], [3], [1], [3], [6], [4], [5], [4, 6], [5, 4], [6, 5], [4], [6, 4], [6], [4], [5], [5, 4], [6, 5], [4, 6], [4], [3], [0], [4], [0, 3], [4, 0], [3, 4], [0], [3, 0], [3], [0], [4], [4, 0], [3, 4], [0, 3], [0], [1], [2], [0], [2, 1], [0, 2], [1, 0], [2], [1, 2], [1], [2], [0], [0, 2], [1, 0], [2, 1], [0], [3], [0], [4], [0, 3], [4, 0], [3, 4], [0], [3, 0], [3], [0], [4], [4, 0], [3, 4], [0, 3], [4], [6], [4], [5], [4, 6], [5, 4], [6, 5], [4], [6, 4], [6], [4], [5], [5, 4], [6, 5], [4, 6], [4], [3], [0], [4], [0, 3], [4, 0], [3, 4], [0], [3, 0], [3], [0], [4], [4, 0], [3, 4], [0, 3], [0], [1], [2], [0], [2, 1], [0, 2], [1, 0], [2], [1, 2], [1], [2], [0], [0, 2], [1, 0], [2, 1], [0], [3], [0], [4], [0, 3], [4, 0], [3, 4], [0], [3, 0], [3], [0], [4], [4, 0], [3, 4], [0, 3], [4], [4], [6], [5], [6, 4], [5, 6], [4, 5], [6], [4, 6], [4], [6], [5], [5, 6], [4, 5], [6, 4], [6], [3], [2], [6], [2, 3], [6, 2], [3, 6], [2], [3, 2], [3], [2], [6], [6, 2], [3, 6], [2, 3], [2], [0], [1], [2], [1, 0], [2, 1], [0, 2], [1], [0, 1], [0], [1], [2], [2, 1], [0, 2], [1, 0], [2], [3], [2], [6], [2, 3], [6, 2], [3, 6], [2], [3, 2], [3], [2], [6], [6, 2], [3, 6], [2, 3], [6], [4], [6], [5], [6, 4], [5, 6], [4, 5], [6], [4, 6], [4], [6], [5], [5, 6], [4, 5], [6, 4], [5], [6], [3], [2], [6], [2, 3], [6, 2], [3, 6], [2], [3, 2], [3], [2], [6], [6, 2], [3, 6], [2, 3], [2], [0], [1], [2], [1, 0], [2, 1], [0, 2], [1], [0, 1], [0], [1], [2], [2, 1], [0, 2], [1, 0], [2], [3], [2], [6], [2, 3], [6, 2], [3, 6], [2], [3, 2], [3], [2], [6], [6, 2], [3, 6], [2, 3], [6], [4], [6], [3], [4], [3, 6], [4, 3], [6, 4], [3], [6, 3], [6], [3], [4], [4, 3], [6, 4], [3, 6], [3], [5], [1], [3], [1, 5], [3, 1], [5, 3], [1], [5, 1], [5], [1], [3], [3, 1], [5, 3], [1, 5], [1], [0], [2], [1], [2, 0], [1, 2], [0, 1], [2], [0, 2], [0], [2], [1], [1, 2], [0, 1], [2, 0], [1], [5], [1], [3], [1, 5], [3, 1], [5, 3], [1], [5, 1], [5], [1], [3], [3, 1], [5, 3], [1, 5], [3], [6], [3], [4], [3, 6], [4, 3], [6, 4], [3], [6, 3], [6], [3], [4], [4, 3], [6, 4], [3, 6], [4], [3], [5], [1], [3], [1, 5], [3, 1], [5, 3], [1], [5, 1], [5], [1], [3], [3, 1], [5, 3], [1, 5], [1], [0], [2], [1], [2, 0], [1, 2], [0, 1], [2], [0, 2], [0], [2], [1], [1, 2], [0, 1], [2, 0], [1], [5], [1], [3], [1, 5], [3, 1], [5, 3], [1], [5, 1], [5], [1], [3], [3, 1], [5, 3], [1, 5], [3], [2], [6], [3], [2], [3, 6], [2, 3], [6, 2], [3], [6, 3], [6], [3], [2], [2, 3], [6, 2], [3, 6], [3], [4], [5], [3], [5, 4], [3, 5], [4, 3], [5], [4, 5], [4], [5], [3], [3, 5], [4, 3], [5, 4], [3], [6], [3], [2], [3, 6], [2, 3], [6, 2], [3], [6, 3], [6], [3], [2], [2, 3], [6, 2], [3, 6], [2], [3], [4], [5], [3], [5, 4], [3, 5], [4, 3], [5], [4, 5], [4], [5], [3], [3, 5], [4, 3], [5, 4], [3], [0], [6], [4], [6], [3], [4], [3, 6], [4, 3], [6, 4], [3], [6, 3], [6], [3], [4], [4, 3], [6, 4], [3, 6], [3], [0], [5], [3], [5, 0], [3, 5], [0, 3], [5], [0, 5], [0], [5], [3], [3, 5], [0, 3], [5, 0], [3], [6], [3], [4], [3, 6], [4, 3], [6, 4], [3], [6, 3], [6], [3], [4], [4, 3], [6, 4], [3, 6], [4], [3], [0], [5], [3], [5, 0], [3, 5], [0, 3], [5], [0, 5], [0], [5], [3], [3, 5], [0, 3], [5, 0], [3], [1], [3], [2], [4], [6], [2], [6, 4], [2, 6], [4, 2], [6], [4, 6], [4], [6], [2], [2, 6], [4, 2], [6, 4], [6], [1], [3], [6], [3, 1], [6, 3], [1, 6], [3], [1, 3], [1], [3], [6], [6, 3], [1, 6], [3, 1], [6], [4], [6], [2], [6, 4], [2, 6], [4, 2], [6], [4, 6], [4], [6], [2], [2, 6], [4, 2], [6, 4], [6], [1], [3], [6], [3, 1], [6, 3], [1, 6], [3], [1, 3], [1], [3], [6], [6, 3], [1, 6], [3, 1], [6], [1], [3], [6], [5], [2], [5, 6], [2, 5], [6, 2], [5], [6, 5], [6], [5], [2], [2, 5], [6, 2], [5, 6], [5], [4], [0], [5], [0, 4], [5, 0], [4, 5], [0], [4, 0], [4], [0], [5], [5, 0], [4, 5], [0, 4], [0], [1], [3], [0], [3, 1], [0, 3], [1, 0], [3], [1, 3], [1], [3], [0], [0, 3], [1, 0], [3, 1], [0], [4], [0], [5], [0, 4], [5, 0], [4, 5], [0], [4, 0], [4], [0], [5], [5, 0], [4, 5], [0, 4], [5], [6], [5], [2], [5, 6], [2, 5], [6, 2], [5], [6, 5], [6], [5], [2], [2, 5], [6, 2], [5, 6], [2], [5], [4], [0], [5], [0, 4], [5, 0], [4, 5], [0], [4, 0], [4], [0], [5], [5, 0], [4, 5], [0, 4], [0], [1], [3], [0], [3, 1], [0, 3], [1, 0], [3], [1, 3], [1], [3], [0], [0, 3], [1, 0], [3, 1], [0], [4], [0], [5], [0, 4], [5, 0], [4, 5], [0], [4, 0], [4], [0], [5], [5, 0], [4, 5], [0, 4], [5], [2], [5], ----End Timer [Execute Mapping]:  2.1132287979125977

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: x-x-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-x-x-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-x-x-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-x-x-x-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-x-x-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-x-x-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-x-x-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-x-x-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-x-x 
     => total size: [1043] (IBM)
 --------------------
 - qubits_num: 7, using gates: [t,tdg,h,cx,x]
 - circuit depth: 569 - (medium)
 - circuit cycle: 1491


>> Solved circuit: 
Circuit Info: 
 - circuit: x-x-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-x-x-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-x-x-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-x-x-x-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-x-x-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-x-x-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-x-x-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-x-x-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-x-x 
     => total size: [989] (U)
 --------------------
 - qubits_num: 7, using gates: [t,tdg,h,cx,x]
 - circuit depth: 565 - (medium)
 - circuit cycle: 1437

Reduced: 
 - size: 54 (5.18%)
 - depth: 4 (0.70%)

