----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.001996755599975586

[7], [0], [1], [7], [1, 0], [7, 1], [0, 7], [1], [0, 1], [0], [1], [7], [7, 1], [0, 7], [1, 0], [7], [0, 1], [8], [2], [7], [8], [7, 2], [8, 7], [2, 8], [7], [2, 7], [2], [7], [8], [8, 7], [2, 8], [7, 2], [8], [7], [1], [2], [7], [2, 1], [7, 2], [1, 7], [2], [1, 2], [1], [2], [7], [7, 2], [1, 7], [2, 1], [7], [1, 2], [9], [3], [8], [9], [8, 3], [9, 8], [3, 9], [8], [3, 8], [3], [8], [9], [9, 8], [3, 9], [8, 3], [9], [8], [3], [7], [8], [7, 3], [8, 7], [3, 8], [7], [3, 7], [3], [7], [8], [8, 7], [3, 8], [7, 3], [8], [7], [2], [3], [7], [3, 2], [7, 3], [2, 7], [3], [2, 3], [2], [3], [7], [7, 3], [2, 7], [3, 2], [7], [2, 3], [9], [4], [8], [9], [8, 4], [9, 8], [4, 9], [8], [4, 8], [4], [8], [9], [9, 8], [4, 9], [8, 4], [9], [8], [4], [7], [8], [7, 4], [8, 7], [4, 8], [7], [4, 7], [4], [7], [8], [8, 7], [4, 8], [7, 4], [8], [7], [3], [4], [7], [4, 3], [7, 4], [3, 7], [4], [3, 4], [3], [4], [7], [7, 4], [3, 7], [4, 3], [7], [3, 4], [9], [5], [8], [9], [8, 5], [9, 8], [5, 9], [8], [5, 8], [5], [8], [9], [9, 8], [5, 9], [8, 5], [9], [8], [5], [7], [8], [7, 5], [8, 7], [5, 8], [7], [5, 7], [5], [7], [8], [8, 7], [5, 8], [7, 5], [8], [7], [4], [5], [7], [5, 4], [7, 5], [4, 7], [5], [4, 5], [4], [5], [7], [7, 5], [4, 7], [5, 4], [7], [4, 5], [9], [6], [8], [9], [8, 6], [9, 8], [6, 9], [8], [6, 8], [6], [8], [9], [9, 8], [6, 9], [8, 6], [9], [7], [5], [6], [7], [6, 5], [7, 6], [5, 7], [6], [5, 6], [5], [6], [7], [7, 6], [5, 7], [6, 5], [7], [5, 6], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]
--------End Timer [Find Candidates]:  0.0

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

..........

Total Plans: 0

--------End Timer [Generate Plans]:  0.0

There's no mapping plan.
[7], [0], [1], [7], [1, 0], [7, 1], [0, 7], [1], [0, 1], [0], [1], [7], [7, 1], [0, 7], [1, 0], [7], [0, 1], [8], [2], [7], [8], [7, 2], [8, 7], [2, 8], [7], [2, 7], [2], [7], [8], [8, 7], [2, 8], [7, 2], [8], [7], [1], [2], [7], [2, 1], [7, 2], [1, 7], [2], [1, 2], [1], [2], [7], [7, 2], [1, 7], [2, 1], [7], [1, 2], [9], [3], [8], [9], [8, 3], [9, 8], [3, 9], [8], [3, 8], [3], [8], [9], [9, 8], [3, 9], [8, 3], [9], [8], [3], [7], [8], [7, 3], [8, 7], [3, 8], [7], [3, 7], [3], [7], [8], [8, 7], [3, 8], [7, 3], [8], [7], [2], [3], [7], [3, 2], [7, 3], [2, 7], [3], [2, 3], [2], [3], [7], [7, 3], [2, 7], [3, 2], [7], [2, 3], [9], [4], [8], [9], [8, 4], [9, 8], [4, 9], [8], [4, 8], [4], [8], [9], [9, 8], [4, 9], [8, 4], [9], [8], [4], [7], [8], [7, 4], [8, 7], [4, 8], [7], [4, 7], [4], [7], [8], [8, 7], [4, 8], [7, 4], [8], [7], [3], [4], [7], [4, 3], [7, 4], [3, 7], [4], [3, 4], [3], [4], [7], [7, 4], [3, 7], [4, 3], [7], [3, 4], [9], [5], [8], [9], [8, 5], [9, 8], [5, 9], [8], [5, 8], [5], [8], [9], [9, 8], [5, 9], [8, 5], [9], [8], [5], [7], [8], [7, 5], [8, 7], [5, 8], [7], [5, 7], [5], [7], [8], [8, 7], [5, 8], [7, 5], [8], [7], [4], [5], [7], [5, 4], [7, 5], [4, 7], [5], [4, 5], [4], [5], [7], [7, 5], [4, 7], [5, 4], [7], [4, 5], [9], [6], [8], [9], [8, 6], [9, 8], [6, 9], [8], [6, 8], [6], [8], [9], [9, 8], [6, 9], [8, 6], [9], [7], [5], [6], [7], [6, 5], [7, 6], [5, 7], [6], [5, 6], [5], [6], [7], [7, 6], [5, 7], [6, 5], [7], [5, 6], ----End Timer [Execute Mapping]:  0.0

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-cx 
     => total size: [230] (IBM)
 --------------------
 - qubits_num: 10, using gates: [cx,tdg,h,t]
 - circuit depth: 92 - (small)
 - circuit cycle: 334


>> Solved circuit: 
Circuit Info: 
 - circuit: h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-cx 
     => total size: [230] (U)
 --------------------
 - qubits_num: 10, using gates: [cx,tdg,h,t]
 - circuit depth: 92 - (small)
 - circuit cycle: 334

Reduced: 
 - size: 0 (0.00%)
 - depth: 0 (0.00%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.10056018829345703

[7], [0], [1], [7], [1, 0], [7, 1], [0, 7], [1], [0, 1], [0], [1], [7], [7, 1], [0, 7], [1, 0], [7], [0, 1], [8], [2], [7], [8], [7, 2], [8, 7], [2, 8], [7], [2, 7], [2], [7], [8], [8, 7], [2, 8], [7, 2], [8], [7], [1], [2], [7], [2, 1], [7, 2], [1, 7], [2], [1, 2], [1], [2], [7], [7, 2], [1, 7], [2, 1], [7], [1, 2], [9], [3], [8], [9], [8, 3], [9, 8], [3, 9], [8], [3, 8], [3], [8], [9], [9, 8], [3, 9], [8, 3], [9], [8], [3], [7], [8], [7, 3], [8, 7], [3, 8], [7], [3, 7], [3], [7], [8], [8, 7], [3, 8], [7, 3], [8], [7], [2], [3], [7], [3, 2], [7, 3], [2, 7], [3], [2, 3], [2], [3], [7], [7, 3], [2, 7], [3, 2], [7], [2, 3], [9], [4], [8], [9], [8, 4], [9, 8], [4, 9], [8], [4, 8], [4], [8], [9], [9, 8], [4, 9], [8, 4], [9], [8], [4], [7], [8], [7, 4], [8, 7], [4, 8], [7], [4, 7], [4], [7], [8], [8, 7], [4, 8], [7, 4], [8], [7], [3], [4], [7], [4, 3], [7, 4], [3, 7], [4], [3, 4], [3], [4], [7], [7, 4], [3, 7], [4, 3], [7], [3, 4], [9], [5], [8], [9], [8, 5], [9, 8], [5, 9], [8], [5, 8], [5], [8], [9], [9, 8], [5, 9], [8, 5], [9], [8], [5], [7], [8], [7, 5], [8, 7], [5, 8], [7], [5, 7], [5], [7], [8], [8, 7], [5, 8], [7, 5], [8], [7], [4], [5], [7], [5, 4], [7, 5], [4, 7], [5], [4, 5], [4], [5], [7], [7, 5], [4, 7], [5, 4], [7], [4, 5], [9], [6], [8], [9], [8, 6], [9, 8], [6, 9], [8], [6, 8], [6], [8], [9], [9, 8], [6, 9], [8, 6], [9], [7], [5], [6], [7], [6, 5], [7, 6], [5, 7], [6], [5, 6], [5], [6], [7], [7, 6], [5, 7], [6, 5], [7], [5, 6], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 

[65, 99]
[114, 148]
[163, 197]
[195, 213]

------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  0.4757108688354492

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [65, 99] hh => I, Pos: [114, 148] hh => I, Pos: [163, 197] hh => I, Pos: [195, 213] hh => I]

Plan: 1
[Pos: [65, 99] hh => I,
 Pos: [114, 148] hh => I,
 Pos: [163, 197] hh => I,
 Pos: [195, 213] hh => I]
Change: 4, Saving: 4

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.009980440139770508

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [65, 99] hh => I,
 Pos: [114, 148] hh => I,
 Pos: [163, 197] hh => I,
 Pos: [195, 213] hh => I]
Change: 4, Saving: 4

Circuit before: htttcccTcTTtccchchtttcccTcTTtccchhtttcccTcTTtccchchtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchchtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchchtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchchtttcccTcTTtccchhtttcccTcTTtccchc
---------------
Apply:  Pos: [65, 99] hh => I
Apply:  Pos: [114, 148] hh => I
Apply:  Pos: [163, 197] hh => I
Apply:  Pos: [195, 213] hh => I
---------------
Circuit after: htttcccTcTTtccchchtttcccTcTTtccchhtttcccTcTTtccchchtttcccTcTTtccchtttcccTcTTtccchhtttcccTcTTtccchctttcccTcTTtccchtttcccTcTTtccchhtttcccTcTTtccchctttcccTcTTtccchtttcccTcTTtccchhtttcccTcTTtcccctttcccTcTTtccchtttcccTcTTtccchc

--------End Timer [apply mapping plan]:  0.0

[7], [0], [1], [7], [1, 0], [7, 1], [0, 7], [1], [0, 1], [0], [1], [7], [7, 1], [0, 7], [1, 0], [7], [0, 1], [8], [2], [7], [8], [7, 2], [8, 7], [2, 8], [7], [2, 7], [2], [7], [8], [8, 7], [2, 8], [7, 2], [8], [7], [1], [2], [7], [2, 1], [7, 2], [1, 7], [2], [1, 2], [1], [2], [7], [7, 2], [1, 7], [2, 1], [7], [1, 2], [9], [3], [8], [9], [8, 3], [9, 8], [3, 9], [8], [3, 8], [3], [8], [9], [9, 8], [3, 9], [8, 3], [8], [3], [7], [8], [7, 3], [8, 7], [3, 8], [7], [3, 7], [3], [7], [8], [8, 7], [3, 8], [7, 3], [8], [7], [2], [3], [7], [3, 2], [7, 3], [2, 7], [3], [2, 3], [2], [3], [7], [7, 3], [2, 7], [3, 2], [7], [2, 3], [4], [8], [9], [8, 4], [9, 8], [4, 9], [8], [4, 8], [4], [8], [9], [9, 8], [4, 9], [8, 4], [8], [4], [7], [8], [7, 4], [8, 7], [4, 8], [7], [4, 7], [4], [7], [8], [8, 7], [4, 8], [7, 4], [8], [7], [3], [4], [7], [4, 3], [7, 4], [3, 7], [4], [3, 4], [3], [4], [7], [7, 4], [3, 7], [4, 3], [7], [3, 4], [5], [8], [9], [8, 5], [9, 8], [5, 9], [8], [5, 8], [5], [8], [9], [9, 8], [5, 9], [8, 5], [8], [5], [7], [8], [7, 5], [8, 7], [5, 8], [7], [5, 7], [5], [7], [8], [8, 7], [5, 8], [7, 5], [8], [7], [4], [5], [7], [5, 4], [7, 5], [4, 7], [5], [4, 5], [4], [5], [7], [7, 5], [4, 7], [5, 4], [4, 5], [6], [8], [9], [8, 6], [9, 8], [6, 9], [8], [6, 8], [6], [8], [9], [9, 8], [6, 9], [8, 6], [9], [5], [6], [7], [6, 5], [7, 6], [5, 7], [6], [5, 6], [5], [6], [7], [7, 6], [5, 7], [6, 5], [7], [5, 6], ----End Timer [Execute Mapping]:  0.4877042770385742

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  0.47003650665283203

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

..........

Total Plans: 0

--------End Timer [Generate Plans]:  0.0

There's no mapping plan.
[7], [0], [1], [7], [1, 0], [7, 1], [0, 7], [1], [0, 1], [0], [1], [7], [7, 1], [0, 7], [1, 0], [7], [0, 1], [8], [2], [7], [8], [7, 2], [8, 7], [2, 8], [7], [2, 7], [2], [7], [8], [8, 7], [2, 8], [7, 2], [8], [7], [1], [2], [7], [2, 1], [7, 2], [1, 7], [2], [1, 2], [1], [2], [7], [7, 2], [1, 7], [2, 1], [7], [1, 2], [9], [3], [8], [9], [8, 3], [9, 8], [3, 9], [8], [3, 8], [3], [8], [9], [9, 8], [3, 9], [8, 3], [8], [3], [7], [8], [7, 3], [8, 7], [3, 8], [7], [3, 7], [3], [7], [8], [8, 7], [3, 8], [7, 3], [8], [7], [2], [3], [7], [3, 2], [7, 3], [2, 7], [3], [2, 3], [2], [3], [7], [7, 3], [2, 7], [3, 2], [7], [2, 3], [4], [8], [9], [8, 4], [9, 8], [4, 9], [8], [4, 8], [4], [8], [9], [9, 8], [4, 9], [8, 4], [8], [4], [7], [8], [7, 4], [8, 7], [4, 8], [7], [4, 7], [4], [7], [8], [8, 7], [4, 8], [7, 4], [8], [7], [3], [4], [7], [4, 3], [7, 4], [3, 7], [4], [3, 4], [3], [4], [7], [7, 4], [3, 7], [4, 3], [7], [3, 4], [5], [8], [9], [8, 5], [9, 8], [5, 9], [8], [5, 8], [5], [8], [9], [9, 8], [5, 9], [8, 5], [8], [5], [7], [8], [7, 5], [8, 7], [5, 8], [7], [5, 7], [5], [7], [8], [8, 7], [5, 8], [7, 5], [8], [7], [4], [5], [7], [5, 4], [7, 5], [4, 7], [5], [4, 5], [4], [5], [7], [7, 5], [4, 7], [5, 4], [4, 5], [6], [8], [9], [8, 6], [9, 8], [6, 9], [8], [6, 8], [6], [8], [9], [9, 8], [6, 9], [8, 6], [9], [5], [6], [7], [6, 5], [7, 6], [5, 7], [6], [5, 6], [5], [6], [7], [7, 6], [5, 7], [6, 5], [7], [5, 6], ----End Timer [Execute Mapping]:  0.47003650665283203

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-cx 
     => total size: [230] (IBM)
 --------------------
 - qubits_num: 10, using gates: [t,h,tdg,cx]
 - circuit depth: 92 - (small)
 - circuit cycle: 334


>> Solved circuit: 
Circuit Info: 
 - circuit: h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-cx-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-cx-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-cx-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-cx 
     => total size: [222] (U)
 --------------------
 - qubits_num: 10, using gates: [t,h,tdg,cx]
 - circuit depth: 92 - (small)
 - circuit cycle: 326

Reduced: 
 - size: 8 (3.48%)
 - depth: 0 (0.00%)

