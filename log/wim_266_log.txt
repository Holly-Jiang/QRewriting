----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.010999202728271484

[6], [5], [4], [2], [1], [0], [10], [5], [7], [6], [5], [6, 7], [5, 6], [7, 5], [6], [7, 6], [7], [6], [5], [5, 6], [7, 5], [6, 7], [5], [6], [8], [4], [6], [4, 8], [6, 4], [8, 6], [4], [8, 4], [8], [4], [6], [6, 4], [8, 6], [4, 8], [6], [4], [10], [9], [4], [9, 10], [4, 9], [10, 4], [9], [10, 9], [10], [9], [4], [4, 9], [10, 4], [9, 10], [4], [6], [8], [4], [6], [4, 8], [6, 4], [8, 6], [4], [8, 4], [8], [4], [6], [6, 4], [8, 6], [4, 8], [6], [5], [7], [6], [5], [6, 7], [5, 6], [7, 5], [6], [7, 6], [7], [6], [5], [5, 6], [7, 5], [6, 7], [5], [6], [8], [4], [6], [4, 8], [6, 4], [8, 6], [4], [8, 4], [8], [4], [6], [6, 4], [8, 6], [4, 8], [6], [4], [10], [9], [4], [9, 10], [4, 9], [10, 4], [9], [10, 9], [10], [9], [4], [4, 9], [10, 4], [9, 10], [4], [6], [8], [4], [6], [4, 8], [6, 4], [8, 6], [4], [8, 4], [8], [4], [6], [6, 4], [8, 6], [4, 8], [6], [0], [7], [6], [0], [6, 7], [0, 6], [7, 0], [6], [7, 6], [7], [6], [0], [0, 6], [7, 0], [6, 7], [0], [6], [8], [5], [6], [5, 8], [6, 5], [8, 6], [5], [8, 5], [8], [5], [6], [6, 5], [8, 6], [5, 8], [6], [5], [10], [9], [5], [9, 10], [5, 9], [10, 5], [9], [10, 9], [10], [9], [5], [5, 9], [10, 5], [9, 10], [5], [6], [8], [5], [6], [5, 8], [6, 5], [8, 6], [5], [8, 5], [8], [5], [6], [6, 5], [8, 6], [5, 8], [6], [0], [7], [6], [0], [6, 7], [0, 6], [7, 0], [6], [7, 6], [7], [6], [0], [0, 6], [7, 0], [6, 7], [0], [6], [8], [5], [6], [5, 8], [6, 5], [8, 6], [5], [8, 5], [8], [5], [6], [6, 5], [8, 6], [5, 8], [6], [5], [10], [9], [5], [9, 10], [5, 9], [10, 5], [9], [10, 9], [10], [9], [5], [5, 9], [10, 5], [9, 10], [5], [6], [8], [5], [6], [5, 8], [6, 5], [8, 6], [5], [8, 5], [8], [5], [6], [6, 5], [8, 6], [5, 8], [6], [7], [3], [7], [10], [3], [10, 7], [3, 10], [7, 3], [10], [7, 10], [7], [10], [3], [3, 10], [7, 3], [10, 7], [3], [10], [9], [8], [10], [8, 9], [10, 8], [9, 10], [8], [9, 8], [9], [8], [10], [10, 8], [9, 10], [8, 9], [10], [3], [7], [10], [3], [10, 7], [3, 10], [7, 3], [10], [7, 10], [7], [10], [3], [3, 10], [7, 3], [10, 7], [3], [10], [9], [8], [10], [8, 9], [10, 8], [9, 10], [8], [9, 8], [9], [8], [10], [10, 8], [9, 10], [8, 9], [10], [4], [9], [7], [4], [7, 9], [4, 7], [9, 4], [7], [9, 7], [9], [7], [4], [4, 7], [9, 4], [7, 9], [4], [8], [4], [9], [8], [4], [8, 9], [4, 8], [9, 4], [8], [9, 8], [9], [8], [4], [4, 8], [9, 4], [8, 9], [4], [0], [7], [9], [0], [9, 7], [0, 9], [7, 0], [9], [7, 9], [7], [9], [0], [0, 9], [7, 0], [9, 7], [0], [9], [10], [8], [9], [8, 10], [9, 8], [10, 9], [8], [10, 8], [10], [8], [9], [9, 8], [10, 9], [8, 10], [9], [0], [7], [9], [0], [9, 7], [0, 9], [7, 0], [9], [7, 9], [7], [9], [0], [0, 9], [7, 0], [9, 7], [0], [9], [10], [8], [9], [8, 10], [9, 8], [10, 9], [8], [10, 8], [10], [8], [9], [9, 8], [10, 9], [8, 10], [9], [9], [6], [7], [5], [6], [5, 7], [6, 5], [7, 6], [5], [7, 5], [7], [5], [6], [6, 5], [7, 6], [5, 7], [6], [5], [8], [4], [5], [4, 8], [5, 4], [8, 5], [4], [8, 4], [8], [4], [5], [5, 4], [8, 5], [4, 8], [5], [4], [10], [9], [4], [9, 10], [4, 9], [10, 4], [9], [10, 9], [10], [9], [4], [4, 9], [10, 4], [9, 10], [4], [5], [8], [4], [5], [4, 8], [5, 4], [8, 5], [4], [8, 4], [8], [4], [5], [5, 4], [8, 5], [4, 8], [5], [6], [7], [5], [6], [5, 7], [6, 5], [7, 6], [5], [7, 5], [7], [5], [6], [6, 5], [7, 6], [5, 7], [6], [5], [8], [4], [5], [4, 8], [5, 4], [8, 5], [4], [8, 4], [8], [4], [5], [5, 4], [8, 5], [4, 8], [5], [4], [10], [9], [4], [9, 10], [4, 9], [10, 4], [9], [10, 9], [10], [9], [4], [4, 9], [10, 4], [9, 10], [4], [5], [8], [4], [5], [4, 8], [5, 4], [8, 5], [4], [8, 4], [8], [4], [5], [5, 4], [8, 5], [4, 8], [5], [5], [7], [6], [5], [6, 7], [5, 6], [7, 5], [6], [7, 6], [7], [6], [5], [5, 6], [7, 5], [6, 7], [5], [6], [8], [4], [6], [4, 8], [6, 4], [8, 6], [4], [8, 4], [8], [4], [6], [6, 4], [8, 6], [4, 8], [6], [4], [10], [9], [4], [9, 10], [4, 9], [10, 4], [9], [10, 9], [10], [9], [4], [4, 9], [10, 4], [9, 10], [4], [6], [8], [4], [6], [4, 8], [6, 4], [8, 6], [4], [8, 4], [8], [4], [6], [6, 4], [8, 6], [4, 8], [6], [5], [7], [6], [5], [6, 7], [5, 6], [7, 5], [6], [7, 6], [7], [6], [5], [5, 6], [7, 5], [6, 7], [5], [6], [8], [4], [6], [4, 8], [6, 4], [8, 6], [4], [8, 4], [8], [4], [6], [6, 4], [8, 6], [4, 8], [6], [4], [10], [9], [4], [9, 10], [4, 9], [10, 4], [9], [10, 9], [10], [9], [4], [4, 9], [10, 4], [9, 10], [4], [6], [8], [4], [6], [4, 8], [6, 4], [8, 6], [4], [8, 4], [8], [4], [6], [6, 4], [8, 6], [4, 8], [6], [3], [9], [7], [3], [7, 9], [3, 7], [9, 3], [7], [9, 7], [9], [7], [3], [3, 7], [9, 3], [7, 9], [3], [1], [9], [7], [1], [7, 9], [1, 7], [9, 1], [7], [9, 7], [9], [7], [1], [1, 7], [9, 1], [7, 9], [1], [1], [7], [10], [1], [10, 7], [1, 10], [7, 1], [10], [7, 10], [7], [10], [1], [1, 10], [7, 1], [10, 7], [1], [10], [9], [8], [10], [8, 9], [10, 8], [9, 10], [8], [9, 8], [9], [8], [10], [10, 8], [9, 10], [8, 9], [10], [1], [7], [10], [1], [10, 7], [1, 10], [7, 1], [10], [7, 10], [7], [10], [1], [1, 10], [7, 1], [10, 7], [1], [10], [9], [8], [10], [8, 9], [10, 8], [9, 10], [8], [9, 8], [9], [8], [10], [10, 8], [9, 10], [8, 9], [10], [5], [10], [9], [5], [9, 10], [5, 9], [10, 5], [9], [10, 9], [10], [9], [5], [5, 9], [10, 5], [9, 10], [5], [6], [8], [7], [6], [7, 8], [6, 7], [8, 6], [7], [8, 7], [8], [7], [6], [6, 7], [8, 6], [7, 8], [6], [7], [10], [9], [7], [9, 10], [7, 9], [10, 7], [9], [10, 9], [10], [9], [7], [7, 9], [10, 7], [9, 10], [7], [6], [8], [7], [6], [7, 8], [6, 7], [8, 6], [7], [8, 7], [8], [7], [6], [6, 7], [8, 6], [7, 8], [6], [7], [10], [9], [7], [9, 10], [7, 9], [10, 7], [9], [10, 9], [10], [9], [7], [7, 9], [10, 7], [9, 10], [7], [2], [8], [7], [2], [7, 8], [2, 7], [8, 2], [7], [8, 7], [8], [7], [2], [2, 7], [8, 2], [7, 8], [2], [7], [10], [9], [7], [9, 10], [7, 9], [10, 7], [9], [10, 9], [10], [9], [7], [7, 9], [10, 7], [9, 10], [7], [2], [8], [7], [2], [7, 8], [2, 7], [8, 2], [7], [8, 7], [8], [7], [2], [2, 7], [8, 2], [7, 8], [2], [7], [10], [9], [7], [9, 10], [7, 9], [10, 7], [9], [10, 9], [10], [9], [7], [7, 9], [10, 7], [9, 10], [7], [0], [8], [7], [0], [7, 8], [0, 7], [8, 0], [7], [8, 7], [8], [7], [0], [0, 7], [8, 0], [7, 8], [0], [7], [10], [9], [7], [9, 10], [7, 9], [10, 7], [9], [10, 9], [10], [9], [7], [7, 9], [10, 7], [9, 10], [7], [0], [8], [7], [0], [7, 8], [0, 7], [8, 0], [7], [8, 7], [8], [7], [0], [0, 7], [8, 0], [7, 8], [0], [7], [10], [9], [7], [9, 10], [7, 9], [10, 7], [9], [10, 9], [10], [9], [7], [7, 9], [10, 7], [9, 10], [7], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]
--------End Timer [Find Candidates]:  0.0

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

..........

Total Plans: 0

--------End Timer [Generate Plans]:  0.0

There's no mapping plan.
[6], [5], [4], [2], [1], [0], [10], [5], [7], [6], [5], [6, 7], [5, 6], [7, 5], [6], [7, 6], [7], [6], [5], [5, 6], [7, 5], [6, 7], [5], [6], [8], [4], [6], [4, 8], [6, 4], [8, 6], [4], [8, 4], [8], [4], [6], [6, 4], [8, 6], [4, 8], [6], [4], [10], [9], [4], [9, 10], [4, 9], [10, 4], [9], [10, 9], [10], [9], [4], [4, 9], [10, 4], [9, 10], [4], [6], [8], [4], [6], [4, 8], [6, 4], [8, 6], [4], [8, 4], [8], [4], [6], [6, 4], [8, 6], [4, 8], [6], [5], [7], [6], [5], [6, 7], [5, 6], [7, 5], [6], [7, 6], [7], [6], [5], [5, 6], [7, 5], [6, 7], [5], [6], [8], [4], [6], [4, 8], [6, 4], [8, 6], [4], [8, 4], [8], [4], [6], [6, 4], [8, 6], [4, 8], [6], [4], [10], [9], [4], [9, 10], [4, 9], [10, 4], [9], [10, 9], [10], [9], [4], [4, 9], [10, 4], [9, 10], [4], [6], [8], [4], [6], [4, 8], [6, 4], [8, 6], [4], [8, 4], [8], [4], [6], [6, 4], [8, 6], [4, 8], [6], [0], [7], [6], [0], [6, 7], [0, 6], [7, 0], [6], [7, 6], [7], [6], [0], [0, 6], [7, 0], [6, 7], [0], [6], [8], [5], [6], [5, 8], [6, 5], [8, 6], [5], [8, 5], [8], [5], [6], [6, 5], [8, 6], [5, 8], [6], [5], [10], [9], [5], [9, 10], [5, 9], [10, 5], [9], [10, 9], [10], [9], [5], [5, 9], [10, 5], [9, 10], [5], [6], [8], [5], [6], [5, 8], [6, 5], [8, 6], [5], [8, 5], [8], [5], [6], [6, 5], [8, 6], [5, 8], [6], [0], [7], [6], [0], [6, 7], [0, 6], [7, 0], [6], [7, 6], [7], [6], [0], [0, 6], [7, 0], [6, 7], [0], [6], [8], [5], [6], [5, 8], [6, 5], [8, 6], [5], [8, 5], [8], [5], [6], [6, 5], [8, 6], [5, 8], [6], [5], [10], [9], [5], [9, 10], [5, 9], [10, 5], [9], [10, 9], [10], [9], [5], [5, 9], [10, 5], [9, 10], [5], [6], [8], [5], [6], [5, 8], [6, 5], [8, 6], [5], [8, 5], [8], [5], [6], [6, 5], [8, 6], [5, 8], [6], [7], [3], [7], [10], [3], [10, 7], [3, 10], [7, 3], [10], [7, 10], [7], [10], [3], [3, 10], [7, 3], [10, 7], [3], [10], [9], [8], [10], [8, 9], [10, 8], [9, 10], [8], [9, 8], [9], [8], [10], [10, 8], [9, 10], [8, 9], [10], [3], [7], [10], [3], [10, 7], [3, 10], [7, 3], [10], [7, 10], [7], [10], [3], [3, 10], [7, 3], [10, 7], [3], [10], [9], [8], [10], [8, 9], [10, 8], [9, 10], [8], [9, 8], [9], [8], [10], [10, 8], [9, 10], [8, 9], [10], [4], [9], [7], [4], [7, 9], [4, 7], [9, 4], [7], [9, 7], [9], [7], [4], [4, 7], [9, 4], [7, 9], [4], [8], [4], [9], [8], [4], [8, 9], [4, 8], [9, 4], [8], [9, 8], [9], [8], [4], [4, 8], [9, 4], [8, 9], [4], [0], [7], [9], [0], [9, 7], [0, 9], [7, 0], [9], [7, 9], [7], [9], [0], [0, 9], [7, 0], [9, 7], [0], [9], [10], [8], [9], [8, 10], [9, 8], [10, 9], [8], [10, 8], [10], [8], [9], [9, 8], [10, 9], [8, 10], [9], [0], [7], [9], [0], [9, 7], [0, 9], [7, 0], [9], [7, 9], [7], [9], [0], [0, 9], [7, 0], [9, 7], [0], [9], [10], [8], [9], [8, 10], [9, 8], [10, 9], [8], [10, 8], [10], [8], [9], [9, 8], [10, 9], [8, 10], [9], [9], [6], [7], [5], [6], [5, 7], [6, 5], [7, 6], [5], [7, 5], [7], [5], [6], [6, 5], [7, 6], [5, 7], [6], [5], [8], [4], [5], [4, 8], [5, 4], [8, 5], [4], [8, 4], [8], [4], [5], [5, 4], [8, 5], [4, 8], [5], [4], [10], [9], [4], [9, 10], [4, 9], [10, 4], [9], [10, 9], [10], [9], [4], [4, 9], [10, 4], [9, 10], [4], [5], [8], [4], [5], [4, 8], [5, 4], [8, 5], [4], [8, 4], [8], [4], [5], [5, 4], [8, 5], [4, 8], [5], [6], [7], [5], [6], [5, 7], [6, 5], [7, 6], [5], [7, 5], [7], [5], [6], [6, 5], [7, 6], [5, 7], [6], [5], [8], [4], [5], [4, 8], [5, 4], [8, 5], [4], [8, 4], [8], [4], [5], [5, 4], [8, 5], [4, 8], [5], [4], [10], [9], [4], [9, 10], [4, 9], [10, 4], [9], [10, 9], [10], [9], [4], [4, 9], [10, 4], [9, 10], [4], [5], [8], [4], [5], [4, 8], [5, 4], [8, 5], [4], [8, 4], [8], [4], [5], [5, 4], [8, 5], [4, 8], [5], [5], [7], [6], [5], [6, 7], [5, 6], [7, 5], [6], [7, 6], [7], [6], [5], [5, 6], [7, 5], [6, 7], [5], [6], [8], [4], [6], [4, 8], [6, 4], [8, 6], [4], [8, 4], [8], [4], [6], [6, 4], [8, 6], [4, 8], [6], [4], [10], [9], [4], [9, 10], [4, 9], [10, 4], [9], [10, 9], [10], [9], [4], [4, 9], [10, 4], [9, 10], [4], [6], [8], [4], [6], [4, 8], [6, 4], [8, 6], [4], [8, 4], [8], [4], [6], [6, 4], [8, 6], [4, 8], [6], [5], [7], [6], [5], [6, 7], [5, 6], [7, 5], [6], [7, 6], [7], [6], [5], [5, 6], [7, 5], [6, 7], [5], [6], [8], [4], [6], [4, 8], [6, 4], [8, 6], [4], [8, 4], [8], [4], [6], [6, 4], [8, 6], [4, 8], [6], [4], [10], [9], [4], [9, 10], [4, 9], [10, 4], [9], [10, 9], [10], [9], [4], [4, 9], [10, 4], [9, 10], [4], [6], [8], [4], [6], [4, 8], [6, 4], [8, 6], [4], [8, 4], [8], [4], [6], [6, 4], [8, 6], [4, 8], [6], [3], [9], [7], [3], [7, 9], [3, 7], [9, 3], [7], [9, 7], [9], [7], [3], [3, 7], [9, 3], [7, 9], [3], [1], [9], [7], [1], [7, 9], [1, 7], [9, 1], [7], [9, 7], [9], [7], [1], [1, 7], [9, 1], [7, 9], [1], [1], [7], [10], [1], [10, 7], [1, 10], [7, 1], [10], [7, 10], [7], [10], [1], [1, 10], [7, 1], [10, 7], [1], [10], [9], [8], [10], [8, 9], [10, 8], [9, 10], [8], [9, 8], [9], [8], [10], [10, 8], [9, 10], [8, 9], [10], [1], [7], [10], [1], [10, 7], [1, 10], [7, 1], [10], [7, 10], [7], [10], [1], [1, 10], [7, 1], [10, 7], [1], [10], [9], [8], [10], [8, 9], [10, 8], [9, 10], [8], [9, 8], [9], [8], [10], [10, 8], [9, 10], [8, 9], [10], [5], [10], [9], [5], [9, 10], [5, 9], [10, 5], [9], [10, 9], [10], [9], [5], [5, 9], [10, 5], [9, 10], [5], [6], [8], [7], [6], [7, 8], [6, 7], [8, 6], [7], [8, 7], [8], [7], [6], [6, 7], [8, 6], [7, 8], [6], [7], [10], [9], [7], [9, 10], [7, 9], [10, 7], [9], [10, 9], [10], [9], [7], [7, 9], [10, 7], [9, 10], [7], [6], [8], [7], [6], [7, 8], [6, 7], [8, 6], [7], [8, 7], [8], [7], [6], [6, 7], [8, 6], [7, 8], [6], [7], [10], [9], [7], [9, 10], [7, 9], [10, 7], [9], [10, 9], [10], [9], [7], [7, 9], [10, 7], [9, 10], [7], [2], [8], [7], [2], [7, 8], [2, 7], [8, 2], [7], [8, 7], [8], [7], [2], [2, 7], [8, 2], [7, 8], [2], [7], [10], [9], [7], [9, 10], [7, 9], [10, 7], [9], [10, 9], [10], [9], [7], [7, 9], [10, 7], [9, 10], [7], [2], [8], [7], [2], [7, 8], [2, 7], [8, 2], [7], [8, 7], [8], [7], [2], [2, 7], [8, 2], [7, 8], [2], [7], [10], [9], [7], [9, 10], [7, 9], [10, 7], [9], [10, 9], [10], [9], [7], [7, 9], [10, 7], [9, 10], [7], [0], [8], [7], [0], [7, 8], [0, 7], [8, 0], [7], [8, 7], [8], [7], [0], [0, 7], [8, 0], [7, 8], [0], [7], [10], [9], [7], [9, 10], [7, 9], [10, 7], [9], [10, 9], [10], [9], [7], [7, 9], [10, 7], [9, 10], [7], [0], [8], [7], [0], [7, 8], [0, 7], [8, 0], [7], [8, 7], [8], [7], [0], [0, 7], [8, 0], [7, 8], [0], [7], [10], [9], [7], [9, 10], [7, 9], [10, 7], [9], [10, 9], [10], [9], [7], [7, 9], [10, 7], [9, 10], [7], ----End Timer [Execute Mapping]:  0.022968530654907227

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: x-x-x-x-x-x-x-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-x-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-x-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-x-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h 
     => total size: [986] (IBM)
 --------------------
 - qubits_num: 11, using gates: [tdg,h,t,x,cx]
 - circuit depth: 514 - (medium)
 - circuit cycle: 1413


>> Solved circuit: 
Circuit Info: 
 - circuit: x-x-x-x-x-x-x-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-x-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-x-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-x-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h 
     => total size: [986] (U)
 --------------------
 - qubits_num: 11, using gates: [tdg,h,t,x,cx]
 - circuit depth: 514 - (medium)
 - circuit cycle: 1413

Reduced: 
 - size: 0 (0.00%)
 - depth: 0 (0.00%)

----Start Timer: [Init Circuit]
----End Timer [Init Circuit]:  0.4493403434753418

[6], [5], [4], [2], [1], [0], [10], [5], [7], [6], [5], [6, 7], [5, 6], [7, 5], [6], [7, 6], [7], [6], [5], [5, 6], [7, 5], [6, 7], [5], [6], [8], [4], [6], [4, 8], [6, 4], [8, 6], [4], [8, 4], [8], [4], [6], [6, 4], [8, 6], [4, 8], [6], [4], [10], [9], [4], [9, 10], [4, 9], [10, 4], [9], [10, 9], [10], [9], [4], [4, 9], [10, 4], [9, 10], [4], [6], [8], [4], [6], [4, 8], [6, 4], [8, 6], [4], [8, 4], [8], [4], [6], [6, 4], [8, 6], [4, 8], [6], [5], [7], [6], [5], [6, 7], [5, 6], [7, 5], [6], [7, 6], [7], [6], [5], [5, 6], [7, 5], [6, 7], [5], [6], [8], [4], [6], [4, 8], [6, 4], [8, 6], [4], [8, 4], [8], [4], [6], [6, 4], [8, 6], [4, 8], [6], [4], [10], [9], [4], [9, 10], [4, 9], [10, 4], [9], [10, 9], [10], [9], [4], [4, 9], [10, 4], [9, 10], [4], [6], [8], [4], [6], [4, 8], [6, 4], [8, 6], [4], [8, 4], [8], [4], [6], [6, 4], [8, 6], [4, 8], [6], [0], [7], [6], [0], [6, 7], [0, 6], [7, 0], [6], [7, 6], [7], [6], [0], [0, 6], [7, 0], [6, 7], [0], [6], [8], [5], [6], [5, 8], [6, 5], [8, 6], [5], [8, 5], [8], [5], [6], [6, 5], [8, 6], [5, 8], [6], [5], [10], [9], [5], [9, 10], [5, 9], [10, 5], [9], [10, 9], [10], [9], [5], [5, 9], [10, 5], [9, 10], [5], [6], [8], [5], [6], [5, 8], [6, 5], [8, 6], [5], [8, 5], [8], [5], [6], [6, 5], [8, 6], [5, 8], [6], [0], [7], [6], [0], [6, 7], [0, 6], [7, 0], [6], [7, 6], [7], [6], [0], [0, 6], [7, 0], [6, 7], [0], [6], [8], [5], [6], [5, 8], [6, 5], [8, 6], [5], [8, 5], [8], [5], [6], [6, 5], [8, 6], [5, 8], [6], [5], [10], [9], [5], [9, 10], [5, 9], [10, 5], [9], [10, 9], [10], [9], [5], [5, 9], [10, 5], [9, 10], [5], [6], [8], [5], [6], [5, 8], [6, 5], [8, 6], [5], [8, 5], [8], [5], [6], [6, 5], [8, 6], [5, 8], [6], [7], [3], [7], [10], [3], [10, 7], [3, 10], [7, 3], [10], [7, 10], [7], [10], [3], [3, 10], [7, 3], [10, 7], [3], [10], [9], [8], [10], [8, 9], [10, 8], [9, 10], [8], [9, 8], [9], [8], [10], [10, 8], [9, 10], [8, 9], [10], [3], [7], [10], [3], [10, 7], [3, 10], [7, 3], [10], [7, 10], [7], [10], [3], [3, 10], [7, 3], [10, 7], [3], [10], [9], [8], [10], [8, 9], [10, 8], [9, 10], [8], [9, 8], [9], [8], [10], [10, 8], [9, 10], [8, 9], [10], [4], [9], [7], [4], [7, 9], [4, 7], [9, 4], [7], [9, 7], [9], [7], [4], [4, 7], [9, 4], [7, 9], [4], [8], [4], [9], [8], [4], [8, 9], [4, 8], [9, 4], [8], [9, 8], [9], [8], [4], [4, 8], [9, 4], [8, 9], [4], [0], [7], [9], [0], [9, 7], [0, 9], [7, 0], [9], [7, 9], [7], [9], [0], [0, 9], [7, 0], [9, 7], [0], [9], [10], [8], [9], [8, 10], [9, 8], [10, 9], [8], [10, 8], [10], [8], [9], [9, 8], [10, 9], [8, 10], [9], [0], [7], [9], [0], [9, 7], [0, 9], [7, 0], [9], [7, 9], [7], [9], [0], [0, 9], [7, 0], [9, 7], [0], [9], [10], [8], [9], [8, 10], [9, 8], [10, 9], [8], [10, 8], [10], [8], [9], [9, 8], [10, 9], [8, 10], [9], [9], [6], [7], [5], [6], [5, 7], [6, 5], [7, 6], [5], [7, 5], [7], [5], [6], [6, 5], [7, 6], [5, 7], [6], [5], [8], [4], [5], [4, 8], [5, 4], [8, 5], [4], [8, 4], [8], [4], [5], [5, 4], [8, 5], [4, 8], [5], [4], [10], [9], [4], [9, 10], [4, 9], [10, 4], [9], [10, 9], [10], [9], [4], [4, 9], [10, 4], [9, 10], [4], [5], [8], [4], [5], [4, 8], [5, 4], [8, 5], [4], [8, 4], [8], [4], [5], [5, 4], [8, 5], [4, 8], [5], [6], [7], [5], [6], [5, 7], [6, 5], [7, 6], [5], [7, 5], [7], [5], [6], [6, 5], [7, 6], [5, 7], [6], [5], [8], [4], [5], [4, 8], [5, 4], [8, 5], [4], [8, 4], [8], [4], [5], [5, 4], [8, 5], [4, 8], [5], [4], [10], [9], [4], [9, 10], [4, 9], [10, 4], [9], [10, 9], [10], [9], [4], [4, 9], [10, 4], [9, 10], [4], [5], [8], [4], [5], [4, 8], [5, 4], [8, 5], [4], [8, 4], [8], [4], [5], [5, 4], [8, 5], [4, 8], [7], [6], [5], [6, 7], [5, 6], [7, 5], [6], [7, 6], [7], [6], [5], [5, 6], [7, 5], [6, 7], [5], [6], [8], [4], [6], [4, 8], [6, 4], [8, 6], [4], [8, 4], [8], [4], [6], [6, 4], [8, 6], [4, 8], [6], [4], [10], [9], [4], [9, 10], [4, 9], [10, 4], [9], [10, 9], [10], [9], [4], [4, 9], [10, 4], [9, 10], [4], [6], [8], [4], [6], [4, 8], [6, 4], [8, 6], [4], [8, 4], [8], [4], [6], [6, 4], [8, 6], [4, 8], [6], [5], [7], [6], [5], [6, 7], [5, 6], [7, 5], [6], [7, 6], [7], [6], [5], [5, 6], [7, 5], [6, 7], [5], [6], [8], [4], [6], [4, 8], [6, 4], [8, 6], [4], [8, 4], [8], [4], [6], [6, 4], [8, 6], [4, 8], [6], [4], [10], [9], [4], [9, 10], [4, 9], [10, 4], [9], [10, 9], [10], [9], [4], [4, 9], [10, 4], [9, 10], [4], [6], [8], [4], [6], [4, 8], [6, 4], [8, 6], [4], [8, 4], [8], [4], [6], [6, 4], [8, 6], [4, 8], [6], [3], [9], [7], [3], [7, 9], [3, 7], [9, 3], [7], [9, 7], [9], [7], [3], [3, 7], [9, 3], [7, 9], [3], [1], [9], [7], [1], [7, 9], [1, 7], [9, 1], [7], [9, 7], [9], [7], [1], [1, 7], [9, 1], [7, 9], [7], [10], [1], [10, 7], [1, 10], [7, 1], [10], [7, 10], [7], [10], [1], [1, 10], [7, 1], [10, 7], [1], [10], [9], [8], [10], [8, 9], [10, 8], [9, 10], [8], [9, 8], [9], [8], [10], [10, 8], [9, 10], [8, 9], [10], [1], [7], [10], [1], [10, 7], [1, 10], [7, 1], [10], [7, 10], [7], [10], [1], [1, 10], [7, 1], [10, 7], [1], [10], [9], [8], [10], [8, 9], [10, 8], [9, 10], [8], [9, 8], [9], [8], [10], [10, 8], [9, 10], [8, 9], [10], [5], [10], [9], [5], [9, 10], [5, 9], [10, 5], [9], [10, 9], [10], [9], [5], [5, 9], [10, 5], [9, 10], [5], [6], [8], [7], [6], [7, 8], [6, 7], [8, 6], [7], [8, 7], [8], [7], [6], [6, 7], [8, 6], [7, 8], [6], [7], [10], [9], [7], [9, 10], [7, 9], [10, 7], [9], [10, 9], [10], [9], [7], [7, 9], [10, 7], [9, 10], [7], [6], [8], [7], [6], [7, 8], [6, 7], [8, 6], [7], [8, 7], [8], [7], [6], [6, 7], [8, 6], [7, 8], [6], [7], [10], [9], [7], [9, 10], [7, 9], [10, 7], [9], [10, 9], [10], [9], [7], [7, 9], [10, 7], [9, 10], [7], [2], [8], [7], [2], [7, 8], [2, 7], [8, 2], [7], [8, 7], [8], [7], [2], [2, 7], [8, 2], [7, 8], [2], [7], [10], [9], [7], [9, 10], [7, 9], [10, 7], [9], [10, 9], [10], [9], [7], [7, 9], [10, 7], [9, 10], [7], [2], [8], [7], [2], [7, 8], [2, 7], [8, 2], [7], [8, 7], [8], [7], [2], [2, 7], [8, 2], [7, 8], [2], [7], [10], [9], [7], [9, 10], [7, 9], [10, 7], [9], [10, 9], [10], [9], [7], [7, 9], [10, 7], [9, 10], [7], [0], [8], [7], [0], [7, 8], [0, 7], [8, 0], [7], [8, 7], [8], [7], [0], [0, 7], [8, 0], [7, 8], [0], [7], [10], [9], [7], [9, 10], [7, 9], [10, 7], [9], [10, 9], [10], [9], [7], [7, 9], [10, 7], [9, 10], [7], [0], [8], [7], [0], [7, 8], [0, 7], [8, 0], [7], [8, 7], [8], [7], [0], [0, 7], [8, 0], [7, 8], [0], [7], [10], [9], [7], [9, 10], [7, 9], [10, 7], [9], [10, 9], [10], [9], [7], [7, 9], [10, 7], [9, 10], [7], ----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 

[38, 55]
[22, 71]
[102, 119]
[166, 183]
[150, 199]
[230, 247]
[279, 296]
[343, 345]
[376, 393]
[457, 474]
[441, 490]
[521, 538]
[583, 600]
[567, 616]
[647, 664]
[725, 742]
[805, 822]
[869, 886]
[933, 950]

------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.154425859451294

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[Pos: [22, 71] hh => I, Pos: [38, 55] hh => I, Pos: [102, 119] hh => I, Pos: [150, 199] hh => I, Pos: [166, 183] hh => I, Pos: [230, 247] hh => I, Pos: [279, 296] hh => I, Pos: [343, 345] hh => I, Pos: [376, 393] hh => I, Pos: [441, 490] hh => I, Pos: [457, 474] hh => I, Pos: [521, 538] hh => I, Pos: [567, 616] hh => I, Pos: [583, 600] hh => I, Pos: [647, 664] hh => I, Pos: [725, 742] hh => I, Pos: [805, 822] hh => I, Pos: [869, 886] hh => I, Pos: [933, 950] hh => I]

Plan: 1
[Pos: [22, 71] hh => I,
 Pos: [38, 55] hh => I,
 Pos: [102, 119] hh => I,
 Pos: [150, 199] hh => I,
 Pos: [166, 183] hh => I,
 Pos: [230, 247] hh => I,
 Pos: [279, 296] hh => I,
 Pos: [343, 345] hh => I,
 Pos: [376, 393] hh => I,
 Pos: [441, 490] hh => I,
 Pos: [457, 474] hh => I,
 Pos: [521, 538] hh => I,
 Pos: [567, 616] hh => I,
 Pos: [583, 600] hh => I,
 Pos: [647, 664] hh => I,
 Pos: [725, 742] hh => I,
 Pos: [805, 822] hh => I,
 Pos: [869, 886] hh => I,
 Pos: [933, 950] hh => I]
Change: 19, Saving: 19

..........

Total Plans: 1

--------End Timer [Generate Plans]:  0.05097079277038574

--------Start Timer: [apply mapping plan]

**************************
*                        *
*   Apply Mapping Plan   *
*                        *
**************************

Selected Best Plan: 
[Pos: [22, 71] hh => I,
 Pos: [38, 55] hh => I,
 Pos: [102, 119] hh => I,
 Pos: [150, 199] hh => I,
 Pos: [166, 183] hh => I,
 Pos: [230, 247] hh => I,
 Pos: [279, 296] hh => I,
 Pos: [343, 345] hh => I,
 Pos: [376, 393] hh => I,
 Pos: [441, 490] hh => I,
 Pos: [457, 474] hh => I,
 Pos: [521, 538] hh => I,
 Pos: [567, 616] hh => I,
 Pos: [583, 600] hh => I,
 Pos: [647, 664] hh => I,
 Pos: [725, 742] hh => I,
 Pos: [805, 822] hh => I,
 Pos: [869, 886] hh => I,
 Pos: [933, 950] hh => I]
Change: 19, Saving: 19

Circuit before: xxxxxxxhtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchxhtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchxhtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchxhtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccctttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccctttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccch
---------------
Apply:  Pos: [22, 71] hh => I
Apply:  Pos: [38, 55] hh => I
Apply:  Pos: [102, 119] hh => I
Apply:  Pos: [150, 199] hh => I
Apply:  Pos: [166, 183] hh => I
Apply:  Pos: [230, 247] hh => I
Apply:  Pos: [279, 296] hh => I
Apply:  Pos: [343, 345] hh => I
Apply:  Pos: [376, 393] hh => I
Apply:  Pos: [441, 490] hh => I
Apply:  Pos: [457, 474] hh => I
Apply:  Pos: [521, 538] hh => I
Apply:  Pos: [567, 616] hh => I
Apply:  Pos: [583, 600] hh => I
Apply:  Pos: [647, 664] hh => I
Apply:  Pos: [725, 742] hh => I
Apply:  Pos: [805, 822] hh => I
Apply:  Pos: [869, 886] hh => I
Apply:  Pos: [933, 950] hh => I
---------------
Circuit after: xxxxxxxhtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchhtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchhtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchhtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchxhtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtcccxtttcccTcTTtccchhtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchhtttcccTcTTtccchxhtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchhtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccctttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchhtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccctttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchhtttcccTcTTtccchhtttcccTcTTtccchtttcccTcTTtccchtttcccTcTTtccchhtttcccTcTTtccch

--------End Timer [apply mapping plan]:  0.0019991397857666016

[6], [5], [4], [2], [1], [0], [10], [5], [7], [6], [5], [6, 7], [5, 6], [7, 5], [6], [7, 6], [7], [6], [5], [5, 6], [7, 5], [6, 7], [6], [8], [4], [6], [4, 8], [6, 4], [8, 6], [4], [8, 4], [8], [4], [6], [6, 4], [8, 6], [4, 8], [4], [10], [9], [4], [9, 10], [4, 9], [10, 4], [9], [10, 9], [10], [9], [4], [4, 9], [10, 4], [9, 10], [4], [8], [4], [6], [4, 8], [6, 4], [8, 6], [4], [8, 4], [8], [4], [6], [6, 4], [8, 6], [4, 8], [6], [7], [6], [5], [6, 7], [5, 6], [7, 5], [6], [7, 6], [7], [6], [5], [5, 6], [7, 5], [6, 7], [5], [6], [8], [4], [6], [4, 8], [6, 4], [8, 6], [4], [8, 4], [8], [4], [6], [6, 4], [8, 6], [4, 8], [4], [10], [9], [4], [9, 10], [4, 9], [10, 4], [9], [10, 9], [10], [9], [4], [4, 9], [10, 4], [9, 10], [4], [8], [4], [6], [4, 8], [6, 4], [8, 6], [4], [8, 4], [8], [4], [6], [6, 4], [8, 6], [4, 8], [6], [0], [7], [6], [0], [6, 7], [0, 6], [7, 0], [6], [7, 6], [7], [6], [0], [0, 6], [7, 0], [6, 7], [6], [8], [5], [6], [5, 8], [6, 5], [8, 6], [5], [8, 5], [8], [5], [6], [6, 5], [8, 6], [5, 8], [5], [10], [9], [5], [9, 10], [5, 9], [10, 5], [9], [10, 9], [10], [9], [5], [5, 9], [10, 5], [9, 10], [5], [8], [5], [6], [5, 8], [6, 5], [8, 6], [5], [8, 5], [8], [5], [6], [6, 5], [8, 6], [5, 8], [6], [7], [6], [0], [6, 7], [0, 6], [7, 0], [6], [7, 6], [7], [6], [0], [0, 6], [7, 0], [6, 7], [0], [6], [8], [5], [6], [5, 8], [6, 5], [8, 6], [5], [8, 5], [8], [5], [6], [6, 5], [8, 6], [5, 8], [5], [10], [9], [5], [9, 10], [5, 9], [10, 5], [9], [10, 9], [10], [9], [5], [5, 9], [10, 5], [9, 10], [5], [8], [5], [6], [5, 8], [6, 5], [8, 6], [5], [8, 5], [8], [5], [6], [6, 5], [8, 6], [5, 8], [6], [7], [3], [7], [10], [3], [10, 7], [3, 10], [7, 3], [10], [7, 10], [7], [10], [3], [3, 10], [7, 3], [10, 7], [10], [9], [8], [10], [8, 9], [10, 8], [9, 10], [8], [9, 8], [9], [8], [10], [10, 8], [9, 10], [8, 9], [10], [7], [10], [3], [10, 7], [3, 10], [7, 3], [10], [7, 10], [7], [10], [3], [3, 10], [7, 3], [10, 7], [3], [10], [9], [8], [10], [8, 9], [10, 8], [9, 10], [8], [9, 8], [9], [8], [10], [10, 8], [9, 10], [8, 9], [10], [4], [9], [7], [4], [7, 9], [4, 7], [9, 4], [7], [9, 7], [9], [7], [4], [4, 7], [9, 4], [7, 9], [8], [9], [8], [4], [8, 9], [4, 8], [9, 4], [8], [9, 8], [9], [8], [4], [4, 8], [9, 4], [8, 9], [4], [0], [7], [9], [0], [9, 7], [0, 9], [7, 0], [9], [7, 9], [7], [9], [0], [0, 9], [7, 0], [9, 7], [9], [10], [8], [9], [8, 10], [9, 8], [10, 9], [8], [10, 8], [10], [8], [9], [9, 8], [10, 9], [8, 10], [9], [7], [9], [0], [9, 7], [0, 9], [7, 0], [9], [7, 9], [7], [9], [0], [0, 9], [7, 0], [9, 7], [0], [9], [10], [8], [9], [8, 10], [9, 8], [10, 9], [8], [10, 8], [10], [8], [9], [9, 8], [10, 9], [8, 10], [9], [9], [6], [7], [5], [6], [5, 7], [6, 5], [7, 6], [5], [7, 5], [7], [5], [6], [6, 5], [7, 6], [5, 7], [5], [8], [4], [5], [4, 8], [5, 4], [8, 5], [4], [8, 4], [8], [4], [5], [5, 4], [8, 5], [4, 8], [4], [10], [9], [4], [9, 10], [4, 9], [10, 4], [9], [10, 9], [10], [9], [4], [4, 9], [10, 4], [9, 10], [4], [8], [4], [5], [4, 8], [5, 4], [8, 5], [4], [8, 4], [8], [4], [5], [5, 4], [8, 5], [4, 8], [5], [7], [5], [6], [5, 7], [6, 5], [7, 6], [5], [7, 5], [7], [5], [6], [6, 5], [7, 6], [5, 7], [6], [5], [8], [4], [5], [4, 8], [5, 4], [8, 5], [4], [8, 4], [8], [4], [5], [5, 4], [8, 5], [4, 8], [4], [10], [9], [4], [9, 10], [4, 9], [10, 4], [9], [10, 9], [10], [9], [4], [4, 9], [10, 4], [9, 10], [4], [8], [4], [5], [4, 8], [5, 4], [8, 5], [4], [8, 4], [8], [4], [5], [5, 4], [8, 5], [4, 8], [7], [6], [5], [6, 7], [5, 6], [7, 5], [6], [7, 6], [7], [6], [5], [5, 6], [7, 5], [6, 7], [6], [8], [4], [6], [4, 8], [6, 4], [8, 6], [4], [8, 4], [8], [4], [6], [6, 4], [8, 6], [4, 8], [4], [10], [9], [4], [9, 10], [4, 9], [10, 4], [9], [10, 9], [10], [9], [4], [4, 9], [10, 4], [9, 10], [4], [8], [4], [6], [4, 8], [6, 4], [8, 6], [4], [8, 4], [8], [4], [6], [6, 4], [8, 6], [4, 8], [6], [7], [6], [5], [6, 7], [5, 6], [7, 5], [6], [7, 6], [7], [6], [5], [5, 6], [7, 5], [6, 7], [5], [6], [8], [4], [6], [4, 8], [6, 4], [8, 6], [4], [8, 4], [8], [4], [6], [6, 4], [8, 6], [4, 8], [4], [10], [9], [4], [9, 10], [4, 9], [10, 4], [9], [10, 9], [10], [9], [4], [4, 9], [10, 4], [9, 10], [4], [8], [4], [6], [4, 8], [6, 4], [8, 6], [4], [8, 4], [8], [4], [6], [6, 4], [8, 6], [4, 8], [6], [3], [9], [7], [3], [7, 9], [3, 7], [9, 3], [7], [9, 7], [9], [7], [3], [3, 7], [9, 3], [7, 9], [3], [1], [9], [7], [1], [7, 9], [1, 7], [9, 1], [7], [9, 7], [9], [7], [1], [1, 7], [9, 1], [7, 9], [7], [10], [1], [10, 7], [1, 10], [7, 1], [10], [7, 10], [7], [10], [1], [1, 10], [7, 1], [10, 7], [10], [9], [8], [10], [8, 9], [10, 8], [9, 10], [8], [9, 8], [9], [8], [10], [10, 8], [9, 10], [8, 9], [10], [7], [10], [1], [10, 7], [1, 10], [7, 1], [10], [7, 10], [7], [10], [1], [1, 10], [7, 1], [10, 7], [1], [10], [9], [8], [10], [8, 9], [10, 8], [9, 10], [8], [9, 8], [9], [8], [10], [10, 8], [9, 10], [8, 9], [10], [5], [10], [9], [5], [9, 10], [5, 9], [10, 5], [9], [10, 9], [10], [9], [5], [5, 9], [10, 5], [9, 10], [5], [6], [8], [7], [6], [7, 8], [6, 7], [8, 6], [7], [8, 7], [8], [7], [6], [6, 7], [8, 6], [7, 8], [7], [10], [9], [7], [9, 10], [7, 9], [10, 7], [9], [10, 9], [10], [9], [7], [7, 9], [10, 7], [9, 10], [7], [8], [7], [6], [7, 8], [6, 7], [8, 6], [7], [8, 7], [8], [7], [6], [6, 7], [8, 6], [7, 8], [6], [7], [10], [9], [7], [9, 10], [7, 9], [10, 7], [9], [10, 9], [10], [9], [7], [7, 9], [10, 7], [9, 10], [7], [2], [8], [7], [2], [7, 8], [2, 7], [8, 2], [7], [8, 7], [8], [7], [2], [2, 7], [8, 2], [7, 8], [7], [10], [9], [7], [9, 10], [7, 9], [10, 7], [9], [10, 9], [10], [9], [7], [7, 9], [10, 7], [9, 10], [7], [8], [7], [2], [7, 8], [2, 7], [8, 2], [7], [8, 7], [8], [7], [2], [2, 7], [8, 2], [7, 8], [2], [7], [10], [9], [7], [9, 10], [7, 9], [10, 7], [9], [10, 9], [10], [9], [7], [7, 9], [10, 7], [9, 10], [7], [0], [8], [7], [0], [7, 8], [0, 7], [8, 0], [7], [8, 7], [8], [7], [0], [0, 7], [8, 0], [7, 8], [7], [10], [9], [7], [9, 10], [7, 9], [10, 7], [9], [10, 9], [10], [9], [7], [7, 9], [10, 7], [9, 10], [7], [8], [7], [0], [7, 8], [0, 7], [8, 0], [7], [8, 7], [8], [7], [0], [0, 7], [8, 0], [7, 8], [0], [7], [10], [9], [7], [9, 10], [7, 9], [10, 7], [9], [10, 9], [10], [9], [7], [7, 9], [10, 7], [9, 10], [7], ----End Timer [Execute Mapping]:  2.2463724613189697

----Start Timer: [Execute Mapping]

****************************
*                          *
*   Pattern & Candidates   *
*                          *
****************************
--------Start Timer: [Find Candidates]

------------ 1 ------------
Pattern: 1
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 2 ------------
Pattern: 2
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 3 ------------
Pattern: 3
    cx [0, 1]
    cx [1, 2]
    cx [0, 1]
    => 
    cx [0, 2]
    cx [1, 2]


Candidates: 


------------ 4 ------------
Pattern: 4
    x [1]
    cx [0, 1]
    x [1]
    => 
    cx [0, 1]


Candidates: 


------------ 5 ------------
Pattern: 5
    cx [1, 2]
    cx [0, 1]
    cx [1, 2]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 6 ------------
Pattern: 6
    cx [1, 2]
    cx [0, 2]
    cx [0, 1]
    => 
    cx [0, 1]
    cx [1, 2]


Candidates: 


------------ 7 ------------
Pattern: 7
    ry(-pi/2) [2]
    ry(-pi/2) [2]
    => 
    ry(-pi) [2]


Candidates: 


------------ 8 ------------
Pattern: 8
    ry(pi/2) [2]
    ry(pi/2) [2]
    => 
    ry(pi) [2]


Candidates: 


------------ 9 ------------
Pattern: 9
    ry(pi/4) [2]
    ry(pi/4) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 10 ------------
Pattern: 10
    ry(-pi/4) [2]
    ry(-pi/4) [2]
    => 
    ry(-pi/2) [2]


Candidates: 


------------ 11 ------------
Pattern: 11
    ry(pi) [2]
    ry(pi) [2]
    => 
    ry(2pi) [2]


Candidates: 


------------ 12 ------------
Pattern: 12
    ry(-pi) [2]
    ry(-pi) [2]
    => 
    ry(-2pi) [2]


Candidates: 


------------ 13 ------------
Pattern: 13
    ry(-pi/4) [2]
    ry(pi/4) [2]
    => 
    I


Candidates: 


------------ 14 ------------
Pattern: 14
    ry(-pi/2) [2]
    ry(pi/2) [2]
    => 
    I


Candidates: 


------------ 15 ------------
Pattern: 15
    ry(pi/4) [2]
    ry(-pi/4) [2]
    => 
    I


Candidates: 


------------ 16 ------------
Pattern: 16
    ry(pi/2) [2]
    ry(-pi/2) [2]
    => 
    I


Candidates: 


------------ 17 ------------
Pattern: 17
    ry(-pi/4) [2]
    ry(pi/2) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 18 ------------
Pattern: 18
    ry(pi/2) [2]
    ry(-pi/4) [2]
    => 
    ry(pi/4) [2]


Candidates: 


------------ 19 ------------
Pattern: 19
    ry(-pi/2) [2]
    ry(pi) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 20 ------------
Pattern: 20
    ry(pi) [2]
    ry(-pi/2) [2]
    => 
    ry(pi/2) [2]


Candidates: 


------------ 21 ------------
Pattern: 21
    rx(-pi/2) [2]
    rx(-pi/2) [2]
    => 
    rx(-pi) [2]


Candidates: 


------------ 22 ------------
Pattern: 22
    rx(pi/2) [2]
    rx(pi/2) [2]
    => 
    rx(pi) [2]


Candidates: 


------------ 23 ------------
Pattern: 23
    rx(pi/4) [2]
    rx(pi/4) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 24 ------------
Pattern: 24
    rx(-pi/4) [2]
    rx(-pi/4) [2]
    => 
    rx(-pi/2) [2]


Candidates: 


------------ 25 ------------
Pattern: 25
    rx(pi) [2]
    rx(pi) [2]
    => 
    rx(2pi) [2]


Candidates: 


------------ 26 ------------
Pattern: 26
    rx(-pi) [2]
    rx(-pi) [2]
    => 
    rx(-2pi) [2]


Candidates: 


------------ 27 ------------
Pattern: 27
    rx(-pi/4) [2]
    rx(pi/4) [2]
    => 
    I


Candidates: 


------------ 28 ------------
Pattern: 28
    rx(-pi/2) [2]
    rx(pi/2) [2]
    => 
    I


Candidates: 


------------ 29 ------------
Pattern: 29
    rx(pi/4) [2]
    rx(-pi/4) [2]
    => 
    I


Candidates: 


------------ 30 ------------
Pattern: 30
    rx(pi/2) [2]
    rx(-pi/2) [2]
    => 
    I


Candidates: 


------------ 31 ------------
Pattern: 31
    rx(-pi/4) [2]
    rx(pi/2) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 32 ------------
Pattern: 32
    rx(pi/2) [2]
    rx(-pi/4) [2]
    => 
    rx(pi/4) [2]


Candidates: 


------------ 33 ------------
Pattern: 33
    rx(-pi/2) [2]
    rx(pi) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 34 ------------
Pattern: 34
    rx(pi) [2]
    rx(-pi/2) [2]
    => 
    rx(pi/2) [2]


Candidates: 


------------ 35 ------------
Pattern: 35
    rx(pi) [2]
    rx(-pi) [2]
    => 
    I


Candidates: 


------------ 36 ------------
Pattern: 36
    rx(-pi) [2]
    rx(pi) [2]
    => 
    I


Candidates: 


------------ 37 ------------
Pattern: 37
    ry(pi) [2]
    ry(-pi) [2]
    => 
    I


Candidates: 


------------ 38 ------------
Pattern: 38
    ry(-pi) [2]
    ry(pi) [2]
    => 
    I


Candidates: 


------------ 39 ------------
Pattern: 39
    id [0]
    => 
    I


Candidates: 


------------ 40 ------------
Pattern: 40
    h [0]
    h [0]
    => 
    I


Candidates: 


------------ 41 ------------
Pattern: 41
    t [0]
    tdg [0]
    => 
    I


Candidates: 


------------ 42 ------------
Pattern: 42
    s [0]
    sdg [0]
    => 
    I


Candidates: 


------------ 43 ------------
Pattern: 43
    x [0]
    x [0]
    => 
    I


Candidates: 


------------ 44 ------------
Pattern: 44
    y [0]
    y [0]
    => 
    I


Candidates: 


------------ 45 ------------
Pattern: 45
    z [0]
    z [0]
    => 
    I


Candidates: 


------------ 46 ------------
Pattern: 46
    cx [0, 1]
    cx [0, 1]
    => 
    I


Candidates: 


------------ 47 ------------
Pattern: 47
    s [0]
    s [0]
    => 
    z [0]


Candidates: 


------------ 48 ------------
Pattern: 48
    h [0]
    s [0]
    cx [1, 0]
    sdg [0]
    h [0]
    => 
    sdg [0]
    cx [1, 0]
    s [0]


Candidates: 


------------ 49 ------------
Pattern: 49
    h [0]
    sdg [0]
    cx [1, 0]
    s [0]
    h [0]
    => 
    s [0]
    cx [1, 0]
    sdg [0]


Candidates: 


------------ 50 ------------
Pattern: 50
    h [0]
    h [1]
    cx [0, 1]
    h [0]
    h [1]
    => 
    cx [1, 0]


Candidates: 


------------ 51 ------------
Pattern: 51
    h [0]
    z [0]
    h [0]
    => 
    x [0]


Candidates: 


------------ 52 ------------
Pattern: 52
    h [0]
    x [0]
    h [0]
    => 
    z [0]


Candidates: 


------------ 53 ------------
Pattern: 53
    h [0]
    y [0]
    h [0]
    => 
    y [0]


Candidates: 

--------End Timer [Find Candidates]:  2.034810781478882

--------Start Timer: [Generate Plans]

**********************
*                    *
*   Generate Plans   *
*                    *
**********************

Sorted Candidates: 

[]

..........

Total Plans: 0

--------End Timer [Generate Plans]:  0.0

There's no mapping plan.
[6], [5], [4], [2], [1], [0], [10], [5], [7], [6], [5], [6, 7], [5, 6], [7, 5], [6], [7, 6], [7], [6], [5], [5, 6], [7, 5], [6, 7], [6], [8], [4], [6], [4, 8], [6, 4], [8, 6], [4], [8, 4], [8], [4], [6], [6, 4], [8, 6], [4, 8], [4], [10], [9], [4], [9, 10], [4, 9], [10, 4], [9], [10, 9], [10], [9], [4], [4, 9], [10, 4], [9, 10], [4], [8], [4], [6], [4, 8], [6, 4], [8, 6], [4], [8, 4], [8], [4], [6], [6, 4], [8, 6], [4, 8], [6], [7], [6], [5], [6, 7], [5, 6], [7, 5], [6], [7, 6], [7], [6], [5], [5, 6], [7, 5], [6, 7], [5], [6], [8], [4], [6], [4, 8], [6, 4], [8, 6], [4], [8, 4], [8], [4], [6], [6, 4], [8, 6], [4, 8], [4], [10], [9], [4], [9, 10], [4, 9], [10, 4], [9], [10, 9], [10], [9], [4], [4, 9], [10, 4], [9, 10], [4], [8], [4], [6], [4, 8], [6, 4], [8, 6], [4], [8, 4], [8], [4], [6], [6, 4], [8, 6], [4, 8], [6], [0], [7], [6], [0], [6, 7], [0, 6], [7, 0], [6], [7, 6], [7], [6], [0], [0, 6], [7, 0], [6, 7], [6], [8], [5], [6], [5, 8], [6, 5], [8, 6], [5], [8, 5], [8], [5], [6], [6, 5], [8, 6], [5, 8], [5], [10], [9], [5], [9, 10], [5, 9], [10, 5], [9], [10, 9], [10], [9], [5], [5, 9], [10, 5], [9, 10], [5], [8], [5], [6], [5, 8], [6, 5], [8, 6], [5], [8, 5], [8], [5], [6], [6, 5], [8, 6], [5, 8], [6], [7], [6], [0], [6, 7], [0, 6], [7, 0], [6], [7, 6], [7], [6], [0], [0, 6], [7, 0], [6, 7], [0], [6], [8], [5], [6], [5, 8], [6, 5], [8, 6], [5], [8, 5], [8], [5], [6], [6, 5], [8, 6], [5, 8], [5], [10], [9], [5], [9, 10], [5, 9], [10, 5], [9], [10, 9], [10], [9], [5], [5, 9], [10, 5], [9, 10], [5], [8], [5], [6], [5, 8], [6, 5], [8, 6], [5], [8, 5], [8], [5], [6], [6, 5], [8, 6], [5, 8], [6], [7], [3], [7], [10], [3], [10, 7], [3, 10], [7, 3], [10], [7, 10], [7], [10], [3], [3, 10], [7, 3], [10, 7], [10], [9], [8], [10], [8, 9], [10, 8], [9, 10], [8], [9, 8], [9], [8], [10], [10, 8], [9, 10], [8, 9], [10], [7], [10], [3], [10, 7], [3, 10], [7, 3], [10], [7, 10], [7], [10], [3], [3, 10], [7, 3], [10, 7], [3], [10], [9], [8], [10], [8, 9], [10, 8], [9, 10], [8], [9, 8], [9], [8], [10], [10, 8], [9, 10], [8, 9], [10], [4], [9], [7], [4], [7, 9], [4, 7], [9, 4], [7], [9, 7], [9], [7], [4], [4, 7], [9, 4], [7, 9], [8], [9], [8], [4], [8, 9], [4, 8], [9, 4], [8], [9, 8], [9], [8], [4], [4, 8], [9, 4], [8, 9], [4], [0], [7], [9], [0], [9, 7], [0, 9], [7, 0], [9], [7, 9], [7], [9], [0], [0, 9], [7, 0], [9, 7], [9], [10], [8], [9], [8, 10], [9, 8], [10, 9], [8], [10, 8], [10], [8], [9], [9, 8], [10, 9], [8, 10], [9], [7], [9], [0], [9, 7], [0, 9], [7, 0], [9], [7, 9], [7], [9], [0], [0, 9], [7, 0], [9, 7], [0], [9], [10], [8], [9], [8, 10], [9, 8], [10, 9], [8], [10, 8], [10], [8], [9], [9, 8], [10, 9], [8, 10], [9], [9], [6], [7], [5], [6], [5, 7], [6, 5], [7, 6], [5], [7, 5], [7], [5], [6], [6, 5], [7, 6], [5, 7], [5], [8], [4], [5], [4, 8], [5, 4], [8, 5], [4], [8, 4], [8], [4], [5], [5, 4], [8, 5], [4, 8], [4], [10], [9], [4], [9, 10], [4, 9], [10, 4], [9], [10, 9], [10], [9], [4], [4, 9], [10, 4], [9, 10], [4], [8], [4], [5], [4, 8], [5, 4], [8, 5], [4], [8, 4], [8], [4], [5], [5, 4], [8, 5], [4, 8], [5], [7], [5], [6], [5, 7], [6, 5], [7, 6], [5], [7, 5], [7], [5], [6], [6, 5], [7, 6], [5, 7], [6], [5], [8], [4], [5], [4, 8], [5, 4], [8, 5], [4], [8, 4], [8], [4], [5], [5, 4], [8, 5], [4, 8], [4], [10], [9], [4], [9, 10], [4, 9], [10, 4], [9], [10, 9], [10], [9], [4], [4, 9], [10, 4], [9, 10], [4], [8], [4], [5], [4, 8], [5, 4], [8, 5], [4], [8, 4], [8], [4], [5], [5, 4], [8, 5], [4, 8], [7], [6], [5], [6, 7], [5, 6], [7, 5], [6], [7, 6], [7], [6], [5], [5, 6], [7, 5], [6, 7], [6], [8], [4], [6], [4, 8], [6, 4], [8, 6], [4], [8, 4], [8], [4], [6], [6, 4], [8, 6], [4, 8], [4], [10], [9], [4], [9, 10], [4, 9], [10, 4], [9], [10, 9], [10], [9], [4], [4, 9], [10, 4], [9, 10], [4], [8], [4], [6], [4, 8], [6, 4], [8, 6], [4], [8, 4], [8], [4], [6], [6, 4], [8, 6], [4, 8], [6], [7], [6], [5], [6, 7], [5, 6], [7, 5], [6], [7, 6], [7], [6], [5], [5, 6], [7, 5], [6, 7], [5], [6], [8], [4], [6], [4, 8], [6, 4], [8, 6], [4], [8, 4], [8], [4], [6], [6, 4], [8, 6], [4, 8], [4], [10], [9], [4], [9, 10], [4, 9], [10, 4], [9], [10, 9], [10], [9], [4], [4, 9], [10, 4], [9, 10], [4], [8], [4], [6], [4, 8], [6, 4], [8, 6], [4], [8, 4], [8], [4], [6], [6, 4], [8, 6], [4, 8], [6], [3], [9], [7], [3], [7, 9], [3, 7], [9, 3], [7], [9, 7], [9], [7], [3], [3, 7], [9, 3], [7, 9], [3], [1], [9], [7], [1], [7, 9], [1, 7], [9, 1], [7], [9, 7], [9], [7], [1], [1, 7], [9, 1], [7, 9], [7], [10], [1], [10, 7], [1, 10], [7, 1], [10], [7, 10], [7], [10], [1], [1, 10], [7, 1], [10, 7], [10], [9], [8], [10], [8, 9], [10, 8], [9, 10], [8], [9, 8], [9], [8], [10], [10, 8], [9, 10], [8, 9], [10], [7], [10], [1], [10, 7], [1, 10], [7, 1], [10], [7, 10], [7], [10], [1], [1, 10], [7, 1], [10, 7], [1], [10], [9], [8], [10], [8, 9], [10, 8], [9, 10], [8], [9, 8], [9], [8], [10], [10, 8], [9, 10], [8, 9], [10], [5], [10], [9], [5], [9, 10], [5, 9], [10, 5], [9], [10, 9], [10], [9], [5], [5, 9], [10, 5], [9, 10], [5], [6], [8], [7], [6], [7, 8], [6, 7], [8, 6], [7], [8, 7], [8], [7], [6], [6, 7], [8, 6], [7, 8], [7], [10], [9], [7], [9, 10], [7, 9], [10, 7], [9], [10, 9], [10], [9], [7], [7, 9], [10, 7], [9, 10], [7], [8], [7], [6], [7, 8], [6, 7], [8, 6], [7], [8, 7], [8], [7], [6], [6, 7], [8, 6], [7, 8], [6], [7], [10], [9], [7], [9, 10], [7, 9], [10, 7], [9], [10, 9], [10], [9], [7], [7, 9], [10, 7], [9, 10], [7], [2], [8], [7], [2], [7, 8], [2, 7], [8, 2], [7], [8, 7], [8], [7], [2], [2, 7], [8, 2], [7, 8], [7], [10], [9], [7], [9, 10], [7, 9], [10, 7], [9], [10, 9], [10], [9], [7], [7, 9], [10, 7], [9, 10], [7], [8], [7], [2], [7, 8], [2, 7], [8, 2], [7], [8, 7], [8], [7], [2], [2, 7], [8, 2], [7, 8], [2], [7], [10], [9], [7], [9, 10], [7, 9], [10, 7], [9], [10, 9], [10], [9], [7], [7, 9], [10, 7], [9, 10], [7], [0], [8], [7], [0], [7, 8], [0, 7], [8, 0], [7], [8, 7], [8], [7], [0], [0, 7], [8, 0], [7, 8], [7], [10], [9], [7], [9, 10], [7, 9], [10, 7], [9], [10, 9], [10], [9], [7], [7, 9], [10, 7], [9, 10], [7], [8], [7], [0], [7, 8], [0, 7], [8, 0], [7], [8, 7], [8], [7], [0], [0, 7], [8, 0], [7, 8], [0], [7], [10], [9], [7], [9, 10], [7, 9], [10, 7], [9], [10, 9], [10], [9], [7], [7, 9], [10, 7], [9, 10], [7], ----End Timer [Execute Mapping]:  2.0358099937438965

---------------
>> Origin circuit: 
Circuit Info: 
 - circuit: x-x-x-x-x-x-x-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-x-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-x-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-x-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h 
     => total size: [986] (IBM)
 --------------------
 - qubits_num: 11, using gates: [t,tdg,h,cx,x]
 - circuit depth: 514 - (medium)
 - circuit cycle: 1413


>> Solved circuit: 
Circuit Info: 
 - circuit: x-x-x-x-x-x-x-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-x-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-x-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-x-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h-h-t-t-t-cx-cx-cx-tdg-cx-tdg-tdg-t-cx-cx-cx-h 
     => total size: [944] (U)
 --------------------
 - qubits_num: 11, using gates: [t,tdg,h,cx,x]
 - circuit depth: 512 - (medium)
 - circuit cycle: 1371

Reduced: 
 - size: 42 (4.26%)
 - depth: 2 (0.39%)

